/* Minification failed. Returning unminified contents.
(2556,385-392): run-time error JS1019: Can't have 'break' outside of loop: break a
(2556,345-352): run-time error JS1019: Can't have 'break' outside of loop: break a
(2434,421-428): run-time error JS1019: Can't have 'break' outside of loop: break a
 */
/*! jQuery v3.2.1 | (c) JS Foundation and other contributors | jquery.org/license */
!function(a,b){"use strict";"object"==typeof module&&"object"==typeof module.exports?module.exports=a.document?b(a,!0):function(a){if(!a.document)throw new Error("jQuery requires a window with a document");return b(a)}:b(a)}("undefined"!=typeof window?window:this,function(a,b){"use strict";var c=[],d=a.document,e=Object.getPrototypeOf,f=c.slice,g=c.concat,h=c.push,i=c.indexOf,j={},k=j.toString,l=j.hasOwnProperty,m=l.toString,n=m.call(Object),o={};function p(a,b){b=b||d;var c=b.createElement("script");c.text=a,b.head.appendChild(c).parentNode.removeChild(c)}var q="3.2.1",r=function(a,b){return new r.fn.init(a,b)},s=/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,t=/^-ms-/,u=/-([a-z])/g,v=function(a,b){return b.toUpperCase()};r.fn=r.prototype={jquery:q,constructor:r,length:0,toArray:function(){return f.call(this)},get:function(a){return null==a?f.call(this):a<0?this[a+this.length]:this[a]},pushStack:function(a){var b=r.merge(this.constructor(),a);return b.prevObject=this,b},each:function(a){return r.each(this,a)},map:function(a){return this.pushStack(r.map(this,function(b,c){return a.call(b,c,b)}))},slice:function(){return this.pushStack(f.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},eq:function(a){var b=this.length,c=+a+(a<0?b:0);return this.pushStack(c>=0&&c<b?[this[c]]:[])},end:function(){return this.prevObject||this.constructor()},push:h,sort:c.sort,splice:c.splice},r.extend=r.fn.extend=function(){var a,b,c,d,e,f,g=arguments[0]||{},h=1,i=arguments.length,j=!1;for("boolean"==typeof g&&(j=g,g=arguments[h]||{},h++),"object"==typeof g||r.isFunction(g)||(g={}),h===i&&(g=this,h--);h<i;h++)if(null!=(a=arguments[h]))for(b in a)c=g[b],d=a[b],g!==d&&(j&&d&&(r.isPlainObject(d)||(e=Array.isArray(d)))?(e?(e=!1,f=c&&Array.isArray(c)?c:[]):f=c&&r.isPlainObject(c)?c:{},g[b]=r.extend(j,f,d)):void 0!==d&&(g[b]=d));return g},r.extend({expando:"jQuery"+(q+Math.random()).replace(/\D/g,""),isReady:!0,error:function(a){throw new Error(a)},noop:function(){},isFunction:function(a){return"function"===r.type(a)},isWindow:function(a){return null!=a&&a===a.window},isNumeric:function(a){var b=r.type(a);return("number"===b||"string"===b)&&!isNaN(a-parseFloat(a))},isPlainObject:function(a){var b,c;return!(!a||"[object Object]"!==k.call(a))&&(!(b=e(a))||(c=l.call(b,"constructor")&&b.constructor,"function"==typeof c&&m.call(c)===n))},isEmptyObject:function(a){var b;for(b in a)return!1;return!0},type:function(a){return null==a?a+"":"object"==typeof a||"function"==typeof a?j[k.call(a)]||"object":typeof a},globalEval:function(a){p(a)},camelCase:function(a){return a.replace(t,"ms-").replace(u,v)},each:function(a,b){var c,d=0;if(w(a)){for(c=a.length;d<c;d++)if(b.call(a[d],d,a[d])===!1)break}else for(d in a)if(b.call(a[d],d,a[d])===!1)break;return a},trim:function(a){return null==a?"":(a+"").replace(s,"")},makeArray:function(a,b){var c=b||[];return null!=a&&(w(Object(a))?r.merge(c,"string"==typeof a?[a]:a):h.call(c,a)),c},inArray:function(a,b,c){return null==b?-1:i.call(b,a,c)},merge:function(a,b){for(var c=+b.length,d=0,e=a.length;d<c;d++)a[e++]=b[d];return a.length=e,a},grep:function(a,b,c){for(var d,e=[],f=0,g=a.length,h=!c;f<g;f++)d=!b(a[f],f),d!==h&&e.push(a[f]);return e},map:function(a,b,c){var d,e,f=0,h=[];if(w(a))for(d=a.length;f<d;f++)e=b(a[f],f,c),null!=e&&h.push(e);else for(f in a)e=b(a[f],f,c),null!=e&&h.push(e);return g.apply([],h)},guid:1,proxy:function(a,b){var c,d,e;if("string"==typeof b&&(c=a[b],b=a,a=c),r.isFunction(a))return d=f.call(arguments,2),e=function(){return a.apply(b||this,d.concat(f.call(arguments)))},e.guid=a.guid=a.guid||r.guid++,e},now:Date.now,support:o}),"function"==typeof Symbol&&(r.fn[Symbol.iterator]=c[Symbol.iterator]),r.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "),function(a,b){j["[object "+b+"]"]=b.toLowerCase()});function w(a){var b=!!a&&"length"in a&&a.length,c=r.type(a);return"function"!==c&&!r.isWindow(a)&&("array"===c||0===b||"number"==typeof b&&b>0&&b-1 in a)}var x=function(a){var b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u="sizzle"+1*new Date,v=a.document,w=0,x=0,y=ha(),z=ha(),A=ha(),B=function(a,b){return a===b&&(l=!0),0},C={}.hasOwnProperty,D=[],E=D.pop,F=D.push,G=D.push,H=D.slice,I=function(a,b){for(var c=0,d=a.length;c<d;c++)if(a[c]===b)return c;return-1},J="checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",K="[\\x20\\t\\r\\n\\f]",L="(?:\\\\.|[\\w-]|[^\0-\\xa0])+",M="\\["+K+"*("+L+")(?:"+K+"*([*^$|!~]?=)"+K+"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|("+L+"))|)"+K+"*\\]",N=":("+L+")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|"+M+")*)|.*)\\)|)",O=new RegExp(K+"+","g"),P=new RegExp("^"+K+"+|((?:^|[^\\\\])(?:\\\\.)*)"+K+"+$","g"),Q=new RegExp("^"+K+"*,"+K+"*"),R=new RegExp("^"+K+"*([>+~]|"+K+")"+K+"*"),S=new RegExp("="+K+"*([^\\]'\"]*?)"+K+"*\\]","g"),T=new RegExp(N),U=new RegExp("^"+L+"$"),V={ID:new RegExp("^#("+L+")"),CLASS:new RegExp("^\\.("+L+")"),TAG:new RegExp("^("+L+"|[*])"),ATTR:new RegExp("^"+M),PSEUDO:new RegExp("^"+N),CHILD:new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\("+K+"*(even|odd|(([+-]|)(\\d*)n|)"+K+"*(?:([+-]|)"+K+"*(\\d+)|))"+K+"*\\)|)","i"),bool:new RegExp("^(?:"+J+")$","i"),needsContext:new RegExp("^"+K+"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\("+K+"*((?:-\\d)?\\d*)"+K+"*\\)|)(?=[^-]|$)","i")},W=/^(?:input|select|textarea|button)$/i,X=/^h\d$/i,Y=/^[^{]+\{\s*\[native \w/,Z=/^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,$=/[+~]/,_=new RegExp("\\\\([\\da-f]{1,6}"+K+"?|("+K+")|.)","ig"),aa=function(a,b,c){var d="0x"+b-65536;return d!==d||c?b:d<0?String.fromCharCode(d+65536):String.fromCharCode(d>>10|55296,1023&d|56320)},ba=/([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g,ca=function(a,b){return b?"\0"===a?"\ufffd":a.slice(0,-1)+"\\"+a.charCodeAt(a.length-1).toString(16)+" ":"\\"+a},da=function(){m()},ea=ta(function(a){return a.disabled===!0&&("form"in a||"label"in a)},{dir:"parentNode",next:"legend"});try{G.apply(D=H.call(v.childNodes),v.childNodes),D[v.childNodes.length].nodeType}catch(fa){G={apply:D.length?function(a,b){F.apply(a,H.call(b))}:function(a,b){var c=a.length,d=0;while(a[c++]=b[d++]);a.length=c-1}}}function ga(a,b,d,e){var f,h,j,k,l,o,r,s=b&&b.ownerDocument,w=b?b.nodeType:9;if(d=d||[],"string"!=typeof a||!a||1!==w&&9!==w&&11!==w)return d;if(!e&&((b?b.ownerDocument||b:v)!==n&&m(b),b=b||n,p)){if(11!==w&&(l=Z.exec(a)))if(f=l[1]){if(9===w){if(!(j=b.getElementById(f)))return d;if(j.id===f)return d.push(j),d}else if(s&&(j=s.getElementById(f))&&t(b,j)&&j.id===f)return d.push(j),d}else{if(l[2])return G.apply(d,b.getElementsByTagName(a)),d;if((f=l[3])&&c.getElementsByClassName&&b.getElementsByClassName)return G.apply(d,b.getElementsByClassName(f)),d}if(c.qsa&&!A[a+" "]&&(!q||!q.test(a))){if(1!==w)s=b,r=a;else if("object"!==b.nodeName.toLowerCase()){(k=b.getAttribute("id"))?k=k.replace(ba,ca):b.setAttribute("id",k=u),o=g(a),h=o.length;while(h--)o[h]="#"+k+" "+sa(o[h]);r=o.join(","),s=$.test(a)&&qa(b.parentNode)||b}if(r)try{return G.apply(d,s.querySelectorAll(r)),d}catch(x){}finally{k===u&&b.removeAttribute("id")}}}return i(a.replace(P,"$1"),b,d,e)}function ha(){var a=[];function b(c,e){return a.push(c+" ")>d.cacheLength&&delete b[a.shift()],b[c+" "]=e}return b}function ia(a){return a[u]=!0,a}function ja(a){var b=n.createElement("fieldset");try{return!!a(b)}catch(c){return!1}finally{b.parentNode&&b.parentNode.removeChild(b),b=null}}function ka(a,b){var c=a.split("|"),e=c.length;while(e--)d.attrHandle[c[e]]=b}function la(a,b){var c=b&&a,d=c&&1===a.nodeType&&1===b.nodeType&&a.sourceIndex-b.sourceIndex;if(d)return d;if(c)while(c=c.nextSibling)if(c===b)return-1;return a?1:-1}function ma(a){return function(b){var c=b.nodeName.toLowerCase();return"input"===c&&b.type===a}}function na(a){return function(b){var c=b.nodeName.toLowerCase();return("input"===c||"button"===c)&&b.type===a}}function oa(a){return function(b){return"form"in b?b.parentNode&&b.disabled===!1?"label"in b?"label"in b.parentNode?b.parentNode.disabled===a:b.disabled===a:b.isDisabled===a||b.isDisabled!==!a&&ea(b)===a:b.disabled===a:"label"in b&&b.disabled===a}}function pa(a){return ia(function(b){return b=+b,ia(function(c,d){var e,f=a([],c.length,b),g=f.length;while(g--)c[e=f[g]]&&(c[e]=!(d[e]=c[e]))})})}function qa(a){return a&&"undefined"!=typeof a.getElementsByTagName&&a}c=ga.support={},f=ga.isXML=function(a){var b=a&&(a.ownerDocument||a).documentElement;return!!b&&"HTML"!==b.nodeName},m=ga.setDocument=function(a){var b,e,g=a?a.ownerDocument||a:v;return g!==n&&9===g.nodeType&&g.documentElement?(n=g,o=n.documentElement,p=!f(n),v!==n&&(e=n.defaultView)&&e.top!==e&&(e.addEventListener?e.addEventListener("unload",da,!1):e.attachEvent&&e.attachEvent("onunload",da)),c.attributes=ja(function(a){return a.className="i",!a.getAttribute("className")}),c.getElementsByTagName=ja(function(a){return a.appendChild(n.createComment("")),!a.getElementsByTagName("*").length}),c.getElementsByClassName=Y.test(n.getElementsByClassName),c.getById=ja(function(a){return o.appendChild(a).id=u,!n.getElementsByName||!n.getElementsByName(u).length}),c.getById?(d.filter.ID=function(a){var b=a.replace(_,aa);return function(a){return a.getAttribute("id")===b}},d.find.ID=function(a,b){if("undefined"!=typeof b.getElementById&&p){var c=b.getElementById(a);return c?[c]:[]}}):(d.filter.ID=function(a){var b=a.replace(_,aa);return function(a){var c="undefined"!=typeof a.getAttributeNode&&a.getAttributeNode("id");return c&&c.value===b}},d.find.ID=function(a,b){if("undefined"!=typeof b.getElementById&&p){var c,d,e,f=b.getElementById(a);if(f){if(c=f.getAttributeNode("id"),c&&c.value===a)return[f];e=b.getElementsByName(a),d=0;while(f=e[d++])if(c=f.getAttributeNode("id"),c&&c.value===a)return[f]}return[]}}),d.find.TAG=c.getElementsByTagName?function(a,b){return"undefined"!=typeof b.getElementsByTagName?b.getElementsByTagName(a):c.qsa?b.querySelectorAll(a):void 0}:function(a,b){var c,d=[],e=0,f=b.getElementsByTagName(a);if("*"===a){while(c=f[e++])1===c.nodeType&&d.push(c);return d}return f},d.find.CLASS=c.getElementsByClassName&&function(a,b){if("undefined"!=typeof b.getElementsByClassName&&p)return b.getElementsByClassName(a)},r=[],q=[],(c.qsa=Y.test(n.querySelectorAll))&&(ja(function(a){o.appendChild(a).innerHTML="<a id='"+u+"'></a><select id='"+u+"-\r\\' msallowcapture=''><option selected=''></option></select>",a.querySelectorAll("[msallowcapture^='']").length&&q.push("[*^$]="+K+"*(?:''|\"\")"),a.querySelectorAll("[selected]").length||q.push("\\["+K+"*(?:value|"+J+")"),a.querySelectorAll("[id~="+u+"-]").length||q.push("~="),a.querySelectorAll(":checked").length||q.push(":checked"),a.querySelectorAll("a#"+u+"+*").length||q.push(".#.+[+~]")}),ja(function(a){a.innerHTML="<a href='' disabled='disabled'></a><select disabled='disabled'><option/></select>";var b=n.createElement("input");b.setAttribute("type","hidden"),a.appendChild(b).setAttribute("name","D"),a.querySelectorAll("[name=d]").length&&q.push("name"+K+"*[*^$|!~]?="),2!==a.querySelectorAll(":enabled").length&&q.push(":enabled",":disabled"),o.appendChild(a).disabled=!0,2!==a.querySelectorAll(":disabled").length&&q.push(":enabled",":disabled"),a.querySelectorAll("*,:x"),q.push(",.*:")})),(c.matchesSelector=Y.test(s=o.matches||o.webkitMatchesSelector||o.mozMatchesSelector||o.oMatchesSelector||o.msMatchesSelector))&&ja(function(a){c.disconnectedMatch=s.call(a,"*"),s.call(a,"[s!='']:x"),r.push("!=",N)}),q=q.length&&new RegExp(q.join("|")),r=r.length&&new RegExp(r.join("|")),b=Y.test(o.compareDocumentPosition),t=b||Y.test(o.contains)?function(a,b){var c=9===a.nodeType?a.documentElement:a,d=b&&b.parentNode;return a===d||!(!d||1!==d.nodeType||!(c.contains?c.contains(d):a.compareDocumentPosition&&16&a.compareDocumentPosition(d)))}:function(a,b){if(b)while(b=b.parentNode)if(b===a)return!0;return!1},B=b?function(a,b){if(a===b)return l=!0,0;var d=!a.compareDocumentPosition-!b.compareDocumentPosition;return d?d:(d=(a.ownerDocument||a)===(b.ownerDocument||b)?a.compareDocumentPosition(b):1,1&d||!c.sortDetached&&b.compareDocumentPosition(a)===d?a===n||a.ownerDocument===v&&t(v,a)?-1:b===n||b.ownerDocument===v&&t(v,b)?1:k?I(k,a)-I(k,b):0:4&d?-1:1)}:function(a,b){if(a===b)return l=!0,0;var c,d=0,e=a.parentNode,f=b.parentNode,g=[a],h=[b];if(!e||!f)return a===n?-1:b===n?1:e?-1:f?1:k?I(k,a)-I(k,b):0;if(e===f)return la(a,b);c=a;while(c=c.parentNode)g.unshift(c);c=b;while(c=c.parentNode)h.unshift(c);while(g[d]===h[d])d++;return d?la(g[d],h[d]):g[d]===v?-1:h[d]===v?1:0},n):n},ga.matches=function(a,b){return ga(a,null,null,b)},ga.matchesSelector=function(a,b){if((a.ownerDocument||a)!==n&&m(a),b=b.replace(S,"='$1']"),c.matchesSelector&&p&&!A[b+" "]&&(!r||!r.test(b))&&(!q||!q.test(b)))try{var d=s.call(a,b);if(d||c.disconnectedMatch||a.document&&11!==a.document.nodeType)return d}catch(e){}return ga(b,n,null,[a]).length>0},ga.contains=function(a,b){return(a.ownerDocument||a)!==n&&m(a),t(a,b)},ga.attr=function(a,b){(a.ownerDocument||a)!==n&&m(a);var e=d.attrHandle[b.toLowerCase()],f=e&&C.call(d.attrHandle,b.toLowerCase())?e(a,b,!p):void 0;return void 0!==f?f:c.attributes||!p?a.getAttribute(b):(f=a.getAttributeNode(b))&&f.specified?f.value:null},ga.escape=function(a){return(a+"").replace(ba,ca)},ga.error=function(a){throw new Error("Syntax error, unrecognized expression: "+a)},ga.uniqueSort=function(a){var b,d=[],e=0,f=0;if(l=!c.detectDuplicates,k=!c.sortStable&&a.slice(0),a.sort(B),l){while(b=a[f++])b===a[f]&&(e=d.push(f));while(e--)a.splice(d[e],1)}return k=null,a},e=ga.getText=function(a){var b,c="",d=0,f=a.nodeType;if(f){if(1===f||9===f||11===f){if("string"==typeof a.textContent)return a.textContent;for(a=a.firstChild;a;a=a.nextSibling)c+=e(a)}else if(3===f||4===f)return a.nodeValue}else while(b=a[d++])c+=e(b);return c},d=ga.selectors={cacheLength:50,createPseudo:ia,match:V,attrHandle:{},find:{},relative:{">":{dir:"parentNode",first:!0}," ":{dir:"parentNode"},"+":{dir:"previousSibling",first:!0},"~":{dir:"previousSibling"}},preFilter:{ATTR:function(a){return a[1]=a[1].replace(_,aa),a[3]=(a[3]||a[4]||a[5]||"").replace(_,aa),"~="===a[2]&&(a[3]=" "+a[3]+" "),a.slice(0,4)},CHILD:function(a){return a[1]=a[1].toLowerCase(),"nth"===a[1].slice(0,3)?(a[3]||ga.error(a[0]),a[4]=+(a[4]?a[5]+(a[6]||1):2*("even"===a[3]||"odd"===a[3])),a[5]=+(a[7]+a[8]||"odd"===a[3])):a[3]&&ga.error(a[0]),a},PSEUDO:function(a){var b,c=!a[6]&&a[2];return V.CHILD.test(a[0])?null:(a[3]?a[2]=a[4]||a[5]||"":c&&T.test(c)&&(b=g(c,!0))&&(b=c.indexOf(")",c.length-b)-c.length)&&(a[0]=a[0].slice(0,b),a[2]=c.slice(0,b)),a.slice(0,3))}},filter:{TAG:function(a){var b=a.replace(_,aa).toLowerCase();return"*"===a?function(){return!0}:function(a){return a.nodeName&&a.nodeName.toLowerCase()===b}},CLASS:function(a){var b=y[a+" "];return b||(b=new RegExp("(^|"+K+")"+a+"("+K+"|$)"))&&y(a,function(a){return b.test("string"==typeof a.className&&a.className||"undefined"!=typeof a.getAttribute&&a.getAttribute("class")||"")})},ATTR:function(a,b,c){return function(d){var e=ga.attr(d,a);return null==e?"!="===b:!b||(e+="","="===b?e===c:"!="===b?e!==c:"^="===b?c&&0===e.indexOf(c):"*="===b?c&&e.indexOf(c)>-1:"$="===b?c&&e.slice(-c.length)===c:"~="===b?(" "+e.replace(O," ")+" ").indexOf(c)>-1:"|="===b&&(e===c||e.slice(0,c.length+1)===c+"-"))}},CHILD:function(a,b,c,d,e){var f="nth"!==a.slice(0,3),g="last"!==a.slice(-4),h="of-type"===b;return 1===d&&0===e?function(a){return!!a.parentNode}:function(b,c,i){var j,k,l,m,n,o,p=f!==g?"nextSibling":"previousSibling",q=b.parentNode,r=h&&b.nodeName.toLowerCase(),s=!i&&!h,t=!1;if(q){if(f){while(p){m=b;while(m=m[p])if(h?m.nodeName.toLowerCase()===r:1===m.nodeType)return!1;o=p="only"===a&&!o&&"nextSibling"}return!0}if(o=[g?q.firstChild:q.lastChild],g&&s){m=q,l=m[u]||(m[u]={}),k=l[m.uniqueID]||(l[m.uniqueID]={}),j=k[a]||[],n=j[0]===w&&j[1],t=n&&j[2],m=n&&q.childNodes[n];while(m=++n&&m&&m[p]||(t=n=0)||o.pop())if(1===m.nodeType&&++t&&m===b){k[a]=[w,n,t];break}}else if(s&&(m=b,l=m[u]||(m[u]={}),k=l[m.uniqueID]||(l[m.uniqueID]={}),j=k[a]||[],n=j[0]===w&&j[1],t=n),t===!1)while(m=++n&&m&&m[p]||(t=n=0)||o.pop())if((h?m.nodeName.toLowerCase()===r:1===m.nodeType)&&++t&&(s&&(l=m[u]||(m[u]={}),k=l[m.uniqueID]||(l[m.uniqueID]={}),k[a]=[w,t]),m===b))break;return t-=e,t===d||t%d===0&&t/d>=0}}},PSEUDO:function(a,b){var c,e=d.pseudos[a]||d.setFilters[a.toLowerCase()]||ga.error("unsupported pseudo: "+a);return e[u]?e(b):e.length>1?(c=[a,a,"",b],d.setFilters.hasOwnProperty(a.toLowerCase())?ia(function(a,c){var d,f=e(a,b),g=f.length;while(g--)d=I(a,f[g]),a[d]=!(c[d]=f[g])}):function(a){return e(a,0,c)}):e}},pseudos:{not:ia(function(a){var b=[],c=[],d=h(a.replace(P,"$1"));return d[u]?ia(function(a,b,c,e){var f,g=d(a,null,e,[]),h=a.length;while(h--)(f=g[h])&&(a[h]=!(b[h]=f))}):function(a,e,f){return b[0]=a,d(b,null,f,c),b[0]=null,!c.pop()}}),has:ia(function(a){return function(b){return ga(a,b).length>0}}),contains:ia(function(a){return a=a.replace(_,aa),function(b){return(b.textContent||b.innerText||e(b)).indexOf(a)>-1}}),lang:ia(function(a){return U.test(a||"")||ga.error("unsupported lang: "+a),a=a.replace(_,aa).toLowerCase(),function(b){var c;do if(c=p?b.lang:b.getAttribute("xml:lang")||b.getAttribute("lang"))return c=c.toLowerCase(),c===a||0===c.indexOf(a+"-");while((b=b.parentNode)&&1===b.nodeType);return!1}}),target:function(b){var c=a.location&&a.location.hash;return c&&c.slice(1)===b.id},root:function(a){return a===o},focus:function(a){return a===n.activeElement&&(!n.hasFocus||n.hasFocus())&&!!(a.type||a.href||~a.tabIndex)},enabled:oa(!1),disabled:oa(!0),checked:function(a){var b=a.nodeName.toLowerCase();return"input"===b&&!!a.checked||"option"===b&&!!a.selected},selected:function(a){return a.parentNode&&a.parentNode.selectedIndex,a.selected===!0},empty:function(a){for(a=a.firstChild;a;a=a.nextSibling)if(a.nodeType<6)return!1;return!0},parent:function(a){return!d.pseudos.empty(a)},header:function(a){return X.test(a.nodeName)},input:function(a){return W.test(a.nodeName)},button:function(a){var b=a.nodeName.toLowerCase();return"input"===b&&"button"===a.type||"button"===b},text:function(a){var b;return"input"===a.nodeName.toLowerCase()&&"text"===a.type&&(null==(b=a.getAttribute("type"))||"text"===b.toLowerCase())},first:pa(function(){return[0]}),last:pa(function(a,b){return[b-1]}),eq:pa(function(a,b,c){return[c<0?c+b:c]}),even:pa(function(a,b){for(var c=0;c<b;c+=2)a.push(c);return a}),odd:pa(function(a,b){for(var c=1;c<b;c+=2)a.push(c);return a}),lt:pa(function(a,b,c){for(var d=c<0?c+b:c;--d>=0;)a.push(d);return a}),gt:pa(function(a,b,c){for(var d=c<0?c+b:c;++d<b;)a.push(d);return a})}},d.pseudos.nth=d.pseudos.eq;for(b in{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})d.pseudos[b]=ma(b);for(b in{submit:!0,reset:!0})d.pseudos[b]=na(b);function ra(){}ra.prototype=d.filters=d.pseudos,d.setFilters=new ra,g=ga.tokenize=function(a,b){var c,e,f,g,h,i,j,k=z[a+" "];if(k)return b?0:k.slice(0);h=a,i=[],j=d.preFilter;while(h){c&&!(e=Q.exec(h))||(e&&(h=h.slice(e[0].length)||h),i.push(f=[])),c=!1,(e=R.exec(h))&&(c=e.shift(),f.push({value:c,type:e[0].replace(P," ")}),h=h.slice(c.length));for(g in d.filter)!(e=V[g].exec(h))||j[g]&&!(e=j[g](e))||(c=e.shift(),f.push({value:c,type:g,matches:e}),h=h.slice(c.length));if(!c)break}return b?h.length:h?ga.error(a):z(a,i).slice(0)};function sa(a){for(var b=0,c=a.length,d="";b<c;b++)d+=a[b].value;return d}function ta(a,b,c){var d=b.dir,e=b.next,f=e||d,g=c&&"parentNode"===f,h=x++;return b.first?function(b,c,e){while(b=b[d])if(1===b.nodeType||g)return a(b,c,e);return!1}:function(b,c,i){var j,k,l,m=[w,h];if(i){while(b=b[d])if((1===b.nodeType||g)&&a(b,c,i))return!0}else while(b=b[d])if(1===b.nodeType||g)if(l=b[u]||(b[u]={}),k=l[b.uniqueID]||(l[b.uniqueID]={}),e&&e===b.nodeName.toLowerCase())b=b[d]||b;else{if((j=k[f])&&j[0]===w&&j[1]===h)return m[2]=j[2];if(k[f]=m,m[2]=a(b,c,i))return!0}return!1}}function ua(a){return a.length>1?function(b,c,d){var e=a.length;while(e--)if(!a[e](b,c,d))return!1;return!0}:a[0]}function va(a,b,c){for(var d=0,e=b.length;d<e;d++)ga(a,b[d],c);return c}function wa(a,b,c,d,e){for(var f,g=[],h=0,i=a.length,j=null!=b;h<i;h++)(f=a[h])&&(c&&!c(f,d,e)||(g.push(f),j&&b.push(h)));return g}function xa(a,b,c,d,e,f){return d&&!d[u]&&(d=xa(d)),e&&!e[u]&&(e=xa(e,f)),ia(function(f,g,h,i){var j,k,l,m=[],n=[],o=g.length,p=f||va(b||"*",h.nodeType?[h]:h,[]),q=!a||!f&&b?p:wa(p,m,a,h,i),r=c?e||(f?a:o||d)?[]:g:q;if(c&&c(q,r,h,i),d){j=wa(r,n),d(j,[],h,i),k=j.length;while(k--)(l=j[k])&&(r[n[k]]=!(q[n[k]]=l))}if(f){if(e||a){if(e){j=[],k=r.length;while(k--)(l=r[k])&&j.push(q[k]=l);e(null,r=[],j,i)}k=r.length;while(k--)(l=r[k])&&(j=e?I(f,l):m[k])>-1&&(f[j]=!(g[j]=l))}}else r=wa(r===g?r.splice(o,r.length):r),e?e(null,g,r,i):G.apply(g,r)})}function ya(a){for(var b,c,e,f=a.length,g=d.relative[a[0].type],h=g||d.relative[" "],i=g?1:0,k=ta(function(a){return a===b},h,!0),l=ta(function(a){return I(b,a)>-1},h,!0),m=[function(a,c,d){var e=!g&&(d||c!==j)||((b=c).nodeType?k(a,c,d):l(a,c,d));return b=null,e}];i<f;i++)if(c=d.relative[a[i].type])m=[ta(ua(m),c)];else{if(c=d.filter[a[i].type].apply(null,a[i].matches),c[u]){for(e=++i;e<f;e++)if(d.relative[a[e].type])break;return xa(i>1&&ua(m),i>1&&sa(a.slice(0,i-1).concat({value:" "===a[i-2].type?"*":""})).replace(P,"$1"),c,i<e&&ya(a.slice(i,e)),e<f&&ya(a=a.slice(e)),e<f&&sa(a))}m.push(c)}return ua(m)}function za(a,b){var c=b.length>0,e=a.length>0,f=function(f,g,h,i,k){var l,o,q,r=0,s="0",t=f&&[],u=[],v=j,x=f||e&&d.find.TAG("*",k),y=w+=null==v?1:Math.random()||.1,z=x.length;for(k&&(j=g===n||g||k);s!==z&&null!=(l=x[s]);s++){if(e&&l){o=0,g||l.ownerDocument===n||(m(l),h=!p);while(q=a[o++])if(q(l,g||n,h)){i.push(l);break}k&&(w=y)}c&&((l=!q&&l)&&r--,f&&t.push(l))}if(r+=s,c&&s!==r){o=0;while(q=b[o++])q(t,u,g,h);if(f){if(r>0)while(s--)t[s]||u[s]||(u[s]=E.call(i));u=wa(u)}G.apply(i,u),k&&!f&&u.length>0&&r+b.length>1&&ga.uniqueSort(i)}return k&&(w=y,j=v),t};return c?ia(f):f}return h=ga.compile=function(a,b){var c,d=[],e=[],f=A[a+" "];if(!f){b||(b=g(a)),c=b.length;while(c--)f=ya(b[c]),f[u]?d.push(f):e.push(f);f=A(a,za(e,d)),f.selector=a}return f},i=ga.select=function(a,b,c,e){var f,i,j,k,l,m="function"==typeof a&&a,n=!e&&g(a=m.selector||a);if(c=c||[],1===n.length){if(i=n[0]=n[0].slice(0),i.length>2&&"ID"===(j=i[0]).type&&9===b.nodeType&&p&&d.relative[i[1].type]){if(b=(d.find.ID(j.matches[0].replace(_,aa),b)||[])[0],!b)return c;m&&(b=b.parentNode),a=a.slice(i.shift().value.length)}f=V.needsContext.test(a)?0:i.length;while(f--){if(j=i[f],d.relative[k=j.type])break;if((l=d.find[k])&&(e=l(j.matches[0].replace(_,aa),$.test(i[0].type)&&qa(b.parentNode)||b))){if(i.splice(f,1),a=e.length&&sa(i),!a)return G.apply(c,e),c;break}}}return(m||h(a,n))(e,b,!p,c,!b||$.test(a)&&qa(b.parentNode)||b),c},c.sortStable=u.split("").sort(B).join("")===u,c.detectDuplicates=!!l,m(),c.sortDetached=ja(function(a){return 1&a.compareDocumentPosition(n.createElement("fieldset"))}),ja(function(a){return a.innerHTML="<a href='#'></a>","#"===a.firstChild.getAttribute("href")})||ka("type|href|height|width",function(a,b,c){if(!c)return a.getAttribute(b,"type"===b.toLowerCase()?1:2)}),c.attributes&&ja(function(a){return a.innerHTML="<input/>",a.firstChild.setAttribute("value",""),""===a.firstChild.getAttribute("value")})||ka("value",function(a,b,c){if(!c&&"input"===a.nodeName.toLowerCase())return a.defaultValue}),ja(function(a){return null==a.getAttribute("disabled")})||ka(J,function(a,b,c){var d;if(!c)return a[b]===!0?b.toLowerCase():(d=a.getAttributeNode(b))&&d.specified?d.value:null}),ga}(a);r.find=x,r.expr=x.selectors,r.expr[":"]=r.expr.pseudos,r.uniqueSort=r.unique=x.uniqueSort,r.text=x.getText,r.isXMLDoc=x.isXML,r.contains=x.contains,r.escapeSelector=x.escape;var y=function(a,b,c){var d=[],e=void 0!==c;while((a=a[b])&&9!==a.nodeType)if(1===a.nodeType){if(e&&r(a).is(c))break;d.push(a)}return d},z=function(a,b){for(var c=[];a;a=a.nextSibling)1===a.nodeType&&a!==b&&c.push(a);return c},A=r.expr.match.needsContext;function B(a,b){return a.nodeName&&a.nodeName.toLowerCase()===b.toLowerCase()}var C=/^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i,D=/^.[^:#\[\.,]*$/;function E(a,b,c){return r.isFunction(b)?r.grep(a,function(a,d){return!!b.call(a,d,a)!==c}):b.nodeType?r.grep(a,function(a){return a===b!==c}):"string"!=typeof b?r.grep(a,function(a){return i.call(b,a)>-1!==c}):D.test(b)?r.filter(b,a,c):(b=r.filter(b,a),r.grep(a,function(a){return i.call(b,a)>-1!==c&&1===a.nodeType}))}r.filter=function(a,b,c){var d=b[0];return c&&(a=":not("+a+")"),1===b.length&&1===d.nodeType?r.find.matchesSelector(d,a)?[d]:[]:r.find.matches(a,r.grep(b,function(a){return 1===a.nodeType}))},r.fn.extend({find:function(a){var b,c,d=this.length,e=this;if("string"!=typeof a)return this.pushStack(r(a).filter(function(){for(b=0;b<d;b++)if(r.contains(e[b],this))return!0}));for(c=this.pushStack([]),b=0;b<d;b++)r.find(a,e[b],c);return d>1?r.uniqueSort(c):c},filter:function(a){return this.pushStack(E(this,a||[],!1))},not:function(a){return this.pushStack(E(this,a||[],!0))},is:function(a){return!!E(this,"string"==typeof a&&A.test(a)?r(a):a||[],!1).length}});var F,G=/^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/,H=r.fn.init=function(a,b,c){var e,f;if(!a)return this;if(c=c||F,"string"==typeof a){if(e="<"===a[0]&&">"===a[a.length-1]&&a.length>=3?[null,a,null]:G.exec(a),!e||!e[1]&&b)return!b||b.jquery?(b||c).find(a):this.constructor(b).find(a);if(e[1]){if(b=b instanceof r?b[0]:b,r.merge(this,r.parseHTML(e[1],b&&b.nodeType?b.ownerDocument||b:d,!0)),C.test(e[1])&&r.isPlainObject(b))for(e in b)r.isFunction(this[e])?this[e](b[e]):this.attr(e,b[e]);return this}return f=d.getElementById(e[2]),f&&(this[0]=f,this.length=1),this}return a.nodeType?(this[0]=a,this.length=1,this):r.isFunction(a)?void 0!==c.ready?c.ready(a):a(r):r.makeArray(a,this)};H.prototype=r.fn,F=r(d);var I=/^(?:parents|prev(?:Until|All))/,J={children:!0,contents:!0,next:!0,prev:!0};r.fn.extend({has:function(a){var b=r(a,this),c=b.length;return this.filter(function(){for(var a=0;a<c;a++)if(r.contains(this,b[a]))return!0})},closest:function(a,b){var c,d=0,e=this.length,f=[],g="string"!=typeof a&&r(a);if(!A.test(a))for(;d<e;d++)for(c=this[d];c&&c!==b;c=c.parentNode)if(c.nodeType<11&&(g?g.index(c)>-1:1===c.nodeType&&r.find.matchesSelector(c,a))){f.push(c);break}return this.pushStack(f.length>1?r.uniqueSort(f):f)},index:function(a){return a?"string"==typeof a?i.call(r(a),this[0]):i.call(this,a.jquery?a[0]:a):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(a,b){return this.pushStack(r.uniqueSort(r.merge(this.get(),r(a,b))))},addBack:function(a){return this.add(null==a?this.prevObject:this.prevObject.filter(a))}});function K(a,b){while((a=a[b])&&1!==a.nodeType);return a}r.each({parent:function(a){var b=a.parentNode;return b&&11!==b.nodeType?b:null},parents:function(a){return y(a,"parentNode")},parentsUntil:function(a,b,c){return y(a,"parentNode",c)},next:function(a){return K(a,"nextSibling")},prev:function(a){return K(a,"previousSibling")},nextAll:function(a){return y(a,"nextSibling")},prevAll:function(a){return y(a,"previousSibling")},nextUntil:function(a,b,c){return y(a,"nextSibling",c)},prevUntil:function(a,b,c){return y(a,"previousSibling",c)},siblings:function(a){return z((a.parentNode||{}).firstChild,a)},children:function(a){return z(a.firstChild)},contents:function(a){return B(a,"iframe")?a.contentDocument:(B(a,"template")&&(a=a.content||a),r.merge([],a.childNodes))}},function(a,b){r.fn[a]=function(c,d){var e=r.map(this,b,c);return"Until"!==a.slice(-5)&&(d=c),d&&"string"==typeof d&&(e=r.filter(d,e)),this.length>1&&(J[a]||r.uniqueSort(e),I.test(a)&&e.reverse()),this.pushStack(e)}});var L=/[^\x20\t\r\n\f]+/g;function M(a){var b={};return r.each(a.match(L)||[],function(a,c){b[c]=!0}),b}r.Callbacks=function(a){a="string"==typeof a?M(a):r.extend({},a);var b,c,d,e,f=[],g=[],h=-1,i=function(){for(e=e||a.once,d=b=!0;g.length;h=-1){c=g.shift();while(++h<f.length)f[h].apply(c[0],c[1])===!1&&a.stopOnFalse&&(h=f.length,c=!1)}a.memory||(c=!1),b=!1,e&&(f=c?[]:"")},j={add:function(){return f&&(c&&!b&&(h=f.length-1,g.push(c)),function d(b){r.each(b,function(b,c){r.isFunction(c)?a.unique&&j.has(c)||f.push(c):c&&c.length&&"string"!==r.type(c)&&d(c)})}(arguments),c&&!b&&i()),this},remove:function(){return r.each(arguments,function(a,b){var c;while((c=r.inArray(b,f,c))>-1)f.splice(c,1),c<=h&&h--}),this},has:function(a){return a?r.inArray(a,f)>-1:f.length>0},empty:function(){return f&&(f=[]),this},disable:function(){return e=g=[],f=c="",this},disabled:function(){return!f},lock:function(){return e=g=[],c||b||(f=c=""),this},locked:function(){return!!e},fireWith:function(a,c){return e||(c=c||[],c=[a,c.slice?c.slice():c],g.push(c),b||i()),this},fire:function(){return j.fireWith(this,arguments),this},fired:function(){return!!d}};return j};function N(a){return a}function O(a){throw a}function P(a,b,c,d){var e;try{a&&r.isFunction(e=a.promise)?e.call(a).done(b).fail(c):a&&r.isFunction(e=a.then)?e.call(a,b,c):b.apply(void 0,[a].slice(d))}catch(a){c.apply(void 0,[a])}}r.extend({Deferred:function(b){var c=[["notify","progress",r.Callbacks("memory"),r.Callbacks("memory"),2],["resolve","done",r.Callbacks("once memory"),r.Callbacks("once memory"),0,"resolved"],["reject","fail",r.Callbacks("once memory"),r.Callbacks("once memory"),1,"rejected"]],d="pending",e={state:function(){return d},always:function(){return f.done(arguments).fail(arguments),this},"catch":function(a){return e.then(null,a)},pipe:function(){var a=arguments;return r.Deferred(function(b){r.each(c,function(c,d){var e=r.isFunction(a[d[4]])&&a[d[4]];f[d[1]](function(){var a=e&&e.apply(this,arguments);a&&r.isFunction(a.promise)?a.promise().progress(b.notify).done(b.resolve).fail(b.reject):b[d[0]+"With"](this,e?[a]:arguments)})}),a=null}).promise()},then:function(b,d,e){var f=0;function g(b,c,d,e){return function(){var h=this,i=arguments,j=function(){var a,j;if(!(b<f)){if(a=d.apply(h,i),a===c.promise())throw new TypeError("Thenable self-resolution");j=a&&("object"==typeof a||"function"==typeof a)&&a.then,r.isFunction(j)?e?j.call(a,g(f,c,N,e),g(f,c,O,e)):(f++,j.call(a,g(f,c,N,e),g(f,c,O,e),g(f,c,N,c.notifyWith))):(d!==N&&(h=void 0,i=[a]),(e||c.resolveWith)(h,i))}},k=e?j:function(){try{j()}catch(a){r.Deferred.exceptionHook&&r.Deferred.exceptionHook(a,k.stackTrace),b+1>=f&&(d!==O&&(h=void 0,i=[a]),c.rejectWith(h,i))}};b?k():(r.Deferred.getStackHook&&(k.stackTrace=r.Deferred.getStackHook()),a.setTimeout(k))}}return r.Deferred(function(a){c[0][3].add(g(0,a,r.isFunction(e)?e:N,a.notifyWith)),c[1][3].add(g(0,a,r.isFunction(b)?b:N)),c[2][3].add(g(0,a,r.isFunction(d)?d:O))}).promise()},promise:function(a){return null!=a?r.extend(a,e):e}},f={};return r.each(c,function(a,b){var g=b[2],h=b[5];e[b[1]]=g.add,h&&g.add(function(){d=h},c[3-a][2].disable,c[0][2].lock),g.add(b[3].fire),f[b[0]]=function(){return f[b[0]+"With"](this===f?void 0:this,arguments),this},f[b[0]+"With"]=g.fireWith}),e.promise(f),b&&b.call(f,f),f},when:function(a){var b=arguments.length,c=b,d=Array(c),e=f.call(arguments),g=r.Deferred(),h=function(a){return function(c){d[a]=this,e[a]=arguments.length>1?f.call(arguments):c,--b||g.resolveWith(d,e)}};if(b<=1&&(P(a,g.done(h(c)).resolve,g.reject,!b),"pending"===g.state()||r.isFunction(e[c]&&e[c].then)))return g.then();while(c--)P(e[c],h(c),g.reject);return g.promise()}});var Q=/^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;r.Deferred.exceptionHook=function(b,c){a.console&&a.console.warn&&b&&Q.test(b.name)&&a.console.warn("jQuery.Deferred exception: "+b.message,b.stack,c)},r.readyException=function(b){a.setTimeout(function(){throw b})};var R=r.Deferred();r.fn.ready=function(a){return R.then(a)["catch"](function(a){r.readyException(a)}),this},r.extend({isReady:!1,readyWait:1,ready:function(a){(a===!0?--r.readyWait:r.isReady)||(r.isReady=!0,a!==!0&&--r.readyWait>0||R.resolveWith(d,[r]))}}),r.ready.then=R.then;function S(){d.removeEventListener("DOMContentLoaded",S),
a.removeEventListener("load",S),r.ready()}"complete"===d.readyState||"loading"!==d.readyState&&!d.documentElement.doScroll?a.setTimeout(r.ready):(d.addEventListener("DOMContentLoaded",S),a.addEventListener("load",S));var T=function(a,b,c,d,e,f,g){var h=0,i=a.length,j=null==c;if("object"===r.type(c)){e=!0;for(h in c)T(a,b,h,c[h],!0,f,g)}else if(void 0!==d&&(e=!0,r.isFunction(d)||(g=!0),j&&(g?(b.call(a,d),b=null):(j=b,b=function(a,b,c){return j.call(r(a),c)})),b))for(;h<i;h++)b(a[h],c,g?d:d.call(a[h],h,b(a[h],c)));return e?a:j?b.call(a):i?b(a[0],c):f},U=function(a){return 1===a.nodeType||9===a.nodeType||!+a.nodeType};function V(){this.expando=r.expando+V.uid++}V.uid=1,V.prototype={cache:function(a){var b=a[this.expando];return b||(b={},U(a)&&(a.nodeType?a[this.expando]=b:Object.defineProperty(a,this.expando,{value:b,configurable:!0}))),b},set:function(a,b,c){var d,e=this.cache(a);if("string"==typeof b)e[r.camelCase(b)]=c;else for(d in b)e[r.camelCase(d)]=b[d];return e},get:function(a,b){return void 0===b?this.cache(a):a[this.expando]&&a[this.expando][r.camelCase(b)]},access:function(a,b,c){return void 0===b||b&&"string"==typeof b&&void 0===c?this.get(a,b):(this.set(a,b,c),void 0!==c?c:b)},remove:function(a,b){var c,d=a[this.expando];if(void 0!==d){if(void 0!==b){Array.isArray(b)?b=b.map(r.camelCase):(b=r.camelCase(b),b=b in d?[b]:b.match(L)||[]),c=b.length;while(c--)delete d[b[c]]}(void 0===b||r.isEmptyObject(d))&&(a.nodeType?a[this.expando]=void 0:delete a[this.expando])}},hasData:function(a){var b=a[this.expando];return void 0!==b&&!r.isEmptyObject(b)}};var W=new V,X=new V,Y=/^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,Z=/[A-Z]/g;function $(a){return"true"===a||"false"!==a&&("null"===a?null:a===+a+""?+a:Y.test(a)?JSON.parse(a):a)}function _(a,b,c){var d;if(void 0===c&&1===a.nodeType)if(d="data-"+b.replace(Z,"-$&").toLowerCase(),c=a.getAttribute(d),"string"==typeof c){try{c=$(c)}catch(e){}X.set(a,b,c)}else c=void 0;return c}r.extend({hasData:function(a){return X.hasData(a)||W.hasData(a)},data:function(a,b,c){return X.access(a,b,c)},removeData:function(a,b){X.remove(a,b)},_data:function(a,b,c){return W.access(a,b,c)},_removeData:function(a,b){W.remove(a,b)}}),r.fn.extend({data:function(a,b){var c,d,e,f=this[0],g=f&&f.attributes;if(void 0===a){if(this.length&&(e=X.get(f),1===f.nodeType&&!W.get(f,"hasDataAttrs"))){c=g.length;while(c--)g[c]&&(d=g[c].name,0===d.indexOf("data-")&&(d=r.camelCase(d.slice(5)),_(f,d,e[d])));W.set(f,"hasDataAttrs",!0)}return e}return"object"==typeof a?this.each(function(){X.set(this,a)}):T(this,function(b){var c;if(f&&void 0===b){if(c=X.get(f,a),void 0!==c)return c;if(c=_(f,a),void 0!==c)return c}else this.each(function(){X.set(this,a,b)})},null,b,arguments.length>1,null,!0)},removeData:function(a){return this.each(function(){X.remove(this,a)})}}),r.extend({queue:function(a,b,c){var d;if(a)return b=(b||"fx")+"queue",d=W.get(a,b),c&&(!d||Array.isArray(c)?d=W.access(a,b,r.makeArray(c)):d.push(c)),d||[]},dequeue:function(a,b){b=b||"fx";var c=r.queue(a,b),d=c.length,e=c.shift(),f=r._queueHooks(a,b),g=function(){r.dequeue(a,b)};"inprogress"===e&&(e=c.shift(),d--),e&&("fx"===b&&c.unshift("inprogress"),delete f.stop,e.call(a,g,f)),!d&&f&&f.empty.fire()},_queueHooks:function(a,b){var c=b+"queueHooks";return W.get(a,c)||W.access(a,c,{empty:r.Callbacks("once memory").add(function(){W.remove(a,[b+"queue",c])})})}}),r.fn.extend({queue:function(a,b){var c=2;return"string"!=typeof a&&(b=a,a="fx",c--),arguments.length<c?r.queue(this[0],a):void 0===b?this:this.each(function(){var c=r.queue(this,a,b);r._queueHooks(this,a),"fx"===a&&"inprogress"!==c[0]&&r.dequeue(this,a)})},dequeue:function(a){return this.each(function(){r.dequeue(this,a)})},clearQueue:function(a){return this.queue(a||"fx",[])},promise:function(a,b){var c,d=1,e=r.Deferred(),f=this,g=this.length,h=function(){--d||e.resolveWith(f,[f])};"string"!=typeof a&&(b=a,a=void 0),a=a||"fx";while(g--)c=W.get(f[g],a+"queueHooks"),c&&c.empty&&(d++,c.empty.add(h));return h(),e.promise(b)}});var aa=/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,ba=new RegExp("^(?:([+-])=|)("+aa+")([a-z%]*)$","i"),ca=["Top","Right","Bottom","Left"],da=function(a,b){return a=b||a,"none"===a.style.display||""===a.style.display&&r.contains(a.ownerDocument,a)&&"none"===r.css(a,"display")},ea=function(a,b,c,d){var e,f,g={};for(f in b)g[f]=a.style[f],a.style[f]=b[f];e=c.apply(a,d||[]);for(f in b)a.style[f]=g[f];return e};function fa(a,b,c,d){var e,f=1,g=20,h=d?function(){return d.cur()}:function(){return r.css(a,b,"")},i=h(),j=c&&c[3]||(r.cssNumber[b]?"":"px"),k=(r.cssNumber[b]||"px"!==j&&+i)&&ba.exec(r.css(a,b));if(k&&k[3]!==j){j=j||k[3],c=c||[],k=+i||1;do f=f||".5",k/=f,r.style(a,b,k+j);while(f!==(f=h()/i)&&1!==f&&--g)}return c&&(k=+k||+i||0,e=c[1]?k+(c[1]+1)*c[2]:+c[2],d&&(d.unit=j,d.start=k,d.end=e)),e}var ga={};function ha(a){var b,c=a.ownerDocument,d=a.nodeName,e=ga[d];return e?e:(b=c.body.appendChild(c.createElement(d)),e=r.css(b,"display"),b.parentNode.removeChild(b),"none"===e&&(e="block"),ga[d]=e,e)}function ia(a,b){for(var c,d,e=[],f=0,g=a.length;f<g;f++)d=a[f],d.style&&(c=d.style.display,b?("none"===c&&(e[f]=W.get(d,"display")||null,e[f]||(d.style.display="")),""===d.style.display&&da(d)&&(e[f]=ha(d))):"none"!==c&&(e[f]="none",W.set(d,"display",c)));for(f=0;f<g;f++)null!=e[f]&&(a[f].style.display=e[f]);return a}r.fn.extend({show:function(){return ia(this,!0)},hide:function(){return ia(this)},toggle:function(a){return"boolean"==typeof a?a?this.show():this.hide():this.each(function(){da(this)?r(this).show():r(this).hide()})}});var ja=/^(?:checkbox|radio)$/i,ka=/<([a-z][^\/\0>\x20\t\r\n\f]+)/i,la=/^$|\/(?:java|ecma)script/i,ma={option:[1,"<select multiple='multiple'>","</select>"],thead:[1,"<table>","</table>"],col:[2,"<table><colgroup>","</colgroup></table>"],tr:[2,"<table><tbody>","</tbody></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],_default:[0,"",""]};ma.optgroup=ma.option,ma.tbody=ma.tfoot=ma.colgroup=ma.caption=ma.thead,ma.th=ma.td;function na(a,b){var c;return c="undefined"!=typeof a.getElementsByTagName?a.getElementsByTagName(b||"*"):"undefined"!=typeof a.querySelectorAll?a.querySelectorAll(b||"*"):[],void 0===b||b&&B(a,b)?r.merge([a],c):c}function oa(a,b){for(var c=0,d=a.length;c<d;c++)W.set(a[c],"globalEval",!b||W.get(b[c],"globalEval"))}var pa=/<|&#?\w+;/;function qa(a,b,c,d,e){for(var f,g,h,i,j,k,l=b.createDocumentFragment(),m=[],n=0,o=a.length;n<o;n++)if(f=a[n],f||0===f)if("object"===r.type(f))r.merge(m,f.nodeType?[f]:f);else if(pa.test(f)){g=g||l.appendChild(b.createElement("div")),h=(ka.exec(f)||["",""])[1].toLowerCase(),i=ma[h]||ma._default,g.innerHTML=i[1]+r.htmlPrefilter(f)+i[2],k=i[0];while(k--)g=g.lastChild;r.merge(m,g.childNodes),g=l.firstChild,g.textContent=""}else m.push(b.createTextNode(f));l.textContent="",n=0;while(f=m[n++])if(d&&r.inArray(f,d)>-1)e&&e.push(f);else if(j=r.contains(f.ownerDocument,f),g=na(l.appendChild(f),"script"),j&&oa(g),c){k=0;while(f=g[k++])la.test(f.type||"")&&c.push(f)}return l}!function(){var a=d.createDocumentFragment(),b=a.appendChild(d.createElement("div")),c=d.createElement("input");c.setAttribute("type","radio"),c.setAttribute("checked","checked"),c.setAttribute("name","t"),b.appendChild(c),o.checkClone=b.cloneNode(!0).cloneNode(!0).lastChild.checked,b.innerHTML="<textarea>x</textarea>",o.noCloneChecked=!!b.cloneNode(!0).lastChild.defaultValue}();var ra=d.documentElement,sa=/^key/,ta=/^(?:mouse|pointer|contextmenu|drag|drop)|click/,ua=/^([^.]*)(?:\.(.+)|)/;function va(){return!0}function wa(){return!1}function xa(){try{return d.activeElement}catch(a){}}function ya(a,b,c,d,e,f){var g,h;if("object"==typeof b){"string"!=typeof c&&(d=d||c,c=void 0);for(h in b)ya(a,h,c,d,b[h],f);return a}if(null==d&&null==e?(e=c,d=c=void 0):null==e&&("string"==typeof c?(e=d,d=void 0):(e=d,d=c,c=void 0)),e===!1)e=wa;else if(!e)return a;return 1===f&&(g=e,e=function(a){return r().off(a),g.apply(this,arguments)},e.guid=g.guid||(g.guid=r.guid++)),a.each(function(){r.event.add(this,b,e,d,c)})}r.event={global:{},add:function(a,b,c,d,e){var f,g,h,i,j,k,l,m,n,o,p,q=W.get(a);if(q){c.handler&&(f=c,c=f.handler,e=f.selector),e&&r.find.matchesSelector(ra,e),c.guid||(c.guid=r.guid++),(i=q.events)||(i=q.events={}),(g=q.handle)||(g=q.handle=function(b){return"undefined"!=typeof r&&r.event.triggered!==b.type?r.event.dispatch.apply(a,arguments):void 0}),b=(b||"").match(L)||[""],j=b.length;while(j--)h=ua.exec(b[j])||[],n=p=h[1],o=(h[2]||"").split(".").sort(),n&&(l=r.event.special[n]||{},n=(e?l.delegateType:l.bindType)||n,l=r.event.special[n]||{},k=r.extend({type:n,origType:p,data:d,handler:c,guid:c.guid,selector:e,needsContext:e&&r.expr.match.needsContext.test(e),namespace:o.join(".")},f),(m=i[n])||(m=i[n]=[],m.delegateCount=0,l.setup&&l.setup.call(a,d,o,g)!==!1||a.addEventListener&&a.addEventListener(n,g)),l.add&&(l.add.call(a,k),k.handler.guid||(k.handler.guid=c.guid)),e?m.splice(m.delegateCount++,0,k):m.push(k),r.event.global[n]=!0)}},remove:function(a,b,c,d,e){var f,g,h,i,j,k,l,m,n,o,p,q=W.hasData(a)&&W.get(a);if(q&&(i=q.events)){b=(b||"").match(L)||[""],j=b.length;while(j--)if(h=ua.exec(b[j])||[],n=p=h[1],o=(h[2]||"").split(".").sort(),n){l=r.event.special[n]||{},n=(d?l.delegateType:l.bindType)||n,m=i[n]||[],h=h[2]&&new RegExp("(^|\\.)"+o.join("\\.(?:.*\\.|)")+"(\\.|$)"),g=f=m.length;while(f--)k=m[f],!e&&p!==k.origType||c&&c.guid!==k.guid||h&&!h.test(k.namespace)||d&&d!==k.selector&&("**"!==d||!k.selector)||(m.splice(f,1),k.selector&&m.delegateCount--,l.remove&&l.remove.call(a,k));g&&!m.length&&(l.teardown&&l.teardown.call(a,o,q.handle)!==!1||r.removeEvent(a,n,q.handle),delete i[n])}else for(n in i)r.event.remove(a,n+b[j],c,d,!0);r.isEmptyObject(i)&&W.remove(a,"handle events")}},dispatch:function(a){var b=r.event.fix(a),c,d,e,f,g,h,i=new Array(arguments.length),j=(W.get(this,"events")||{})[b.type]||[],k=r.event.special[b.type]||{};for(i[0]=b,c=1;c<arguments.length;c++)i[c]=arguments[c];if(b.delegateTarget=this,!k.preDispatch||k.preDispatch.call(this,b)!==!1){h=r.event.handlers.call(this,b,j),c=0;while((f=h[c++])&&!b.isPropagationStopped()){b.currentTarget=f.elem,d=0;while((g=f.handlers[d++])&&!b.isImmediatePropagationStopped())b.rnamespace&&!b.rnamespace.test(g.namespace)||(b.handleObj=g,b.data=g.data,e=((r.event.special[g.origType]||{}).handle||g.handler).apply(f.elem,i),void 0!==e&&(b.result=e)===!1&&(b.preventDefault(),b.stopPropagation()))}return k.postDispatch&&k.postDispatch.call(this,b),b.result}},handlers:function(a,b){var c,d,e,f,g,h=[],i=b.delegateCount,j=a.target;if(i&&j.nodeType&&!("click"===a.type&&a.button>=1))for(;j!==this;j=j.parentNode||this)if(1===j.nodeType&&("click"!==a.type||j.disabled!==!0)){for(f=[],g={},c=0;c<i;c++)d=b[c],e=d.selector+" ",void 0===g[e]&&(g[e]=d.needsContext?r(e,this).index(j)>-1:r.find(e,this,null,[j]).length),g[e]&&f.push(d);f.length&&h.push({elem:j,handlers:f})}return j=this,i<b.length&&h.push({elem:j,handlers:b.slice(i)}),h},addProp:function(a,b){Object.defineProperty(r.Event.prototype,a,{enumerable:!0,configurable:!0,get:r.isFunction(b)?function(){if(this.originalEvent)return b(this.originalEvent)}:function(){if(this.originalEvent)return this.originalEvent[a]},set:function(b){Object.defineProperty(this,a,{enumerable:!0,configurable:!0,writable:!0,value:b})}})},fix:function(a){return a[r.expando]?a:new r.Event(a)},special:{load:{noBubble:!0},focus:{trigger:function(){if(this!==xa()&&this.focus)return this.focus(),!1},delegateType:"focusin"},blur:{trigger:function(){if(this===xa()&&this.blur)return this.blur(),!1},delegateType:"focusout"},click:{trigger:function(){if("checkbox"===this.type&&this.click&&B(this,"input"))return this.click(),!1},_default:function(a){return B(a.target,"a")}},beforeunload:{postDispatch:function(a){void 0!==a.result&&a.originalEvent&&(a.originalEvent.returnValue=a.result)}}}},r.removeEvent=function(a,b,c){a.removeEventListener&&a.removeEventListener(b,c)},r.Event=function(a,b){return this instanceof r.Event?(a&&a.type?(this.originalEvent=a,this.type=a.type,this.isDefaultPrevented=a.defaultPrevented||void 0===a.defaultPrevented&&a.returnValue===!1?va:wa,this.target=a.target&&3===a.target.nodeType?a.target.parentNode:a.target,this.currentTarget=a.currentTarget,this.relatedTarget=a.relatedTarget):this.type=a,b&&r.extend(this,b),this.timeStamp=a&&a.timeStamp||r.now(),void(this[r.expando]=!0)):new r.Event(a,b)},r.Event.prototype={constructor:r.Event,isDefaultPrevented:wa,isPropagationStopped:wa,isImmediatePropagationStopped:wa,isSimulated:!1,preventDefault:function(){var a=this.originalEvent;this.isDefaultPrevented=va,a&&!this.isSimulated&&a.preventDefault()},stopPropagation:function(){var a=this.originalEvent;this.isPropagationStopped=va,a&&!this.isSimulated&&a.stopPropagation()},stopImmediatePropagation:function(){var a=this.originalEvent;this.isImmediatePropagationStopped=va,a&&!this.isSimulated&&a.stopImmediatePropagation(),this.stopPropagation()}},r.each({altKey:!0,bubbles:!0,cancelable:!0,changedTouches:!0,ctrlKey:!0,detail:!0,eventPhase:!0,metaKey:!0,pageX:!0,pageY:!0,shiftKey:!0,view:!0,"char":!0,charCode:!0,key:!0,keyCode:!0,button:!0,buttons:!0,clientX:!0,clientY:!0,offsetX:!0,offsetY:!0,pointerId:!0,pointerType:!0,screenX:!0,screenY:!0,targetTouches:!0,toElement:!0,touches:!0,which:function(a){var b=a.button;return null==a.which&&sa.test(a.type)?null!=a.charCode?a.charCode:a.keyCode:!a.which&&void 0!==b&&ta.test(a.type)?1&b?1:2&b?3:4&b?2:0:a.which}},r.event.addProp),r.each({mouseenter:"mouseover",mouseleave:"mouseout",pointerenter:"pointerover",pointerleave:"pointerout"},function(a,b){r.event.special[a]={delegateType:b,bindType:b,handle:function(a){var c,d=this,e=a.relatedTarget,f=a.handleObj;return e&&(e===d||r.contains(d,e))||(a.type=f.origType,c=f.handler.apply(this,arguments),a.type=b),c}}}),r.fn.extend({on:function(a,b,c,d){return ya(this,a,b,c,d)},one:function(a,b,c,d){return ya(this,a,b,c,d,1)},off:function(a,b,c){var d,e;if(a&&a.preventDefault&&a.handleObj)return d=a.handleObj,r(a.delegateTarget).off(d.namespace?d.origType+"."+d.namespace:d.origType,d.selector,d.handler),this;if("object"==typeof a){for(e in a)this.off(e,b,a[e]);return this}return b!==!1&&"function"!=typeof b||(c=b,b=void 0),c===!1&&(c=wa),this.each(function(){r.event.remove(this,a,c,b)})}});var za=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([a-z][^\/\0>\x20\t\r\n\f]*)[^>]*)\/>/gi,Aa=/<script|<style|<link/i,Ba=/checked\s*(?:[^=]|=\s*.checked.)/i,Ca=/^true\/(.*)/,Da=/^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;function Ea(a,b){return B(a,"table")&&B(11!==b.nodeType?b:b.firstChild,"tr")?r(">tbody",a)[0]||a:a}function Fa(a){return a.type=(null!==a.getAttribute("type"))+"/"+a.type,a}function Ga(a){var b=Ca.exec(a.type);return b?a.type=b[1]:a.removeAttribute("type"),a}function Ha(a,b){var c,d,e,f,g,h,i,j;if(1===b.nodeType){if(W.hasData(a)&&(f=W.access(a),g=W.set(b,f),j=f.events)){delete g.handle,g.events={};for(e in j)for(c=0,d=j[e].length;c<d;c++)r.event.add(b,e,j[e][c])}X.hasData(a)&&(h=X.access(a),i=r.extend({},h),X.set(b,i))}}function Ia(a,b){var c=b.nodeName.toLowerCase();"input"===c&&ja.test(a.type)?b.checked=a.checked:"input"!==c&&"textarea"!==c||(b.defaultValue=a.defaultValue)}function Ja(a,b,c,d){b=g.apply([],b);var e,f,h,i,j,k,l=0,m=a.length,n=m-1,q=b[0],s=r.isFunction(q);if(s||m>1&&"string"==typeof q&&!o.checkClone&&Ba.test(q))return a.each(function(e){var f=a.eq(e);s&&(b[0]=q.call(this,e,f.html())),Ja(f,b,c,d)});if(m&&(e=qa(b,a[0].ownerDocument,!1,a,d),f=e.firstChild,1===e.childNodes.length&&(e=f),f||d)){for(h=r.map(na(e,"script"),Fa),i=h.length;l<m;l++)j=e,l!==n&&(j=r.clone(j,!0,!0),i&&r.merge(h,na(j,"script"))),c.call(a[l],j,l);if(i)for(k=h[h.length-1].ownerDocument,r.map(h,Ga),l=0;l<i;l++)j=h[l],la.test(j.type||"")&&!W.access(j,"globalEval")&&r.contains(k,j)&&(j.src?r._evalUrl&&r._evalUrl(j.src):p(j.textContent.replace(Da,""),k))}return a}function Ka(a,b,c){for(var d,e=b?r.filter(b,a):a,f=0;null!=(d=e[f]);f++)c||1!==d.nodeType||r.cleanData(na(d)),d.parentNode&&(c&&r.contains(d.ownerDocument,d)&&oa(na(d,"script")),d.parentNode.removeChild(d));return a}r.extend({htmlPrefilter:function(a){return a.replace(za,"<$1></$2>")},clone:function(a,b,c){var d,e,f,g,h=a.cloneNode(!0),i=r.contains(a.ownerDocument,a);if(!(o.noCloneChecked||1!==a.nodeType&&11!==a.nodeType||r.isXMLDoc(a)))for(g=na(h),f=na(a),d=0,e=f.length;d<e;d++)Ia(f[d],g[d]);if(b)if(c)for(f=f||na(a),g=g||na(h),d=0,e=f.length;d<e;d++)Ha(f[d],g[d]);else Ha(a,h);return g=na(h,"script"),g.length>0&&oa(g,!i&&na(a,"script")),h},cleanData:function(a){for(var b,c,d,e=r.event.special,f=0;void 0!==(c=a[f]);f++)if(U(c)){if(b=c[W.expando]){if(b.events)for(d in b.events)e[d]?r.event.remove(c,d):r.removeEvent(c,d,b.handle);c[W.expando]=void 0}c[X.expando]&&(c[X.expando]=void 0)}}}),r.fn.extend({detach:function(a){return Ka(this,a,!0)},remove:function(a){return Ka(this,a)},text:function(a){return T(this,function(a){return void 0===a?r.text(this):this.empty().each(function(){1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||(this.textContent=a)})},null,a,arguments.length)},append:function(){return Ja(this,arguments,function(a){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var b=Ea(this,a);b.appendChild(a)}})},prepend:function(){return Ja(this,arguments,function(a){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var b=Ea(this,a);b.insertBefore(a,b.firstChild)}})},before:function(){return Ja(this,arguments,function(a){this.parentNode&&this.parentNode.insertBefore(a,this)})},after:function(){return Ja(this,arguments,function(a){this.parentNode&&this.parentNode.insertBefore(a,this.nextSibling)})},empty:function(){for(var a,b=0;null!=(a=this[b]);b++)1===a.nodeType&&(r.cleanData(na(a,!1)),a.textContent="");return this},clone:function(a,b){return a=null!=a&&a,b=null==b?a:b,this.map(function(){return r.clone(this,a,b)})},html:function(a){return T(this,function(a){var b=this[0]||{},c=0,d=this.length;if(void 0===a&&1===b.nodeType)return b.innerHTML;if("string"==typeof a&&!Aa.test(a)&&!ma[(ka.exec(a)||["",""])[1].toLowerCase()]){a=r.htmlPrefilter(a);try{for(;c<d;c++)b=this[c]||{},1===b.nodeType&&(r.cleanData(na(b,!1)),b.innerHTML=a);b=0}catch(e){}}b&&this.empty().append(a)},null,a,arguments.length)},replaceWith:function(){var a=[];return Ja(this,arguments,function(b){var c=this.parentNode;r.inArray(this,a)<0&&(r.cleanData(na(this)),c&&c.replaceChild(b,this))},a)}}),r.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(a,b){r.fn[a]=function(a){for(var c,d=[],e=r(a),f=e.length-1,g=0;g<=f;g++)c=g===f?this:this.clone(!0),r(e[g])[b](c),h.apply(d,c.get());return this.pushStack(d)}});var La=/^margin/,Ma=new RegExp("^("+aa+")(?!px)[a-z%]+$","i"),Na=function(b){var c=b.ownerDocument.defaultView;return c&&c.opener||(c=a),c.getComputedStyle(b)};!function(){function b(){if(i){i.style.cssText="box-sizing:border-box;position:relative;display:block;margin:auto;border:1px;padding:1px;top:1%;width:50%",i.innerHTML="",ra.appendChild(h);var b=a.getComputedStyle(i);c="1%"!==b.top,g="2px"===b.marginLeft,e="4px"===b.width,i.style.marginRight="50%",f="4px"===b.marginRight,ra.removeChild(h),i=null}}var c,e,f,g,h=d.createElement("div"),i=d.createElement("div");i.style&&(i.style.backgroundClip="content-box",i.cloneNode(!0).style.backgroundClip="",o.clearCloneStyle="content-box"===i.style.backgroundClip,h.style.cssText="border:0;width:8px;height:0;top:0;left:-9999px;padding:0;margin-top:1px;position:absolute",h.appendChild(i),r.extend(o,{pixelPosition:function(){return b(),c},boxSizingReliable:function(){return b(),e},pixelMarginRight:function(){return b(),f},reliableMarginLeft:function(){return b(),g}}))}();function Oa(a,b,c){var d,e,f,g,h=a.style;return c=c||Na(a),c&&(g=c.getPropertyValue(b)||c[b],""!==g||r.contains(a.ownerDocument,a)||(g=r.style(a,b)),!o.pixelMarginRight()&&Ma.test(g)&&La.test(b)&&(d=h.width,e=h.minWidth,f=h.maxWidth,h.minWidth=h.maxWidth=h.width=g,g=c.width,h.width=d,h.minWidth=e,h.maxWidth=f)),void 0!==g?g+"":g}function Pa(a,b){return{get:function(){return a()?void delete this.get:(this.get=b).apply(this,arguments)}}}var Qa=/^(none|table(?!-c[ea]).+)/,Ra=/^--/,Sa={position:"absolute",visibility:"hidden",display:"block"},Ta={letterSpacing:"0",fontWeight:"400"},Ua=["Webkit","Moz","ms"],Va=d.createElement("div").style;function Wa(a){if(a in Va)return a;var b=a[0].toUpperCase()+a.slice(1),c=Ua.length;while(c--)if(a=Ua[c]+b,a in Va)return a}function Xa(a){var b=r.cssProps[a];return b||(b=r.cssProps[a]=Wa(a)||a),b}function Ya(a,b,c){var d=ba.exec(b);return d?Math.max(0,d[2]-(c||0))+(d[3]||"px"):b}function Za(a,b,c,d,e){var f,g=0;for(f=c===(d?"border":"content")?4:"width"===b?1:0;f<4;f+=2)"margin"===c&&(g+=r.css(a,c+ca[f],!0,e)),d?("content"===c&&(g-=r.css(a,"padding"+ca[f],!0,e)),"margin"!==c&&(g-=r.css(a,"border"+ca[f]+"Width",!0,e))):(g+=r.css(a,"padding"+ca[f],!0,e),"padding"!==c&&(g+=r.css(a,"border"+ca[f]+"Width",!0,e)));return g}function $a(a,b,c){var d,e=Na(a),f=Oa(a,b,e),g="border-box"===r.css(a,"boxSizing",!1,e);return Ma.test(f)?f:(d=g&&(o.boxSizingReliable()||f===a.style[b]),"auto"===f&&(f=a["offset"+b[0].toUpperCase()+b.slice(1)]),f=parseFloat(f)||0,f+Za(a,b,c||(g?"border":"content"),d,e)+"px")}r.extend({cssHooks:{opacity:{get:function(a,b){if(b){var c=Oa(a,"opacity");return""===c?"1":c}}}},cssNumber:{animationIterationCount:!0,columnCount:!0,fillOpacity:!0,flexGrow:!0,flexShrink:!0,fontWeight:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{"float":"cssFloat"},style:function(a,b,c,d){if(a&&3!==a.nodeType&&8!==a.nodeType&&a.style){var e,f,g,h=r.camelCase(b),i=Ra.test(b),j=a.style;return i||(b=Xa(h)),g=r.cssHooks[b]||r.cssHooks[h],void 0===c?g&&"get"in g&&void 0!==(e=g.get(a,!1,d))?e:j[b]:(f=typeof c,"string"===f&&(e=ba.exec(c))&&e[1]&&(c=fa(a,b,e),f="number"),null!=c&&c===c&&("number"===f&&(c+=e&&e[3]||(r.cssNumber[h]?"":"px")),o.clearCloneStyle||""!==c||0!==b.indexOf("background")||(j[b]="inherit"),g&&"set"in g&&void 0===(c=g.set(a,c,d))||(i?j.setProperty(b,c):j[b]=c)),void 0)}},css:function(a,b,c,d){var e,f,g,h=r.camelCase(b),i=Ra.test(b);return i||(b=Xa(h)),g=r.cssHooks[b]||r.cssHooks[h],g&&"get"in g&&(e=g.get(a,!0,c)),void 0===e&&(e=Oa(a,b,d)),"normal"===e&&b in Ta&&(e=Ta[b]),""===c||c?(f=parseFloat(e),c===!0||isFinite(f)?f||0:e):e}}),r.each(["height","width"],function(a,b){r.cssHooks[b]={get:function(a,c,d){if(c)return!Qa.test(r.css(a,"display"))||a.getClientRects().length&&a.getBoundingClientRect().width?$a(a,b,d):ea(a,Sa,function(){return $a(a,b,d)})},set:function(a,c,d){var e,f=d&&Na(a),g=d&&Za(a,b,d,"border-box"===r.css(a,"boxSizing",!1,f),f);return g&&(e=ba.exec(c))&&"px"!==(e[3]||"px")&&(a.style[b]=c,c=r.css(a,b)),Ya(a,c,g)}}}),r.cssHooks.marginLeft=Pa(o.reliableMarginLeft,function(a,b){if(b)return(parseFloat(Oa(a,"marginLeft"))||a.getBoundingClientRect().left-ea(a,{marginLeft:0},function(){return a.getBoundingClientRect().left}))+"px"}),r.each({margin:"",padding:"",border:"Width"},function(a,b){r.cssHooks[a+b]={expand:function(c){for(var d=0,e={},f="string"==typeof c?c.split(" "):[c];d<4;d++)e[a+ca[d]+b]=f[d]||f[d-2]||f[0];return e}},La.test(a)||(r.cssHooks[a+b].set=Ya)}),r.fn.extend({css:function(a,b){return T(this,function(a,b,c){var d,e,f={},g=0;if(Array.isArray(b)){for(d=Na(a),e=b.length;g<e;g++)f[b[g]]=r.css(a,b[g],!1,d);return f}return void 0!==c?r.style(a,b,c):r.css(a,b)},a,b,arguments.length>1)}});function _a(a,b,c,d,e){return new _a.prototype.init(a,b,c,d,e)}r.Tween=_a,_a.prototype={constructor:_a,init:function(a,b,c,d,e,f){this.elem=a,this.prop=c,this.easing=e||r.easing._default,this.options=b,this.start=this.now=this.cur(),this.end=d,this.unit=f||(r.cssNumber[c]?"":"px")},cur:function(){var a=_a.propHooks[this.prop];return a&&a.get?a.get(this):_a.propHooks._default.get(this)},run:function(a){var b,c=_a.propHooks[this.prop];return this.options.duration?this.pos=b=r.easing[this.easing](a,this.options.duration*a,0,1,this.options.duration):this.pos=b=a,this.now=(this.end-this.start)*b+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),c&&c.set?c.set(this):_a.propHooks._default.set(this),this}},_a.prototype.init.prototype=_a.prototype,_a.propHooks={_default:{get:function(a){var b;return 1!==a.elem.nodeType||null!=a.elem[a.prop]&&null==a.elem.style[a.prop]?a.elem[a.prop]:(b=r.css(a.elem,a.prop,""),b&&"auto"!==b?b:0)},set:function(a){r.fx.step[a.prop]?r.fx.step[a.prop](a):1!==a.elem.nodeType||null==a.elem.style[r.cssProps[a.prop]]&&!r.cssHooks[a.prop]?a.elem[a.prop]=a.now:r.style(a.elem,a.prop,a.now+a.unit)}}},_a.propHooks.scrollTop=_a.propHooks.scrollLeft={set:function(a){a.elem.nodeType&&a.elem.parentNode&&(a.elem[a.prop]=a.now)}},r.easing={linear:function(a){return a},swing:function(a){return.5-Math.cos(a*Math.PI)/2},_default:"swing"},r.fx=_a.prototype.init,r.fx.step={};var ab,bb,cb=/^(?:toggle|show|hide)$/,db=/queueHooks$/;function eb(){bb&&(d.hidden===!1&&a.requestAnimationFrame?a.requestAnimationFrame(eb):a.setTimeout(eb,r.fx.interval),r.fx.tick())}function fb(){return a.setTimeout(function(){ab=void 0}),ab=r.now()}function gb(a,b){var c,d=0,e={height:a};for(b=b?1:0;d<4;d+=2-b)c=ca[d],e["margin"+c]=e["padding"+c]=a;return b&&(e.opacity=e.width=a),e}function hb(a,b,c){for(var d,e=(kb.tweeners[b]||[]).concat(kb.tweeners["*"]),f=0,g=e.length;f<g;f++)if(d=e[f].call(c,b,a))return d}function ib(a,b,c){var d,e,f,g,h,i,j,k,l="width"in b||"height"in b,m=this,n={},o=a.style,p=a.nodeType&&da(a),q=W.get(a,"fxshow");c.queue||(g=r._queueHooks(a,"fx"),null==g.unqueued&&(g.unqueued=0,h=g.empty.fire,g.empty.fire=function(){g.unqueued||h()}),g.unqueued++,m.always(function(){m.always(function(){g.unqueued--,r.queue(a,"fx").length||g.empty.fire()})}));for(d in b)if(e=b[d],cb.test(e)){if(delete b[d],f=f||"toggle"===e,e===(p?"hide":"show")){if("show"!==e||!q||void 0===q[d])continue;p=!0}n[d]=q&&q[d]||r.style(a,d)}if(i=!r.isEmptyObject(b),i||!r.isEmptyObject(n)){l&&1===a.nodeType&&(c.overflow=[o.overflow,o.overflowX,o.overflowY],j=q&&q.display,null==j&&(j=W.get(a,"display")),k=r.css(a,"display"),"none"===k&&(j?k=j:(ia([a],!0),j=a.style.display||j,k=r.css(a,"display"),ia([a]))),("inline"===k||"inline-block"===k&&null!=j)&&"none"===r.css(a,"float")&&(i||(m.done(function(){o.display=j}),null==j&&(k=o.display,j="none"===k?"":k)),o.display="inline-block")),c.overflow&&(o.overflow="hidden",m.always(function(){o.overflow=c.overflow[0],o.overflowX=c.overflow[1],o.overflowY=c.overflow[2]})),i=!1;for(d in n)i||(q?"hidden"in q&&(p=q.hidden):q=W.access(a,"fxshow",{display:j}),f&&(q.hidden=!p),p&&ia([a],!0),m.done(function(){p||ia([a]),W.remove(a,"fxshow");for(d in n)r.style(a,d,n[d])})),i=hb(p?q[d]:0,d,m),d in q||(q[d]=i.start,p&&(i.end=i.start,i.start=0))}}function jb(a,b){var c,d,e,f,g;for(c in a)if(d=r.camelCase(c),e=b[d],f=a[c],Array.isArray(f)&&(e=f[1],f=a[c]=f[0]),c!==d&&(a[d]=f,delete a[c]),g=r.cssHooks[d],g&&"expand"in g){f=g.expand(f),delete a[d];for(c in f)c in a||(a[c]=f[c],b[c]=e)}else b[d]=e}function kb(a,b,c){var d,e,f=0,g=kb.prefilters.length,h=r.Deferred().always(function(){delete i.elem}),i=function(){if(e)return!1;for(var b=ab||fb(),c=Math.max(0,j.startTime+j.duration-b),d=c/j.duration||0,f=1-d,g=0,i=j.tweens.length;g<i;g++)j.tweens[g].run(f);return h.notifyWith(a,[j,f,c]),f<1&&i?c:(i||h.notifyWith(a,[j,1,0]),h.resolveWith(a,[j]),!1)},j=h.promise({elem:a,props:r.extend({},b),opts:r.extend(!0,{specialEasing:{},easing:r.easing._default},c),originalProperties:b,originalOptions:c,startTime:ab||fb(),duration:c.duration,tweens:[],createTween:function(b,c){var d=r.Tween(a,j.opts,b,c,j.opts.specialEasing[b]||j.opts.easing);return j.tweens.push(d),d},stop:function(b){var c=0,d=b?j.tweens.length:0;if(e)return this;for(e=!0;c<d;c++)j.tweens[c].run(1);return b?(h.notifyWith(a,[j,1,0]),h.resolveWith(a,[j,b])):h.rejectWith(a,[j,b]),this}}),k=j.props;for(jb(k,j.opts.specialEasing);f<g;f++)if(d=kb.prefilters[f].call(j,a,k,j.opts))return r.isFunction(d.stop)&&(r._queueHooks(j.elem,j.opts.queue).stop=r.proxy(d.stop,d)),d;return r.map(k,hb,j),r.isFunction(j.opts.start)&&j.opts.start.call(a,j),j.progress(j.opts.progress).done(j.opts.done,j.opts.complete).fail(j.opts.fail).always(j.opts.always),r.fx.timer(r.extend(i,{elem:a,anim:j,queue:j.opts.queue})),j}r.Animation=r.extend(kb,{tweeners:{"*":[function(a,b){var c=this.createTween(a,b);return fa(c.elem,a,ba.exec(b),c),c}]},tweener:function(a,b){r.isFunction(a)?(b=a,a=["*"]):a=a.match(L);for(var c,d=0,e=a.length;d<e;d++)c=a[d],kb.tweeners[c]=kb.tweeners[c]||[],kb.tweeners[c].unshift(b)},prefilters:[ib],prefilter:function(a,b){b?kb.prefilters.unshift(a):kb.prefilters.push(a)}}),r.speed=function(a,b,c){var d=a&&"object"==typeof a?r.extend({},a):{complete:c||!c&&b||r.isFunction(a)&&a,duration:a,easing:c&&b||b&&!r.isFunction(b)&&b};return r.fx.off?d.duration=0:"number"!=typeof d.duration&&(d.duration in r.fx.speeds?d.duration=r.fx.speeds[d.duration]:d.duration=r.fx.speeds._default),null!=d.queue&&d.queue!==!0||(d.queue="fx"),d.old=d.complete,d.complete=function(){r.isFunction(d.old)&&d.old.call(this),d.queue&&r.dequeue(this,d.queue)},d},r.fn.extend({fadeTo:function(a,b,c,d){return this.filter(da).css("opacity",0).show().end().animate({opacity:b},a,c,d)},animate:function(a,b,c,d){var e=r.isEmptyObject(a),f=r.speed(b,c,d),g=function(){var b=kb(this,r.extend({},a),f);(e||W.get(this,"finish"))&&b.stop(!0)};return g.finish=g,e||f.queue===!1?this.each(g):this.queue(f.queue,g)},stop:function(a,b,c){var d=function(a){var b=a.stop;delete a.stop,b(c)};return"string"!=typeof a&&(c=b,b=a,a=void 0),b&&a!==!1&&this.queue(a||"fx",[]),this.each(function(){var b=!0,e=null!=a&&a+"queueHooks",f=r.timers,g=W.get(this);if(e)g[e]&&g[e].stop&&d(g[e]);else for(e in g)g[e]&&g[e].stop&&db.test(e)&&d(g[e]);for(e=f.length;e--;)f[e].elem!==this||null!=a&&f[e].queue!==a||(f[e].anim.stop(c),b=!1,f.splice(e,1));!b&&c||r.dequeue(this,a)})},finish:function(a){return a!==!1&&(a=a||"fx"),this.each(function(){var b,c=W.get(this),d=c[a+"queue"],e=c[a+"queueHooks"],f=r.timers,g=d?d.length:0;for(c.finish=!0,r.queue(this,a,[]),e&&e.stop&&e.stop.call(this,!0),b=f.length;b--;)f[b].elem===this&&f[b].queue===a&&(f[b].anim.stop(!0),f.splice(b,1));for(b=0;b<g;b++)d[b]&&d[b].finish&&d[b].finish.call(this);delete c.finish})}}),r.each(["toggle","show","hide"],function(a,b){var c=r.fn[b];r.fn[b]=function(a,d,e){return null==a||"boolean"==typeof a?c.apply(this,arguments):this.animate(gb(b,!0),a,d,e)}}),r.each({slideDown:gb("show"),slideUp:gb("hide"),slideToggle:gb("toggle"),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},function(a,b){r.fn[a]=function(a,c,d){return this.animate(b,a,c,d)}}),r.timers=[],r.fx.tick=function(){var a,b=0,c=r.timers;for(ab=r.now();b<c.length;b++)a=c[b],a()||c[b]!==a||c.splice(b--,1);c.length||r.fx.stop(),ab=void 0},r.fx.timer=function(a){r.timers.push(a),r.fx.start()},r.fx.interval=13,r.fx.start=function(){bb||(bb=!0,eb())},r.fx.stop=function(){bb=null},r.fx.speeds={slow:600,fast:200,_default:400},r.fn.delay=function(b,c){return b=r.fx?r.fx.speeds[b]||b:b,c=c||"fx",this.queue(c,function(c,d){var e=a.setTimeout(c,b);d.stop=function(){a.clearTimeout(e)}})},function(){var a=d.createElement("input"),b=d.createElement("select"),c=b.appendChild(d.createElement("option"));a.type="checkbox",o.checkOn=""!==a.value,o.optSelected=c.selected,a=d.createElement("input"),a.value="t",a.type="radio",o.radioValue="t"===a.value}();var lb,mb=r.expr.attrHandle;r.fn.extend({attr:function(a,b){return T(this,r.attr,a,b,arguments.length>1)},removeAttr:function(a){return this.each(function(){r.removeAttr(this,a)})}}),r.extend({attr:function(a,b,c){var d,e,f=a.nodeType;if(3!==f&&8!==f&&2!==f)return"undefined"==typeof a.getAttribute?r.prop(a,b,c):(1===f&&r.isXMLDoc(a)||(e=r.attrHooks[b.toLowerCase()]||(r.expr.match.bool.test(b)?lb:void 0)),void 0!==c?null===c?void r.removeAttr(a,b):e&&"set"in e&&void 0!==(d=e.set(a,c,b))?d:(a.setAttribute(b,c+""),c):e&&"get"in e&&null!==(d=e.get(a,b))?d:(d=r.find.attr(a,b),
null==d?void 0:d))},attrHooks:{type:{set:function(a,b){if(!o.radioValue&&"radio"===b&&B(a,"input")){var c=a.value;return a.setAttribute("type",b),c&&(a.value=c),b}}}},removeAttr:function(a,b){var c,d=0,e=b&&b.match(L);if(e&&1===a.nodeType)while(c=e[d++])a.removeAttribute(c)}}),lb={set:function(a,b,c){return b===!1?r.removeAttr(a,c):a.setAttribute(c,c),c}},r.each(r.expr.match.bool.source.match(/\w+/g),function(a,b){var c=mb[b]||r.find.attr;mb[b]=function(a,b,d){var e,f,g=b.toLowerCase();return d||(f=mb[g],mb[g]=e,e=null!=c(a,b,d)?g:null,mb[g]=f),e}});var nb=/^(?:input|select|textarea|button)$/i,ob=/^(?:a|area)$/i;r.fn.extend({prop:function(a,b){return T(this,r.prop,a,b,arguments.length>1)},removeProp:function(a){return this.each(function(){delete this[r.propFix[a]||a]})}}),r.extend({prop:function(a,b,c){var d,e,f=a.nodeType;if(3!==f&&8!==f&&2!==f)return 1===f&&r.isXMLDoc(a)||(b=r.propFix[b]||b,e=r.propHooks[b]),void 0!==c?e&&"set"in e&&void 0!==(d=e.set(a,c,b))?d:a[b]=c:e&&"get"in e&&null!==(d=e.get(a,b))?d:a[b]},propHooks:{tabIndex:{get:function(a){var b=r.find.attr(a,"tabindex");return b?parseInt(b,10):nb.test(a.nodeName)||ob.test(a.nodeName)&&a.href?0:-1}}},propFix:{"for":"htmlFor","class":"className"}}),o.optSelected||(r.propHooks.selected={get:function(a){var b=a.parentNode;return b&&b.parentNode&&b.parentNode.selectedIndex,null},set:function(a){var b=a.parentNode;b&&(b.selectedIndex,b.parentNode&&b.parentNode.selectedIndex)}}),r.each(["tabIndex","readOnly","maxLength","cellSpacing","cellPadding","rowSpan","colSpan","useMap","frameBorder","contentEditable"],function(){r.propFix[this.toLowerCase()]=this});function pb(a){var b=a.match(L)||[];return b.join(" ")}function qb(a){return a.getAttribute&&a.getAttribute("class")||""}r.fn.extend({addClass:function(a){var b,c,d,e,f,g,h,i=0;if(r.isFunction(a))return this.each(function(b){r(this).addClass(a.call(this,b,qb(this)))});if("string"==typeof a&&a){b=a.match(L)||[];while(c=this[i++])if(e=qb(c),d=1===c.nodeType&&" "+pb(e)+" "){g=0;while(f=b[g++])d.indexOf(" "+f+" ")<0&&(d+=f+" ");h=pb(d),e!==h&&c.setAttribute("class",h)}}return this},removeClass:function(a){var b,c,d,e,f,g,h,i=0;if(r.isFunction(a))return this.each(function(b){r(this).removeClass(a.call(this,b,qb(this)))});if(!arguments.length)return this.attr("class","");if("string"==typeof a&&a){b=a.match(L)||[];while(c=this[i++])if(e=qb(c),d=1===c.nodeType&&" "+pb(e)+" "){g=0;while(f=b[g++])while(d.indexOf(" "+f+" ")>-1)d=d.replace(" "+f+" "," ");h=pb(d),e!==h&&c.setAttribute("class",h)}}return this},toggleClass:function(a,b){var c=typeof a;return"boolean"==typeof b&&"string"===c?b?this.addClass(a):this.removeClass(a):r.isFunction(a)?this.each(function(c){r(this).toggleClass(a.call(this,c,qb(this),b),b)}):this.each(function(){var b,d,e,f;if("string"===c){d=0,e=r(this),f=a.match(L)||[];while(b=f[d++])e.hasClass(b)?e.removeClass(b):e.addClass(b)}else void 0!==a&&"boolean"!==c||(b=qb(this),b&&W.set(this,"__className__",b),this.setAttribute&&this.setAttribute("class",b||a===!1?"":W.get(this,"__className__")||""))})},hasClass:function(a){var b,c,d=0;b=" "+a+" ";while(c=this[d++])if(1===c.nodeType&&(" "+pb(qb(c))+" ").indexOf(b)>-1)return!0;return!1}});var rb=/\r/g;r.fn.extend({val:function(a){var b,c,d,e=this[0];{if(arguments.length)return d=r.isFunction(a),this.each(function(c){var e;1===this.nodeType&&(e=d?a.call(this,c,r(this).val()):a,null==e?e="":"number"==typeof e?e+="":Array.isArray(e)&&(e=r.map(e,function(a){return null==a?"":a+""})),b=r.valHooks[this.type]||r.valHooks[this.nodeName.toLowerCase()],b&&"set"in b&&void 0!==b.set(this,e,"value")||(this.value=e))});if(e)return b=r.valHooks[e.type]||r.valHooks[e.nodeName.toLowerCase()],b&&"get"in b&&void 0!==(c=b.get(e,"value"))?c:(c=e.value,"string"==typeof c?c.replace(rb,""):null==c?"":c)}}}),r.extend({valHooks:{option:{get:function(a){var b=r.find.attr(a,"value");return null!=b?b:pb(r.text(a))}},select:{get:function(a){var b,c,d,e=a.options,f=a.selectedIndex,g="select-one"===a.type,h=g?null:[],i=g?f+1:e.length;for(d=f<0?i:g?f:0;d<i;d++)if(c=e[d],(c.selected||d===f)&&!c.disabled&&(!c.parentNode.disabled||!B(c.parentNode,"optgroup"))){if(b=r(c).val(),g)return b;h.push(b)}return h},set:function(a,b){var c,d,e=a.options,f=r.makeArray(b),g=e.length;while(g--)d=e[g],(d.selected=r.inArray(r.valHooks.option.get(d),f)>-1)&&(c=!0);return c||(a.selectedIndex=-1),f}}}}),r.each(["radio","checkbox"],function(){r.valHooks[this]={set:function(a,b){if(Array.isArray(b))return a.checked=r.inArray(r(a).val(),b)>-1}},o.checkOn||(r.valHooks[this].get=function(a){return null===a.getAttribute("value")?"on":a.value})});var sb=/^(?:focusinfocus|focusoutblur)$/;r.extend(r.event,{trigger:function(b,c,e,f){var g,h,i,j,k,m,n,o=[e||d],p=l.call(b,"type")?b.type:b,q=l.call(b,"namespace")?b.namespace.split("."):[];if(h=i=e=e||d,3!==e.nodeType&&8!==e.nodeType&&!sb.test(p+r.event.triggered)&&(p.indexOf(".")>-1&&(q=p.split("."),p=q.shift(),q.sort()),k=p.indexOf(":")<0&&"on"+p,b=b[r.expando]?b:new r.Event(p,"object"==typeof b&&b),b.isTrigger=f?2:3,b.namespace=q.join("."),b.rnamespace=b.namespace?new RegExp("(^|\\.)"+q.join("\\.(?:.*\\.|)")+"(\\.|$)"):null,b.result=void 0,b.target||(b.target=e),c=null==c?[b]:r.makeArray(c,[b]),n=r.event.special[p]||{},f||!n.trigger||n.trigger.apply(e,c)!==!1)){if(!f&&!n.noBubble&&!r.isWindow(e)){for(j=n.delegateType||p,sb.test(j+p)||(h=h.parentNode);h;h=h.parentNode)o.push(h),i=h;i===(e.ownerDocument||d)&&o.push(i.defaultView||i.parentWindow||a)}g=0;while((h=o[g++])&&!b.isPropagationStopped())b.type=g>1?j:n.bindType||p,m=(W.get(h,"events")||{})[b.type]&&W.get(h,"handle"),m&&m.apply(h,c),m=k&&h[k],m&&m.apply&&U(h)&&(b.result=m.apply(h,c),b.result===!1&&b.preventDefault());return b.type=p,f||b.isDefaultPrevented()||n._default&&n._default.apply(o.pop(),c)!==!1||!U(e)||k&&r.isFunction(e[p])&&!r.isWindow(e)&&(i=e[k],i&&(e[k]=null),r.event.triggered=p,e[p](),r.event.triggered=void 0,i&&(e[k]=i)),b.result}},simulate:function(a,b,c){var d=r.extend(new r.Event,c,{type:a,isSimulated:!0});r.event.trigger(d,null,b)}}),r.fn.extend({trigger:function(a,b){return this.each(function(){r.event.trigger(a,b,this)})},triggerHandler:function(a,b){var c=this[0];if(c)return r.event.trigger(a,b,c,!0)}}),r.each("blur focus focusin focusout resize scroll click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup contextmenu".split(" "),function(a,b){r.fn[b]=function(a,c){return arguments.length>0?this.on(b,null,a,c):this.trigger(b)}}),r.fn.extend({hover:function(a,b){return this.mouseenter(a).mouseleave(b||a)}}),o.focusin="onfocusin"in a,o.focusin||r.each({focus:"focusin",blur:"focusout"},function(a,b){var c=function(a){r.event.simulate(b,a.target,r.event.fix(a))};r.event.special[b]={setup:function(){var d=this.ownerDocument||this,e=W.access(d,b);e||d.addEventListener(a,c,!0),W.access(d,b,(e||0)+1)},teardown:function(){var d=this.ownerDocument||this,e=W.access(d,b)-1;e?W.access(d,b,e):(d.removeEventListener(a,c,!0),W.remove(d,b))}}});var tb=a.location,ub=r.now(),vb=/\?/;r.parseXML=function(b){var c;if(!b||"string"!=typeof b)return null;try{c=(new a.DOMParser).parseFromString(b,"text/xml")}catch(d){c=void 0}return c&&!c.getElementsByTagName("parsererror").length||r.error("Invalid XML: "+b),c};var wb=/\[\]$/,xb=/\r?\n/g,yb=/^(?:submit|button|image|reset|file)$/i,zb=/^(?:input|select|textarea|keygen)/i;function Ab(a,b,c,d){var e;if(Array.isArray(b))r.each(b,function(b,e){c||wb.test(a)?d(a,e):Ab(a+"["+("object"==typeof e&&null!=e?b:"")+"]",e,c,d)});else if(c||"object"!==r.type(b))d(a,b);else for(e in b)Ab(a+"["+e+"]",b[e],c,d)}r.param=function(a,b){var c,d=[],e=function(a,b){var c=r.isFunction(b)?b():b;d[d.length]=encodeURIComponent(a)+"="+encodeURIComponent(null==c?"":c)};if(Array.isArray(a)||a.jquery&&!r.isPlainObject(a))r.each(a,function(){e(this.name,this.value)});else for(c in a)Ab(c,a[c],b,e);return d.join("&")},r.fn.extend({serialize:function(){return r.param(this.serializeArray())},serializeArray:function(){return this.map(function(){var a=r.prop(this,"elements");return a?r.makeArray(a):this}).filter(function(){var a=this.type;return this.name&&!r(this).is(":disabled")&&zb.test(this.nodeName)&&!yb.test(a)&&(this.checked||!ja.test(a))}).map(function(a,b){var c=r(this).val();return null==c?null:Array.isArray(c)?r.map(c,function(a){return{name:b.name,value:a.replace(xb,"\r\n")}}):{name:b.name,value:c.replace(xb,"\r\n")}}).get()}});var Bb=/%20/g,Cb=/#.*$/,Db=/([?&])_=[^&]*/,Eb=/^(.*?):[ \t]*([^\r\n]*)$/gm,Fb=/^(?:about|app|app-storage|.+-extension|file|res|widget):$/,Gb=/^(?:GET|HEAD)$/,Hb=/^\/\//,Ib={},Jb={},Kb="*/".concat("*"),Lb=d.createElement("a");Lb.href=tb.href;function Mb(a){return function(b,c){"string"!=typeof b&&(c=b,b="*");var d,e=0,f=b.toLowerCase().match(L)||[];if(r.isFunction(c))while(d=f[e++])"+"===d[0]?(d=d.slice(1)||"*",(a[d]=a[d]||[]).unshift(c)):(a[d]=a[d]||[]).push(c)}}function Nb(a,b,c,d){var e={},f=a===Jb;function g(h){var i;return e[h]=!0,r.each(a[h]||[],function(a,h){var j=h(b,c,d);return"string"!=typeof j||f||e[j]?f?!(i=j):void 0:(b.dataTypes.unshift(j),g(j),!1)}),i}return g(b.dataTypes[0])||!e["*"]&&g("*")}function Ob(a,b){var c,d,e=r.ajaxSettings.flatOptions||{};for(c in b)void 0!==b[c]&&((e[c]?a:d||(d={}))[c]=b[c]);return d&&r.extend(!0,a,d),a}function Pb(a,b,c){var d,e,f,g,h=a.contents,i=a.dataTypes;while("*"===i[0])i.shift(),void 0===d&&(d=a.mimeType||b.getResponseHeader("Content-Type"));if(d)for(e in h)if(h[e]&&h[e].test(d)){i.unshift(e);break}if(i[0]in c)f=i[0];else{for(e in c){if(!i[0]||a.converters[e+" "+i[0]]){f=e;break}g||(g=e)}f=f||g}if(f)return f!==i[0]&&i.unshift(f),c[f]}function Qb(a,b,c,d){var e,f,g,h,i,j={},k=a.dataTypes.slice();if(k[1])for(g in a.converters)j[g.toLowerCase()]=a.converters[g];f=k.shift();while(f)if(a.responseFields[f]&&(c[a.responseFields[f]]=b),!i&&d&&a.dataFilter&&(b=a.dataFilter(b,a.dataType)),i=f,f=k.shift())if("*"===f)f=i;else if("*"!==i&&i!==f){if(g=j[i+" "+f]||j["* "+f],!g)for(e in j)if(h=e.split(" "),h[1]===f&&(g=j[i+" "+h[0]]||j["* "+h[0]])){g===!0?g=j[e]:j[e]!==!0&&(f=h[0],k.unshift(h[1]));break}if(g!==!0)if(g&&a["throws"])b=g(b);else try{b=g(b)}catch(l){return{state:"parsererror",error:g?l:"No conversion from "+i+" to "+f}}}return{state:"success",data:b}}r.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:tb.href,type:"GET",isLocal:Fb.test(tb.protocol),global:!0,processData:!0,async:!0,contentType:"application/x-www-form-urlencoded; charset=UTF-8",accepts:{"*":Kb,text:"text/plain",html:"text/html",xml:"application/xml, text/xml",json:"application/json, text/javascript"},contents:{xml:/\bxml\b/,html:/\bhtml/,json:/\bjson\b/},responseFields:{xml:"responseXML",text:"responseText",json:"responseJSON"},converters:{"* text":String,"text html":!0,"text json":JSON.parse,"text xml":r.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(a,b){return b?Ob(Ob(a,r.ajaxSettings),b):Ob(r.ajaxSettings,a)},ajaxPrefilter:Mb(Ib),ajaxTransport:Mb(Jb),ajax:function(b,c){"object"==typeof b&&(c=b,b=void 0),c=c||{};var e,f,g,h,i,j,k,l,m,n,o=r.ajaxSetup({},c),p=o.context||o,q=o.context&&(p.nodeType||p.jquery)?r(p):r.event,s=r.Deferred(),t=r.Callbacks("once memory"),u=o.statusCode||{},v={},w={},x="canceled",y={readyState:0,getResponseHeader:function(a){var b;if(k){if(!h){h={};while(b=Eb.exec(g))h[b[1].toLowerCase()]=b[2]}b=h[a.toLowerCase()]}return null==b?null:b},getAllResponseHeaders:function(){return k?g:null},setRequestHeader:function(a,b){return null==k&&(a=w[a.toLowerCase()]=w[a.toLowerCase()]||a,v[a]=b),this},overrideMimeType:function(a){return null==k&&(o.mimeType=a),this},statusCode:function(a){var b;if(a)if(k)y.always(a[y.status]);else for(b in a)u[b]=[u[b],a[b]];return this},abort:function(a){var b=a||x;return e&&e.abort(b),A(0,b),this}};if(s.promise(y),o.url=((b||o.url||tb.href)+"").replace(Hb,tb.protocol+"//"),o.type=c.method||c.type||o.method||o.type,o.dataTypes=(o.dataType||"*").toLowerCase().match(L)||[""],null==o.crossDomain){j=d.createElement("a");try{j.href=o.url,j.href=j.href,o.crossDomain=Lb.protocol+"//"+Lb.host!=j.protocol+"//"+j.host}catch(z){o.crossDomain=!0}}if(o.data&&o.processData&&"string"!=typeof o.data&&(o.data=r.param(o.data,o.traditional)),Nb(Ib,o,c,y),k)return y;l=r.event&&o.global,l&&0===r.active++&&r.event.trigger("ajaxStart"),o.type=o.type.toUpperCase(),o.hasContent=!Gb.test(o.type),f=o.url.replace(Cb,""),o.hasContent?o.data&&o.processData&&0===(o.contentType||"").indexOf("application/x-www-form-urlencoded")&&(o.data=o.data.replace(Bb,"+")):(n=o.url.slice(f.length),o.data&&(f+=(vb.test(f)?"&":"?")+o.data,delete o.data),o.cache===!1&&(f=f.replace(Db,"$1"),n=(vb.test(f)?"&":"?")+"_="+ub++ +n),o.url=f+n),o.ifModified&&(r.lastModified[f]&&y.setRequestHeader("If-Modified-Since",r.lastModified[f]),r.etag[f]&&y.setRequestHeader("If-None-Match",r.etag[f])),(o.data&&o.hasContent&&o.contentType!==!1||c.contentType)&&y.setRequestHeader("Content-Type",o.contentType),y.setRequestHeader("Accept",o.dataTypes[0]&&o.accepts[o.dataTypes[0]]?o.accepts[o.dataTypes[0]]+("*"!==o.dataTypes[0]?", "+Kb+"; q=0.01":""):o.accepts["*"]);for(m in o.headers)y.setRequestHeader(m,o.headers[m]);if(o.beforeSend&&(o.beforeSend.call(p,y,o)===!1||k))return y.abort();if(x="abort",t.add(o.complete),y.done(o.success),y.fail(o.error),e=Nb(Jb,o,c,y)){if(y.readyState=1,l&&q.trigger("ajaxSend",[y,o]),k)return y;o.async&&o.timeout>0&&(i=a.setTimeout(function(){y.abort("timeout")},o.timeout));try{k=!1,e.send(v,A)}catch(z){if(k)throw z;A(-1,z)}}else A(-1,"No Transport");function A(b,c,d,h){var j,m,n,v,w,x=c;k||(k=!0,i&&a.clearTimeout(i),e=void 0,g=h||"",y.readyState=b>0?4:0,j=b>=200&&b<300||304===b,d&&(v=Pb(o,y,d)),v=Qb(o,v,y,j),j?(o.ifModified&&(w=y.getResponseHeader("Last-Modified"),w&&(r.lastModified[f]=w),w=y.getResponseHeader("etag"),w&&(r.etag[f]=w)),204===b||"HEAD"===o.type?x="nocontent":304===b?x="notmodified":(x=v.state,m=v.data,n=v.error,j=!n)):(n=x,!b&&x||(x="error",b<0&&(b=0))),y.status=b,y.statusText=(c||x)+"",j?s.resolveWith(p,[m,x,y]):s.rejectWith(p,[y,x,n]),y.statusCode(u),u=void 0,l&&q.trigger(j?"ajaxSuccess":"ajaxError",[y,o,j?m:n]),t.fireWith(p,[y,x]),l&&(q.trigger("ajaxComplete",[y,o]),--r.active||r.event.trigger("ajaxStop")))}return y},getJSON:function(a,b,c){return r.get(a,b,c,"json")},getScript:function(a,b){return r.get(a,void 0,b,"script")}}),r.each(["get","post"],function(a,b){r[b]=function(a,c,d,e){return r.isFunction(c)&&(e=e||d,d=c,c=void 0),r.ajax(r.extend({url:a,type:b,dataType:e,data:c,success:d},r.isPlainObject(a)&&a))}}),r._evalUrl=function(a){return r.ajax({url:a,type:"GET",dataType:"script",cache:!0,async:!1,global:!1,"throws":!0})},r.fn.extend({wrapAll:function(a){var b;return this[0]&&(r.isFunction(a)&&(a=a.call(this[0])),b=r(a,this[0].ownerDocument).eq(0).clone(!0),this[0].parentNode&&b.insertBefore(this[0]),b.map(function(){var a=this;while(a.firstElementChild)a=a.firstElementChild;return a}).append(this)),this},wrapInner:function(a){return r.isFunction(a)?this.each(function(b){r(this).wrapInner(a.call(this,b))}):this.each(function(){var b=r(this),c=b.contents();c.length?c.wrapAll(a):b.append(a)})},wrap:function(a){var b=r.isFunction(a);return this.each(function(c){r(this).wrapAll(b?a.call(this,c):a)})},unwrap:function(a){return this.parent(a).not("body").each(function(){r(this).replaceWith(this.childNodes)}),this}}),r.expr.pseudos.hidden=function(a){return!r.expr.pseudos.visible(a)},r.expr.pseudos.visible=function(a){return!!(a.offsetWidth||a.offsetHeight||a.getClientRects().length)},r.ajaxSettings.xhr=function(){try{return new a.XMLHttpRequest}catch(b){}};var Rb={0:200,1223:204},Sb=r.ajaxSettings.xhr();o.cors=!!Sb&&"withCredentials"in Sb,o.ajax=Sb=!!Sb,r.ajaxTransport(function(b){var c,d;if(o.cors||Sb&&!b.crossDomain)return{send:function(e,f){var g,h=b.xhr();if(h.open(b.type,b.url,b.async,b.username,b.password),b.xhrFields)for(g in b.xhrFields)h[g]=b.xhrFields[g];b.mimeType&&h.overrideMimeType&&h.overrideMimeType(b.mimeType),b.crossDomain||e["X-Requested-With"]||(e["X-Requested-With"]="XMLHttpRequest");for(g in e)h.setRequestHeader(g,e[g]);c=function(a){return function(){c&&(c=d=h.onload=h.onerror=h.onabort=h.onreadystatechange=null,"abort"===a?h.abort():"error"===a?"number"!=typeof h.status?f(0,"error"):f(h.status,h.statusText):f(Rb[h.status]||h.status,h.statusText,"text"!==(h.responseType||"text")||"string"!=typeof h.responseText?{binary:h.response}:{text:h.responseText},h.getAllResponseHeaders()))}},h.onload=c(),d=h.onerror=c("error"),void 0!==h.onabort?h.onabort=d:h.onreadystatechange=function(){4===h.readyState&&a.setTimeout(function(){c&&d()})},c=c("abort");try{h.send(b.hasContent&&b.data||null)}catch(i){if(c)throw i}},abort:function(){c&&c()}}}),r.ajaxPrefilter(function(a){a.crossDomain&&(a.contents.script=!1)}),r.ajaxSetup({accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},contents:{script:/\b(?:java|ecma)script\b/},converters:{"text script":function(a){return r.globalEval(a),a}}}),r.ajaxPrefilter("script",function(a){void 0===a.cache&&(a.cache=!1),a.crossDomain&&(a.type="GET")}),r.ajaxTransport("script",function(a){if(a.crossDomain){var b,c;return{send:function(e,f){b=r("<script>").prop({charset:a.scriptCharset,src:a.url}).on("load error",c=function(a){b.remove(),c=null,a&&f("error"===a.type?404:200,a.type)}),d.head.appendChild(b[0])},abort:function(){c&&c()}}}});var Tb=[],Ub=/(=)\?(?=&|$)|\?\?/;r.ajaxSetup({jsonp:"callback",jsonpCallback:function(){var a=Tb.pop()||r.expando+"_"+ub++;return this[a]=!0,a}}),r.ajaxPrefilter("json jsonp",function(b,c,d){var e,f,g,h=b.jsonp!==!1&&(Ub.test(b.url)?"url":"string"==typeof b.data&&0===(b.contentType||"").indexOf("application/x-www-form-urlencoded")&&Ub.test(b.data)&&"data");if(h||"jsonp"===b.dataTypes[0])return e=b.jsonpCallback=r.isFunction(b.jsonpCallback)?b.jsonpCallback():b.jsonpCallback,h?b[h]=b[h].replace(Ub,"$1"+e):b.jsonp!==!1&&(b.url+=(vb.test(b.url)?"&":"?")+b.jsonp+"="+e),b.converters["script json"]=function(){return g||r.error(e+" was not called"),g[0]},b.dataTypes[0]="json",f=a[e],a[e]=function(){g=arguments},d.always(function(){void 0===f?r(a).removeProp(e):a[e]=f,b[e]&&(b.jsonpCallback=c.jsonpCallback,Tb.push(e)),g&&r.isFunction(f)&&f(g[0]),g=f=void 0}),"script"}),o.createHTMLDocument=function(){var a=d.implementation.createHTMLDocument("").body;return a.innerHTML="<form></form><form></form>",2===a.childNodes.length}(),r.parseHTML=function(a,b,c){if("string"!=typeof a)return[];"boolean"==typeof b&&(c=b,b=!1);var e,f,g;return b||(o.createHTMLDocument?(b=d.implementation.createHTMLDocument(""),e=b.createElement("base"),e.href=d.location.href,b.head.appendChild(e)):b=d),f=C.exec(a),g=!c&&[],f?[b.createElement(f[1])]:(f=qa([a],b,g),g&&g.length&&r(g).remove(),r.merge([],f.childNodes))},r.fn.load=function(a,b,c){var d,e,f,g=this,h=a.indexOf(" ");return h>-1&&(d=pb(a.slice(h)),a=a.slice(0,h)),r.isFunction(b)?(c=b,b=void 0):b&&"object"==typeof b&&(e="POST"),g.length>0&&r.ajax({url:a,type:e||"GET",dataType:"html",data:b}).done(function(a){f=arguments,g.html(d?r("<div>").append(r.parseHTML(a)).find(d):a)}).always(c&&function(a,b){g.each(function(){c.apply(this,f||[a.responseText,b,a])})}),this},r.each(["ajaxStart","ajaxStop","ajaxComplete","ajaxError","ajaxSuccess","ajaxSend"],function(a,b){r.fn[b]=function(a){return this.on(b,a)}}),r.expr.pseudos.animated=function(a){return r.grep(r.timers,function(b){return a===b.elem}).length},r.offset={setOffset:function(a,b,c){var d,e,f,g,h,i,j,k=r.css(a,"position"),l=r(a),m={};"static"===k&&(a.style.position="relative"),h=l.offset(),f=r.css(a,"top"),i=r.css(a,"left"),j=("absolute"===k||"fixed"===k)&&(f+i).indexOf("auto")>-1,j?(d=l.position(),g=d.top,e=d.left):(g=parseFloat(f)||0,e=parseFloat(i)||0),r.isFunction(b)&&(b=b.call(a,c,r.extend({},h))),null!=b.top&&(m.top=b.top-h.top+g),null!=b.left&&(m.left=b.left-h.left+e),"using"in b?b.using.call(a,m):l.css(m)}},r.fn.extend({offset:function(a){if(arguments.length)return void 0===a?this:this.each(function(b){r.offset.setOffset(this,a,b)});var b,c,d,e,f=this[0];if(f)return f.getClientRects().length?(d=f.getBoundingClientRect(),b=f.ownerDocument,c=b.documentElement,e=b.defaultView,{top:d.top+e.pageYOffset-c.clientTop,left:d.left+e.pageXOffset-c.clientLeft}):{top:0,left:0}},position:function(){if(this[0]){var a,b,c=this[0],d={top:0,left:0};return"fixed"===r.css(c,"position")?b=c.getBoundingClientRect():(a=this.offsetParent(),b=this.offset(),B(a[0],"html")||(d=a.offset()),d={top:d.top+r.css(a[0],"borderTopWidth",!0),left:d.left+r.css(a[0],"borderLeftWidth",!0)}),{top:b.top-d.top-r.css(c,"marginTop",!0),left:b.left-d.left-r.css(c,"marginLeft",!0)}}},offsetParent:function(){return this.map(function(){var a=this.offsetParent;while(a&&"static"===r.css(a,"position"))a=a.offsetParent;return a||ra})}}),r.each({scrollLeft:"pageXOffset",scrollTop:"pageYOffset"},function(a,b){var c="pageYOffset"===b;r.fn[a]=function(d){return T(this,function(a,d,e){var f;return r.isWindow(a)?f=a:9===a.nodeType&&(f=a.defaultView),void 0===e?f?f[b]:a[d]:void(f?f.scrollTo(c?f.pageXOffset:e,c?e:f.pageYOffset):a[d]=e)},a,d,arguments.length)}}),r.each(["top","left"],function(a,b){r.cssHooks[b]=Pa(o.pixelPosition,function(a,c){if(c)return c=Oa(a,b),Ma.test(c)?r(a).position()[b]+"px":c})}),r.each({Height:"height",Width:"width"},function(a,b){r.each({padding:"inner"+a,content:b,"":"outer"+a},function(c,d){r.fn[d]=function(e,f){var g=arguments.length&&(c||"boolean"!=typeof e),h=c||(e===!0||f===!0?"margin":"border");return T(this,function(b,c,e){var f;return r.isWindow(b)?0===d.indexOf("outer")?b["inner"+a]:b.document.documentElement["client"+a]:9===b.nodeType?(f=b.documentElement,Math.max(b.body["scroll"+a],f["scroll"+a],b.body["offset"+a],f["offset"+a],f["client"+a])):void 0===e?r.css(b,c,h):r.style(b,c,e,h)},b,g?e:void 0,g)}})}),r.fn.extend({bind:function(a,b,c){return this.on(a,null,b,c)},unbind:function(a,b){return this.off(a,null,b)},delegate:function(a,b,c,d){return this.on(b,a,c,d)},undelegate:function(a,b,c){return 1===arguments.length?this.off(a,"**"):this.off(b,a||"**",c)}}),r.holdReady=function(a){a?r.readyWait++:r.ready(!0)},r.isArray=Array.isArray,r.parseJSON=JSON.parse,r.nodeName=B,"function"==typeof define&&define.amd&&define("jquery",[],function(){return r});var Vb=a.jQuery,Wb=a.$;return r.noConflict=function(b){return a.$===r&&(a.$=Wb),b&&a.jQuery===r&&(a.jQuery=Vb),r},b||(a.jQuery=a.$=r),r});
;

/* 
    The webproxy ExecuteCommand accepts parameters in JSON format and calls the Webproxy service to execute the appropiate method.
    The command to execute and its parameters are included in the JSON string. The parameteres are a string, usually also embeding another JSON string
    
    Example of a webservice call:
    
    {'ajaxTask':
        {
            'command':'shorten-url',
            'parameters':'{'url':'http://www-dev.barfoot.co.nz/#\'}'
        }
    }

    The caller is an optional parameter that identifies an object with a runOnSuccess method defined.
    This function is executed on succes.


    Addition to above: Execute will create the json structure for you. If you are only doing a basic call to the web proxy.
*/

var webproxy = {

    _endpoint: "/WebServices/WebProxy.asmx/ExecuteCommand",
    _contentType: "application/json; charset=utf-8",

    Execute: function (cammandName, parameters, success, failure) {
        /// <summary>Use this function for basic calls to the web proxy. Will create the json structure for you. If you need more custom structure use ExecuteCommand</summary>
        /// <param name="cammandName" type="string">Name of the command to call</param>
        /// <param name="parameters" type="jQueryElement">Json object to send to the server.</param>
        /// <param name="success" type="function">Success function with passed in parameters msg</param>
        /// <param name="failure" type="function">Failure function </param>

        var self = this;
        var jsonTask = JSON.stringify(
            {
                ajaxTask:
                {
                    command: cammandName,
                    parameters: JSON.stringify(parameters),
                }
            }
        );
        jQuery.support.cors = true;
        jQuery.ajax({
            url: self._endpoint,
            contentType: self._contentType,
            crossDomain: true,
            dataType: "json",
            type: "POST",
            data: jsonTask,
            headers: { "cache-control": "no-cache", "pragma": "no-cache" },
            cache: false,
            success: function (msg, result) {
                if (msg["d"] === "error") {
                    failure(result);
                }
                else
                    success(msg);
            },
            error: function (result) {
                failure(result);
            }
        });
    },


    ExecuteCommand: function (parameters, caller) {
        var self = this;
        jQuery.ajax({
            url: self._endpoint,
            contentType: self._contentType,
            crossDomain: true,
            dataType: "json",
            type: "POST",
            data: parameters,
            headers: { "cache-control": "no-cache", "pragma": "no-cache" },
            cache: false,
            success: function (msg) {
                if (caller) caller.runOnSuccess(msg);
            },
            error: function (result) { }
        });
    }
};

;
/* 
	AddEvent; Add to Calendar, v1.6.1 <http://addevent.com>
	Copyright (C) 2012-2018 AddEvent(R), Inc.
	@author Michael Nilsson
*/
function $d(e){return document.getElementById(e)}var addeventatc=function(){var e,t,a,n,o,d=!1,c=1,i=!1,l=!0,r=!1,s=!1,p=!1,u=1,v="",m=!0,g=!0,h=!0,f=!0,b=!0,w=!0,x="Apple Calendar",k="Google <em>(online)</em>",y="Outlook",_="Outlook.com <em>(online)</em>",T="Yahoo <em>(online)</em>",z="Facebook Event",E=null,N=null,C=null,I=null,$=null,A=null,L=!1;return{initialize:function(){if(!d){d=!0;try{addeventasync()}catch(e){}"https:","addevent.com","https://addevent.com",e="undefined"!=typeof SVGRect?"https://www.addevent.com/gfx/icon-calendar-t1.svg":"https://www.addevent.com/gfx/icon-calendar-t5.png",addeventatc.trycss(),addeventatc.generate()}},generate:function(){for(var e=document.getElementsByTagName("*"),t=0;t<e.length;t+=1)addeventatc.hasclass(e[t],"addeventatc")&&function(){var a="addeventatc"+c;e[t].id=a,e[t].title="",e[t].style.visibility="visible",e[t].setAttribute("aria-haspopup","true"),e[t].setAttribute("aria-expanded","false"),e[t].setAttribute("tabindex","0"),i?(e[t].onclick=function(){return!1},e[t].onmouseover=function(){clearTimeout(n),addeventatc.toogle(this,{type:"mouseover",id:a})},e[t].onmouseout=function(){n=setTimeout(function(){addeventatc.mouseout(this,{type:"mouseout",id:a})},100)}):(e[t].onclick=function(){return addeventatc.toogle(this,{type:"click",id:a}),!1},e[t].onmouseover=function(){},e[t].onmouseout=function(){}),e[t].onkeydown=function(e){var t=e.which||e.keyCode;"13"!=t&&"32"!=t&&"27"!=t&&"38"!=t&&"40"!=t||e.preventDefault(),"13"!=t&&"32"!=t||(addeventatc.keyboardclick(this,{type:"click",id:a}),addeventatc.toogle(this,{type:"click",id:a,keynav:!0})),"27"==t&&addeventatc.hideandreset(),"38"==t&&addeventatc.keyboard(this,{type:"keyboard",id:a,key:"up"}),"40"==t&&addeventatc.keyboard(this,{type:"keyboard",id:a,key:"down"}),L=!0},e[t].onblur=function(){L&&setTimeout(function(){addeventatc.hideandreset()},300)};var o=e[t];if("none"!=e[t].getAttribute("data-styling")&&"inline-buttons"!=e[t].getAttribute("data-render")||(l=!1),l){var d=document.createElement("span");d.className="addeventatc_icon",o.appendChild(d)}c++,r=!0;for(var s=e[t].getElementsByTagName("*"),p=0;p<s.length;p+=1)addeventatc.hasclass(s[p],"atc_node")||(""!=s[p].className?s[p].className+=" atc_node":s[p].className+="atc_node");if("inline-buttons"==e[t].getAttribute("data-render")){e[t].onclick=function(){},addeventatc.toogle(e[t],{type:"render",id:a}),e[t].setAttribute("aria-expanded","true"),e[t].removeAttribute("tabindex"),e[t].onkeydown=function(){},e[t].blur=function(){};var u=document.getElementById(a+"-drop");if(u){u.setAttribute("aria-hidden","false");for(s=u.getElementsByTagName("SPAN"),p=0;p<s.length;p+=1){s[p];s[p].tabIndex="0",s[p].onkeydown=function(e){var t=e.which||e.keyCode;"13"!=t&&"32"!=t||e.target.click()}}}}}();u=addeventatc.topzindex(),l?addeventatc.applycss():(addeventatc.removeelement($d("ate_css")),addeventatc.removeelement($d("ate_tmp_css")),addeventatc.helpercss()),r&&!s&&(s=!0,addeventatc.track({typ:"exposure",cal:""}))},toogle:function(e,n){var o,d,c,i=!1,l="";if(d=$d(o=e.id)){c=d.getAttribute("data-direct");var r=d.getAttribute("data-intel"),s=d.getAttribute("data-intel-apple");if("ios"==addeventatc.agent()&&"click"==n.type&&"true"!==s&&"false"!==r&&(c="appleical",d.setAttribute("data-intel-apple","true")),"outlook"==c||"google"==c||"yahoo"==c||"hotmail"==c||"outlookcom"==c||"appleical"==c||"apple"==c||"facebook"==c)"click"==n.type&&(addeventatc.click({button:o,service:c,id:n.id}),null!=E&&addeventatc.trigger("button_click",{id:o}));else if("mouseover"==n.type&&a!=d&&(p=!1),"click"==n.type||"render"==n.type||"mouseover"==n.type&&!p){"mouseover"==n.type&&(p=!0,null!=N&&addeventatc.trigger("button_mouseover",{id:o})),i=addeventatc.getburl({id:o,facebook:!0}),""==v&&(v="appleical,google,outlook,outlookcom,yahoo,facebook");for(var u=(v=(v+=",").replace(/ /gi,"")).split(","),C=0;C<u.length;C+=1)(m&&"ical"==u[C]||m&&"appleical"==u[C])&&(l+='<span class="ateappleical" id="'+o+'-appleical" role="menuitem">'+x+"</span>"),g&&"google"==u[C]&&(l+='<span class="ategoogle" id="'+o+'-google" role="menuitem">'+k+"</span>"),h&&"outlook"==u[C]&&(l+='<span class="ateoutlook" id="'+o+'-outlook" role="menuitem">'+y+"</span>"),(f&&"hotmail"==u[C]||f&&"outlookcom"==u[C])&&(l+='<span class="ateoutlookcom" id="'+o+'-outlookcom" role="menuitem">'+_+"</span>"),b&&"yahoo"==u[C]&&(l+='<span class="ateyahoo" id="'+o+'-yahoo" role="menuitem">'+T+"</span>"),i&&"facebook"==u[C]&&w&&"facebook"==u[C]&&(l+='<span class="atefacebook" id="'+o+'-facebook" role="menuitem">'+z+"</span>");if(addeventatc.getlicense(t)||(l+='<em class="copyx"><em class="brx"></em><em class="frs"><a href="https://www.addevent.com" title="" tabindex="-1" id="'+o+'-home">AddEvent.com</a></em></em>'),!$d(o+"-drop")){var I=document.createElement("span");I.id=o+"-drop",I.className="addeventatc_dropdown",I.setAttribute("aria-hidden","true"),I.setAttribute("aria-labelledby",o),I.innerHTML=l,d.appendChild(I)}$d(o+"-appleical")&&($d(o+"-appleical").onclick=function(){addeventatc.click({button:o,service:"appleical",id:n.id})}),$d(o+"-google")&&($d(o+"-google").onclick=function(){addeventatc.click({button:o,service:"google",id:n.id})}),$d(o+"-outlook")&&($d(o+"-outlook").onclick=function(){addeventatc.click({button:o,service:"outlook",id:n.id})}),$d(o+"-outlookcom")&&($d(o+"-outlookcom").onclick=function(){addeventatc.click({button:o,service:"outlookcom",id:n.id})}),$d(o+"-yahoo")&&($d(o+"-yahoo").onclick=function(){addeventatc.click({button:o,service:"yahoo",id:n.id})}),$d(o+"-facebook")&&($d(o+"-facebook").onclick=function(){addeventatc.click({button:o,service:"facebook",id:n.id})}),$d(o+"-home")&&($d(o+"-home").onclick=function(){addeventatc.click({button:o,service:"home",id:n.id})}),addeventatc.show(o,n)}return a=d,!1}},click:function(e){var t,a,n,o=location.origin,d=!0;if(void 0===location.origin&&(o=location.protocol+"//"+location.host),t=$d(e.button)){if("home"==e.service)n="https://www.addevent.com";else{a=addeventatc.getburl({id:e.button,facebook:!1}),n="https://www.addevent.com/create/?service="+e.service+a+"&reference="+o,"outlook"!=e.service&&"appleical"!=e.service||(d=!1,addeventatc.usewebcal()&&(n="webcal://www.addevent.com/create/?uwc=on&service="+e.service+a+"&reference="+o));var c=t.getAttribute("data-id");null!==c&&(n="https://www.addevent.com/event/"+c+"+"+e.service)}if(!$d("atecllink")){var i=document.createElement("a");i.id="atecllink",i.rel="external",i.setAttribute("data-role","none"),i.innerHTML="{addeventatc-ghost-link}",i.style.display="none",document.body.appendChild(i)}var l=$d("atecllink");if(l.target=d?"_blank":"_self",l.href=n,addeventatc.eclick("atecllink"),addeventatc.track({typ:"click",cal:e.service}),null!=A){addeventatc.trigger("button_dropdown_click",{id:e.button,service:e.service});try{(event||window.event).stopPropagation()}catch(e){}}}},mouseout:function(e,t){p=!1,addeventatc.hideandreset(),null!=C&&addeventatc.trigger("button_mouseout",{id:t.id})},show:function(e,t){var a=$d(e),n=$d(e+"-drop");if(a&&n)if("block"==addeventatc.getstyle(n,"display"))addeventatc.hideandreset();else{addeventatc.hideandreset(!0),n.style.display="block",a.style.outline="0",a.style.zIndex=u+1,a.className=a.className+" addeventatc-selected",a.className=a.className.replace(/\s+/g," "),a.setAttribute("aria-expanded","true"),n.setAttribute("aria-hidden","false"),t.keynav&&addeventatc.keyboard(this,{type:"keyboard",id:e,key:"down"});var o=a.getAttribute("data-dropdown-x"),d=a.getAttribute("data-dropdown-y"),c="auto",i="auto";null!=o&&(i=o),null!=d&&(c=d),n.style.left="0px",n.style.top="0px",n.style.display="block";var l=parseInt(a.offsetHeight),r=parseInt(a.offsetWidth),s=parseInt(n.offsetHeight),p=parseInt(n.offsetWidth),v=addeventatc.viewport(),m=parseInt(v.w),g=parseInt(v.h),h=parseInt(v.x),f=parseInt(v.y),b=addeventatc.elementposition(n),w=parseInt(b.x),x=parseInt(b.y)+s,k=g+f,y=0,_=0;"down"==c&&"left"==i?(y="0px",_=l+"px"):"up"==c&&"left"==i?(y="0px",_=-s+"px"):"down"==c&&"right"==i?(y=-(p-r)+"px",_=l+"px"):"up"==c&&"right"==i?(y=-(p-r)+"px",_=-s+"px"):"auto"==c&&"left"==i?(y="0px",_=x>k?-s+"px":l+"px"):"auto"==c&&"right"==i?(y=-(p-r)+"px",_=x>k?-s+"px":l+"px"):(_=x>k?-s+"px":l+"px",y=w+p>m+h?-(p-r)+"px":"0px"),n.style.left=y,n.style.top=_,"click"==t.type&&null!=E&&addeventatc.trigger("button_click",{id:e}),null!=I&&addeventatc.trigger("button_dropdown_show",{id:e})}},hide:function(e){var t=!1;("string"==typeof e&&""!==e||e instanceof String&&""!==e)&&(e.indexOf("addeventatc")>-1||e.indexOf("atc_node")>-1)&&(t=!0),t||addeventatc.hideandreset()},hideandreset:function(e){for(var t="",a=document.getElementsByTagName("*"),n=0;n<a.length;n+=1)if(addeventatc.hasclass(a[n],"addeventatc")){a[n].className=a[n].className.replace(/addeventatc-selected/gi,""),a[n].className=a[n].className.replace(/\s+$/,""),a[n].style.zIndex="auto",a[n].style.outline="";var o=$d(a[n].id+"-drop");if(o){var d=addeventatc.getstyle(o,"display");"block"==d&&(t=a[n].id),o.style.display="none","block"!==(d=addeventatc.getstyle(o,"display"))&&(a[n].setAttribute("aria-expanded","false"),o.setAttribute("aria-hidden","true"));for(var c=o.getElementsByTagName("SPAN"),i=0;i<c.length;i+=1){var l=new RegExp("(\\s|^)drop_markup(\\s|$)");c[i].className=c[i].className.replace(l," "),c[i].className=c[i].className.replace(/\s+$/,"")}}}e||null!=$&&addeventatc.trigger("button_dropdown_hide",{id:t})},getburl:function(e){var t=$d(e.id),a="",n=!1;if(t){for(var o=t.getElementsByTagName("*"),d=0;d<o.length;d+=1)(addeventatc.hasclass(o[d],"_start")||addeventatc.hasclass(o[d],"start"))&&(a+="&dstart="+encodeURIComponent(o[d].innerHTML)),(addeventatc.hasclass(o[d],"_end")||addeventatc.hasclass(o[d],"end"))&&(a+="&dend="+encodeURIComponent(o[d].innerHTML)),(addeventatc.hasclass(o[d],"_zonecode")||addeventatc.hasclass(o[d],"zonecode"))&&(a+="&dzone="+encodeURIComponent(o[d].innerHTML)),(addeventatc.hasclass(o[d],"_timezone")||addeventatc.hasclass(o[d],"timezone"))&&(a+="&dtime="+encodeURIComponent(o[d].innerHTML)),(addeventatc.hasclass(o[d],"_summary")||addeventatc.hasclass(o[d],"summary")||addeventatc.hasclass(o[d],"title"))&&(a+="&dsum="+encodeURIComponent(o[d].innerHTML)),(addeventatc.hasclass(o[d],"_description")||addeventatc.hasclass(o[d],"description"))&&(a+="&ddesc="+encodeURIComponent(o[d].innerHTML)),(addeventatc.hasclass(o[d],"_location")||addeventatc.hasclass(o[d],"location"))&&(a+="&dloca="+encodeURIComponent(o[d].innerHTML)),(addeventatc.hasclass(o[d],"_organizer")||addeventatc.hasclass(o[d],"organizer"))&&(a+="&dorga="+encodeURIComponent(o[d].innerHTML)),(addeventatc.hasclass(o[d],"_organizer_email")||addeventatc.hasclass(o[d],"organizer_email"))&&(a+="&dorgaem="+encodeURIComponent(o[d].innerHTML)),(addeventatc.hasclass(o[d],"_attendees")||addeventatc.hasclass(o[d],"attendees"))&&(a+="&datte="+encodeURIComponent(o[d].innerHTML)),(addeventatc.hasclass(o[d],"_all_day_event")||addeventatc.hasclass(o[d],"all_day_event"))&&(a+="&dallday="+encodeURIComponent(o[d].innerHTML)),(addeventatc.hasclass(o[d],"_date_format")||addeventatc.hasclass(o[d],"date_format"))&&(a+="&dateformat="+encodeURIComponent(o[d].innerHTML)),(addeventatc.hasclass(o[d],"_alarm_reminder")||addeventatc.hasclass(o[d],"alarm_reminder"))&&(a+="&alarm="+encodeURIComponent(o[d].innerHTML)),(addeventatc.hasclass(o[d],"_recurring")||addeventatc.hasclass(o[d],"recurring"))&&(a+="&drule="+encodeURIComponent(o[d].innerHTML)),(addeventatc.hasclass(o[d],"_facebook_event")||addeventatc.hasclass(o[d],"facebook_event"))&&(a+="&fbevent="+encodeURIComponent(o[d].innerHTML),n=!0),(addeventatc.hasclass(o[d],"_client")||addeventatc.hasclass(o[d],"client"))&&(a+="&client="+encodeURIComponent(o[d].innerHTML)),(addeventatc.hasclass(o[d],"_calname")||addeventatc.hasclass(o[d],"calname"))&&(a+="&calname="+encodeURIComponent(o[d].innerHTML)),(addeventatc.hasclass(o[d],"_uid")||addeventatc.hasclass(o[d],"uid"))&&(a+="&uid="+encodeURIComponent(o[d].innerHTML)),(addeventatc.hasclass(o[d],"_status")||addeventatc.hasclass(o[d],"status"))&&(a+="&status="+encodeURIComponent(o[d].innerHTML)),(addeventatc.hasclass(o[d],"_method")||addeventatc.hasclass(o[d],"method"))&&(a+="&method="+encodeURIComponent(o[d].innerHTML));"false"==t.getAttribute("data-google-api")&&(a+="&gapi=false")}return e.facebook&&(a=n),a},trycss:function(){if(!$d("ate_tmp_css")){try{var e="";e=".addeventatc {visibility:hidden;}",e+=".addeventatc .data {display:none!important;}",e+=".addeventatc .start, .addeventatc .end, .addeventatc .timezone, .addeventatc .title, .addeventatc .description, .addeventatc .location, .addeventatc .organizer, .addeventatc .organizer_email, .addeventatc .facebook_event, .addeventatc .all_day_event, .addeventatc .date_format, .addeventatc .alarm_reminder, .addeventatc .recurring, .addeventatc .attendees, .addeventatc .client, .addeventatc .calname, .addeventatc .uid, .addeventatc .status, .addeventatc .method {display:none!important;}",l&&(e+=".addeventatc {background-image:url(https://www.addevent.com/gfx/icon-calendar-t5.png), url(https://www.addevent.com/gfx/icon-calendar-t1.svg), url(https://www.addevent.com/gfx/icon-apple-t1.svg), url(https://www.addevent.com/gfx/icon-facebook-t1.svg), url(https://www.addevent.com/gfx/icon-google-t1.svg), url(https://www.addevent.com/gfx/icon-outlook-t1.svg), url(https://www.addevent.com/gfx/icon-yahoo-t1.svg);background-position:-9999px -9999px;background-repeat:no-repeat;}");var t=document.createElement("style");t.type="text/css",t.id="ate_tmp_css",t.styleSheet?t.styleSheet.cssText=e:t.appendChild(document.createTextNode(e)),document.getElementsByTagName("head")[0].appendChild(t)}catch(e){}addeventatc.track({typ:"jsinit",cal:""})}},applycss:function(){if(!$d("ate_css")){var a="";a+='.addeventatc {display:inline-block;*display:inline;zoom:1;position:relative;z-index:1;font-family:Roboto,"Helvetica Neue",Helvetica,Optima,Segoe,"Segoe UI",Candara,Calibri,Arial,sans-serif;color:#000!important;font-weight:300;line-height:100%!important;background-color:#fff;border:1px solid;border-color:#e5e6e9 #dfe0e4 #d0d1d5;font-size:15px;text-decoration:none;padding:13px 12px 12px 43px;-webkit-border-radius:3px;border-radius:3px;cursor:pointer;-webkit-font-smoothing:antialiased!important;text-shadow:1px 1px 1px rgba(0,0,0,0.004);-webkit-touch-callout:none;-webkit-user-select:none;-khtml-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-webkit-tap-highlight-color:rgba(0,0,0,0);background-image:url(https://www.addevent.com/gfx/icon-calendar-t5.png), url(https://www.addevent.com/gfx/icon-calendar-t1.svg), url(https://www.addevent.com/gfx/icon-apple-t1.svg), url(https://www.addevent.com/gfx/icon-facebook-t1.svg), url(https://www.addevent.com/gfx/icon-google-t1.svg), url(https://www.addevent.com/gfx/icon-outlook-t1.svg), url(https://www.addevent.com/gfx/icon-yahoo-t1.svg);background-position:-9999px -9999px;background-repeat:no-repeat;}',a+=".addeventatc:hover {border:1px solid #aab9d4;color:#000;font-size:15px;text-decoration:none;}",a+=".addeventatc:focus {outline:none;border:1px solid #aab9d4;}",a+=".addeventatc:active {top:1px;}",a+=".addeventatc-selected {background-color:#f9f9f9;}",a+=".addeventatc .addeventatc_icon {width:18px;height:18px;position:absolute;z-index:1;left:12px;top:10px;background:url("+e+") no-repeat;background-size:18px 18px;}",a+=".addeventatc .start, .addeventatc .end, .addeventatc .timezone, .addeventatc .title, .addeventatc .description, .addeventatc .location, .addeventatc .organizer, .addeventatc .organizer_email, .addeventatc .facebook_event, .addeventatc .all_day_event, .addeventatc .date_format, .addeventatc .alarm_reminder, .addeventatc .recurring, .addeventatc .attendees, .addeventatc .client, .addeventatc .calname, .addeventatc .uid, .addeventatc .status, .addeventatc .method {display:none!important;}",a+=".addeventatc .data {display:none!important;}",a+=".addeventatc br {display:none;}",addeventatc.getlicense(t)?a+=".addeventatc_dropdown {width:200px;position:absolute;z-index:99999;padding:6px 0px 6px 0px;background:#fff;text-align:left;display:none;margin-top:-2px;margin-left:-1px;border-top:1px solid #c8c8c8;border-right:1px solid #bebebe;border-bottom:1px solid #a8a8a8;border-left:1px solid #bebebe;-moz-border-radius:2px;-webkit-border-radius:2px;-webkit-box-shadow:1px 3px 6px rgba(0,0,0,0.15);-moz-box-shadow:1px 3px 6px rgba(0,0,0,0.15);box-shadow:1px 3px 6px rgba(0,0,0,0.15);}":a+=".addeventatc_dropdown {width:200px;position:absolute;z-index:99999;padding:6px 0px 0px 0px;background:#fff;text-align:left;display:none;margin-top:-2px;margin-left:-1px;border-top:1px solid #c8c8c8;border-right:1px solid #bebebe;border-bottom:1px solid #a8a8a8;border-left:1px solid #bebebe;-moz-border-radius:2px;-webkit-border-radius:2px;-webkit-box-shadow:1px 3px 6px rgba(0,0,0,0.15);-moz-box-shadow:1px 3px 6px rgba(0,0,0,0.15);box-shadow:1px 3px 6px rgba(0,0,0,0.15);}",a+=".addeventatc_dropdown span {display:block;line-height:100%;background:#fff;text-decoration:none;font-size:14px;color:#333;padding:9px 10px 9px 40px;}",a+=".addeventatc_dropdown span:hover {background-color:#f4f4f4;color:#000;text-decoration:none;font-size:14px;}",a+=".addeventatc_dropdown .drop_markup {background-color:#f4f4f4;color:#000;text-decoration:none;font-size:14px;}",a+=".addeventatc_dropdown .copyx {height:21px;display:block;position:relative;cursor:default;}",a+=".addeventatc_dropdown .brx {height:1px;overflow:hidden;background:#e0e0e0;position:absolute;z-index:100;left:10px;right:10px;top:9px;}",a+=".addeventatc_dropdown .frs {position:absolute;top:5px;cursor:pointer;right:10px;font-style:normal!important;font-weight:normal!important;text-align:right;z-index:101;line-height:9px!important;background:#fff;text-decoration:none;font-size:9px!important;color:#cacaca!important;}",a+=".addeventatc_dropdown .frs a {margin:0!important;padding:0!important;font-style:normal!important;font-weight:normal!important;line-height:9px!important;background-color:#fff!important;text-decoration:none;font-size:9px!important;color:#cacaca!important;padding-left:10px!important;display:inline-block;}",a+=".addeventatc_dropdown .frs a:hover {color:#999!important;}",a+=".addeventatc_dropdown .ateappleical {background-image:url(https://www.addevent.com/gfx/icon-apple-t1.svg);background-repeat:no-repeat;background-position:13px 50%;background-size:14px auto;}",a+=".addeventatc_dropdown .ateoutlook {background-image:url(https://www.addevent.com/gfx/icon-outlook-t1.svg);background-repeat:no-repeat;background-position:12px 50%;background-size:16px auto;}",a+=".addeventatc_dropdown .ateoutlookcom {background-image:url(https://www.addevent.com/gfx/icon-outlook-t1.svg);background-repeat:no-repeat;background-position:12px 50%;background-size:16px auto;}",a+=".addeventatc_dropdown .ategoogle {background-image:url(https://www.addevent.com/gfx/icon-google-t1.svg);background-repeat:no-repeat;background-position:12px 50%;background-size:16px auto;}",a+=".addeventatc_dropdown .ateyahoo {background-image:url(https://www.addevent.com/gfx/icon-yahoo-t1.svg);background-repeat:no-repeat;background-position:12px 50%;background-size:16px auto;}",a+=".addeventatc_dropdown .atefacebook {background-image:url(https://www.addevent.com/gfx/icon-facebook-t1.svg);background-repeat:no-repeat;background-position:12px 50%;background-size:16px auto;}",a+=".addeventatc_dropdown em {font-size:12px!important;color:#999!important;}";var n=document.createElement("style");n.type="text/css",n.id="ate_css",n.styleSheet?n.styleSheet.cssText=a:n.appendChild(document.createTextNode(a)),document.getElementsByTagName("head")[0].appendChild(n),addeventatc.removeelement($d("ate_tmp_css"))}},helpercss:function(){if(!$d("ate_helper_css")){var e="";e+=".addeventatc_dropdown .drop_markup {background-color:#f4f4f4;}",e+=".addeventatc_dropdown .frs a {margin:0!important;padding:0!important;font-style:normal!important;font-weight:normal!important;line-height:110%!important;background-color:#fff!important;text-decoration:none;font-size:9px!important;color:#cacaca!important;display:inline-block;}",e+=".addeventatc_dropdown .frs a:hover {color:#999!important;}",e+=".addeventatc .start, .addeventatc .end, .addeventatc .timezone, .addeventatc .title, .addeventatc .description, .addeventatc .location, .addeventatc .organizer, .addeventatc .organizer_email, .addeventatc .facebook_event, .addeventatc .all_day_event, .addeventatc .date_format, .addeventatc .alarm_reminder, .addeventatc .recurring, .addeventatc .attendees, .addeventatc .client, .addeventatc .calname, .addeventatc .uid, .addeventatc .status, .addeventatc .method {display:none!important;}";var t=document.createElement("style");t.type="text/css",t.id="ate_helper_css",t.styleSheet?t.styleSheet.cssText=e:t.appendChild(document.createTextNode(e)),document.getElementsByTagName("head")[0].appendChild(t)}},removeelement:function(e){try{return!!(hdx=e)&&hdx.parentNode.removeChild(hdx)}catch(e){}},topzindex:function(){for(var e=1,t=document.getElementsByTagName("*"),a=0;a<t.length;a+=1)if(addeventatc.hasclass(t[a],"addeventatc")||addeventatc.hasclass(t[a],"addeventstc")){var n=addeventatc.getstyle(t[a],"z-index");!isNaN(parseFloat(n))&&isFinite(n)&&(n=parseInt(n))>e&&(e=n)}return e},viewport:function(){var e=0,t=0,a=0,n=0;return"number"==typeof window.innerWidth?(e=window.innerWidth,t=window.innerHeight):document.documentElement&&(document.documentElement.clientWidth||document.documentElement.clientHeight)?(e=document.documentElement.clientWidth,t=document.documentElement.clientHeight):document.body&&(document.body.clientWidth||document.body.clientHeight)&&(e=document.body.clientWidth,t=document.body.clientHeight),document.all?(n=document.documentElement.scrollLeft?document.documentElement.scrollLeft:document.body.scrollLeft,a=document.documentElement.scrollTop?document.documentElement.scrollTop:document.body.scrollTop):(n=window.pageXOffset,a=window.pageYOffset),{w:e,h:t,x:n,y:a}},elementposition:function(e){var t=0,a=0;if(e.offsetParent)for(t=e.offsetLeft,a=e.offsetTop;e=e.offsetParent;)t+=e.offsetLeft,a+=e.offsetTop;return{x:t,y:a}},getstyle:function(e,t){var a,n=e;return n.currentStyle?a=n.currentStyle[t]:window.getComputedStyle&&(a=document.defaultView.getComputedStyle(n,null).getPropertyValue(t)),a},getlicense:function(e){var t=location.origin,a=!1;if(void 0===location.origin&&(t=location.protocol+"//"+location.host),e){var n=e.substring(0,1),o=e.substring(9,10),d=e.substring(17,18);"a"==n&&"z"==o&&"m"==d&&(a=!0)}return(-1==t.indexOf("addevent.com")&&"aao8iuet5zp9iqw5sm9z"==e||-1==t.indexOf("addevent.to")&&"aao8iuet5zp9iqw5sm9z"==e||-1==t.indexOf("addevent.com")&&"aao8iuet5zp9iqw5sm9z"==e)&&(a=!0),a},refresh:function(){for(var e=document.getElementsByTagName("*"),t=[],a=0;a<e.length;a+=1)if(addeventatc.hasclass(e[a],"addeventatc")){e[a].className=e[a].className.replace(/addeventatc-selected/gi,""),e[a].id="";for(var n=e[a].getElementsByTagName("*"),o=0;o<n.length;o+=1)(addeventatc.hasclass(n[o],"addeventatc_icon")||addeventatc.hasclass(n[o],"addeventatc_dropdown"))&&t.push(n[o])}for(var d=0;d<t.length;d+=1)addeventatc.removeelement(t[d]);addeventatc.removeelement($d("ate_css")),c=1,s=!1,addeventatc.generate()},hasclass:function(e,t){return new RegExp("(\\s|^)"+t+"(\\s|$)").test(e.className)},eclick:function(e){var t=document.getElementById(e);if(t.click)t.click();else if(document.createEvent){var a=document.createEvent("MouseEvents");a.initEvent("click",!0,!0),t.dispatchEvent(a)}},track:function(e){new Image,(new Date).getTime(),encodeURIComponent(window.location.origin)},getguid:function(){for(var e="addevent_track_cookie=",t="",a=document.cookie.split(";"),n=0;n<a.length;n++){for(var o=a[n];" "==o.charAt(0);)o=o.substring(1,o.length);0==o.indexOf(e)&&(t=o.substring(e.length,o.length))}if(""==t){var d=(addeventatc.s4()+addeventatc.s4()+"-"+addeventatc.s4()+"-4"+addeventatc.s4().substr(0,3)+"-"+addeventatc.s4()+"-"+addeventatc.s4()+addeventatc.s4()+addeventatc.s4()).toLowerCase(),c=new Date;c.setTime(c.getTime()+31536e6);var i="expires="+c.toUTCString();document.cookie="addevent_track_cookie="+d+"; "+i,t=d}return t},s4:function(){return(65536*(1+Math.random())|0).toString(16).substring(1)},documentclick:function(e){e=(e=e||window.event).target||e.srcElement,ate_touch_capable?(clearTimeout(o),o=setTimeout(function(){addeventatc.hide(e.className)},500)):addeventatc.hide(e.className)},trigger:function(e,t){if("button_click"==e)try{E(t)}catch(e){}if("button_mouseover"==e)try{N(t)}catch(e){}if("button_mouseout"==e)try{C(t)}catch(e){}if("button_dropdown_show"==e)try{I(t)}catch(e){}if("button_dropdown_hide"==e)try{$(t)}catch(e){}if("button_dropdown_click"==e)try{A(t)}catch(e){}},register:function(e,t){"button-click"==e&&(E=t),"button-mouseover"==e&&(N=t),"button-mouseout"==e&&(C=t),"button-dropdown-show"==e&&(I=t),"button-dropdown-hide"==e&&($=t),"button-dropdown-click"==e&&(A=t)},settings:function(e){null!=e.license&&(t=e.license),null!=e.css&&(e.css?l=!0:(l=!1,addeventatc.removeelement($d("ate_css")))),null!=e.mouse&&(i=e.mouse),/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)&&(i=!1),null!=e.outlook&&null!=e.outlook.show&&(h=e.outlook.show),null!=e.google&&null!=e.google.show&&(g=e.google.show),null!=e.yahoo&&null!=e.yahoo.show&&(b=e.yahoo.show),null!=e.hotmail&&null!=e.hotmail.show&&(f=e.hotmail.show),null!=e.outlookcom&&null!=e.outlookcom.show&&(f=e.outlookcom.show),null!=e.ical&&null!=e.ical.show&&(m=e.ical.show),null!=e.appleical&&null!=e.appleical.show&&(m=e.appleical.show),null!=e.facebook&&null!=e.facebook.show&&(w=e.facebook.show),null!=e.outlook&&null!=e.outlook.text&&(y=e.outlook.text),null!=e.google&&null!=e.google.text&&(k=e.google.text),null!=e.yahoo&&null!=e.yahoo.text&&(T=e.yahoo.text),null!=e.hotmail&&null!=e.hotmail.text&&(_=e.hotmail.text),null!=e.outlookcom&&null!=e.outlookcom.text&&(_=e.outlookcom.text),null!=e.ical&&null!=e.ical.text&&(x=e.ical.text),null!=e.appleical&&null!=e.appleical.text&&(x=e.appleical.text),null!=e.facebook&&null!=e.facebook.text&&(z=e.facebook.text),null!=e.dropdown&&null!=e.dropdown.order&&(v=e.dropdown.order)},keyboard:function(e,t){var a=document.getElementById(t.id+"-drop");if(a&&"block"==addeventatc.getstyle(a,"display")){for(var n=a.getElementsByTagName("SPAN"),o=null,d=0,c=0,i=0;i<n.length;i+=1)d++,addeventatc.hasclass(n[i],"drop_markup")&&(o=n[i],c=d);null===o?c=1:"down"==t.key?c>=d?c=1:c++:1==c?c=d:c--,d=0;for(i=0;i<n.length;i+=1)if(++d==c)n[i].className+=" drop_markup";else{var l=new RegExp("(\\s|^)drop_markup(\\s|$)");n[i].className=n[i].className.replace(l," "),n[i].className=n[i].className.replace(/\s+$/,"")}}},keyboardclick:function(e,t){var a=document.getElementById(t.id+"-drop");if(a){for(var n=a.getElementsByTagName("SPAN"),o=null,d=0;d<n.length;d+=1)addeventatc.hasclass(n[d],"drop_markup")&&(o=n[d]);if(null!==o){o.click();for(d=0;d<n.length;d+=1){var c=new RegExp("(\\s|^)drop_markup(\\s|$)");n[d].className=n[d].className.replace(c," "),n[d].className=n[d].className.replace(/\s+$/,"")}}}},usewebcal:function(){var e=!1,t=window.navigator.userAgent.toLowerCase(),a=/CriOS/i.test(navigator.userAgent),n=/iphone|ipod|ipad/.test(t),o=/(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(navigator.userAgent);return(n&&o||n&&a)&&(e=!0),e},agent:function(){var e=navigator.userAgent||navigator.vendor||window.opera;return/windows phone/i.test(e)?"windows_phone":/android/i.test(e)?"android":/iPad|iPhone|iPod/.test(e)&&!window.MSStream?"ios":"unknown"}}}();!function(e,t){"use strict";e=e||"docReady",t=t||window;var a=[],n=!1,o=!1;function d(){if(!n){n=!0;for(var e=0;e<a.length;e++)a[e].fn.call(window,a[e].ctx);a=[]}}function c(){"complete"===document.readyState&&d()}t[e]=function(e,t){if("function"!=typeof e)throw new TypeError("callback for docReady(fn) must be a function");n?setTimeout(function(){e(t)},1):(a.push({fn:e,ctx:t}),"complete"===document.readyState||!document.attachEvent&&"interactive"===document.readyState?setTimeout(d,1):o||(document.addEventListener?(document.addEventListener("DOMContentLoaded",d,!1),window.addEventListener("load",d,!1)):(document.attachEvent("onreadystatechange",c),window.attachEvent("onload",d)),o=!0))}}("addeventReady",window);var ate_touch_capable="ontouchstart"in window||window.DocumentTouch&&document instanceof window.DocumentTouch||navigator.maxTouchPoints>0||window.navigator.msMaxTouchPoints>0;window.addEventListener?(document.addEventListener("click",addeventatc.documentclick,!1),ate_touch_capable&&document.addEventListener("touchend",addeventatc.documentclick,!1)):window.attachEvent?(document.attachEvent("onclick",addeventatc.documentclick),ate_touch_capable&&document.attachEvent("ontouchend",addeventatc.documentclick)):document.onclick=function(){addeventatc.documentclick(event)},addeventReady(function(){addeventatc.initialize(),setTimeout("addeventatc.initialize();",200)});;
window.addeventasync = function () {
    addeventatc.settings({
        license: "aoeccihlqzyj7f6o0mov1337",
        mouse: false,
        css: false,
        outlook: { show: true, text: "Outlook Calendar" },
        google: { show: true, text: "Google Calendar" },
        yahoo: { show: false, text: "Yahoo Calendar" },
        hotmail: { show: false, text: "Hotmail Calendar" },
        ical: { show: true, text: "iCal Calendar" },
        facebook: { show: false, text: "Facebook Event" },
        dropdown: { order: "outlook,google,ical" }
    });
};;
/*!
 * Bootstrap v3.3.0 (http://getbootstrap.com)
 * Copyright 2011-2014 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 */

if (typeof jQuery === 'undefined') {
  throw new Error('Bootstrap\'s JavaScript requires jQuery')
}

+function ($) {
  var version = $.fn.jquery.split(' ')[0].split('.')
  if ((version[0] < 2 && version[1] < 9) || (version[0] == 1 && version[1] == 9 && version[2] < 1)) {
    throw new Error('Bootstrap\'s JavaScript requires jQuery version 1.9.1 or higher')
  }
}(jQuery);

/* ========================================================================
 * Bootstrap: transition.js v3.3.0
 * http://getbootstrap.com/javascript/#transitions
 * ========================================================================
 * Copyright 2011-2014 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * ======================================================================== */


+function ($) {
  'use strict';

  // CSS TRANSITION SUPPORT (Shoutout: http://www.modernizr.com/)
  // ============================================================

  function transitionEnd() {
    var el = document.createElement('bootstrap')

    var transEndEventNames = {
      WebkitTransition : 'webkitTransitionEnd',
      MozTransition    : 'transitionend',
      OTransition      : 'oTransitionEnd otransitionend',
      transition       : 'transitionend'
    }

    for (var name in transEndEventNames) {
      if (el.style[name] !== undefined) {
        return { end: transEndEventNames[name] }
      }
    }

    return false // explicit for ie8 (  ._.)
  }

  // http://blog.alexmaccaw.com/css-transitions
  $.fn.emulateTransitionEnd = function (duration) {
    var called = false
    var $el = this
    $(this).one('bsTransitionEnd', function () { called = true })
    var callback = function () { if (!called) $($el).trigger($.support.transition.end) }
    setTimeout(callback, duration)
    return this
  }

  $(function () {
    $.support.transition = transitionEnd()

    if (!$.support.transition) return

    $.event.special.bsTransitionEnd = {
      bindType: $.support.transition.end,
      delegateType: $.support.transition.end,
      handle: function (e) {
        if ($(e.target).is(this)) return e.handleObj.handler.apply(this, arguments)
      }
    }
  })

}(jQuery);

/* ========================================================================
 * Bootstrap: alert.js v3.3.0
 * http://getbootstrap.com/javascript/#alerts
 * ========================================================================
 * Copyright 2011-2014 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * ======================================================================== */


+function ($) {
  'use strict';

  // ALERT CLASS DEFINITION
  // ======================

  var dismiss = '[data-dismiss="alert"]'
  var Alert   = function (el) {
    $(el).on('click', dismiss, this.close)
  }

  Alert.VERSION = '3.3.0'

  Alert.TRANSITION_DURATION = 150

  Alert.prototype.close = function (e) {
    var $this    = $(this)
    var selector = $this.attr('data-target')

    if (!selector) {
      selector = $this.attr('href')
      selector = selector && selector.replace(/.*(?=#[^\s]*$)/, '') // strip for ie7
    }

    var $parent = $(selector)

    if (e) e.preventDefault()

    if (!$parent.length) {
      $parent = $this.closest('.alert')
    }

    $parent.trigger(e = $.Event('close.bs.alert'))

    if (e.isDefaultPrevented()) return

    $parent.removeClass('in')

    function removeElement() {
      // detach from parent, fire event then clean up data
      $parent.detach().trigger('closed.bs.alert').remove()
    }

    $.support.transition && $parent.hasClass('fade') ?
      $parent
        .one('bsTransitionEnd', removeElement)
        .emulateTransitionEnd(Alert.TRANSITION_DURATION) :
      removeElement()
  }


  // ALERT PLUGIN DEFINITION
  // =======================

  function Plugin(option) {
    return this.each(function () {
      var $this = $(this)
      var data  = $this.data('bs.alert')

      if (!data) $this.data('bs.alert', (data = new Alert(this)))
      if (typeof option == 'string') data[option].call($this)
    })
  }

  var old = $.fn.alert

  $.fn.alert             = Plugin
  $.fn.alert.Constructor = Alert


  // ALERT NO CONFLICT
  // =================

  $.fn.alert.noConflict = function () {
    $.fn.alert = old
    return this
  }


  // ALERT DATA-API
  // ==============

  $(document).on('click.bs.alert.data-api', dismiss, Alert.prototype.close)

}(jQuery);

/* ========================================================================
 * Bootstrap: button.js v3.3.0
 * http://getbootstrap.com/javascript/#buttons
 * ========================================================================
 * Copyright 2011-2014 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * ======================================================================== */


+function ($) {
  'use strict';

  // BUTTON PUBLIC CLASS DEFINITION
  // ==============================

  var Button = function (element, options) {
    this.$element  = $(element)
    this.options   = $.extend({}, Button.DEFAULTS, options)
    this.isLoading = false
  }

  Button.VERSION  = '3.3.0'

  Button.DEFAULTS = {
    loadingText: 'loading...'
  }

  Button.prototype.setState = function (state) {
    var d    = 'disabled'
    var $el  = this.$element
    var val  = $el.is('input') ? 'val' : 'html'
    var data = $el.data()

    state = state + 'Text'

    if (data.resetText == null) $el.data('resetText', $el[val]())

    // push to event loop to allow forms to submit
    setTimeout($.proxy(function () {
      $el[val](data[state] == null ? this.options[state] : data[state])

      if (state == 'loadingText') {
        this.isLoading = true
        $el.addClass(d).attr(d, d)
      } else if (this.isLoading) {
        this.isLoading = false
        $el.removeClass(d).removeAttr(d)
      }
    }, this), 0)
  }

  Button.prototype.toggle = function () {
    var changed = true
    var $parent = this.$element.closest('[data-toggle="buttons"]')

    if ($parent.length) {
      var $input = this.$element.find('input')
      if ($input.prop('type') == 'radio') {
        if ($input.prop('checked') && this.$element.hasClass('active')) changed = false
        else $parent.find('.active').removeClass('active')
      }
      if (changed) $input.prop('checked', !this.$element.hasClass('active')).trigger('change')
    } else {
      this.$element.attr('aria-pressed', !this.$element.hasClass('active'))
    }

    if (changed) this.$element.toggleClass('active')
  }


  // BUTTON PLUGIN DEFINITION
  // ========================

  function Plugin(option) {
    return this.each(function () {
      var $this   = $(this)
      var data    = $this.data('bs.button')
      var options = typeof option == 'object' && option

      if (!data) $this.data('bs.button', (data = new Button(this, options)))

      if (option == 'toggle') data.toggle()
      else if (option) data.setState(option)
    })
  }

  var old = $.fn.button

  $.fn.button             = Plugin
  $.fn.button.Constructor = Button


  // BUTTON NO CONFLICT
  // ==================

  $.fn.button.noConflict = function () {
    $.fn.button = old
    return this
  }


  // BUTTON DATA-API
  // ===============

  $(document)
    .on('click.bs.button.data-api', '[data-toggle^="button"]', function (e) {
      var $btn = $(e.target)
      if (!$btn.hasClass('btn')) $btn = $btn.closest('.btn')
      Plugin.call($btn, 'toggle')
      e.preventDefault()
    })
    .on('focus.bs.button.data-api blur.bs.button.data-api', '[data-toggle^="button"]', function (e) {
      $(e.target).closest('.btn').toggleClass('focus', e.type == 'focus')
    })

}(jQuery);

/* ========================================================================
 * Bootstrap: carousel.js v3.3.0
 * http://getbootstrap.com/javascript/#carousel
 * ========================================================================
 * Copyright 2011-2014 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * ======================================================================== */


+function ($) {
  'use strict';

  // CAROUSEL CLASS DEFINITION
  // =========================

  var Carousel = function (element, options) {
    this.$element    = $(element)
    this.$indicators = this.$element.find('.carousel-indicators')
    this.options     = options
    this.paused      =
    this.sliding     =
    this.interval    =
    this.$active     =
    this.$items      = null

    this.options.keyboard && this.$element.on('keydown.bs.carousel', $.proxy(this.keydown, this))

    this.options.pause == 'hover' && !('ontouchstart' in document.documentElement) && this.$element
      .on('mouseenter.bs.carousel', $.proxy(this.pause, this))
      .on('mouseleave.bs.carousel', $.proxy(this.cycle, this))
  }

  Carousel.VERSION  = '3.3.0'

  Carousel.TRANSITION_DURATION = 600

  Carousel.DEFAULTS = {
    interval: 5000,
    pause: 'hover',
    wrap: true,
    keyboard: true
  }

  Carousel.prototype.keydown = function (e) {
    switch (e.which) {
      case 37: this.prev(); break
      case 39: this.next(); break
      default: return
    }

    e.preventDefault()
  }

  Carousel.prototype.cycle = function (e) {
    e || (this.paused = false)

    this.interval && clearInterval(this.interval)

    this.options.interval
      && !this.paused
      && (this.interval = setInterval($.proxy(this.next, this), this.options.interval))

    return this
  }

  Carousel.prototype.getItemIndex = function (item) {
    this.$items = item.parent().children('.item')
    return this.$items.index(item || this.$active)
  }

  Carousel.prototype.getItemForDirection = function (direction, active) {
    var delta = direction == 'prev' ? -1 : 1
    var activeIndex = this.getItemIndex(active)
    var itemIndex = (activeIndex + delta) % this.$items.length
    return this.$items.eq(itemIndex)
  }

  Carousel.prototype.to = function (pos) {
    var that        = this
    var activeIndex = this.getItemIndex(this.$active = this.$element.find('.item.active'))

    if (pos > (this.$items.length - 1) || pos < 0) return

    if (this.sliding)       return this.$element.one('slid.bs.carousel', function () { that.to(pos) }) // yes, "slid"
    if (activeIndex == pos) return this.pause().cycle()

    return this.slide(pos > activeIndex ? 'next' : 'prev', this.$items.eq(pos))
  }

  Carousel.prototype.pause = function (e) {
    e || (this.paused = true)

    if (this.$element.find('.next, .prev').length && $.support.transition) {
      this.$element.trigger($.support.transition.end)
      this.cycle(true)
    }

    this.interval = clearInterval(this.interval)

    return this
  }

  Carousel.prototype.next = function () {
    if (this.sliding) return
    return this.slide('next')
  }

  Carousel.prototype.prev = function () {
    if (this.sliding) return
    return this.slide('prev')
  }

  Carousel.prototype.slide = function (type, next) {
    var $active   = this.$element.find('.item.active')
    var $next     = next || this.getItemForDirection(type, $active)
    var isCycling = this.interval
    var direction = type == 'next' ? 'left' : 'right'
    var fallback  = type == 'next' ? 'first' : 'last'
    var that      = this

    if (!$next.length) {
      if (!this.options.wrap) return
      $next = this.$element.find('.item')[fallback]()
    }

    if ($next.hasClass('active')) return (this.sliding = false)

    var relatedTarget = $next[0]
    var slideEvent = $.Event('slide.bs.carousel', {
      relatedTarget: relatedTarget,
      direction: direction
    })
    this.$element.trigger(slideEvent)
    if (slideEvent.isDefaultPrevented()) return

    this.sliding = true

    isCycling && this.pause()

    if (this.$indicators.length) {
      this.$indicators.find('.active').removeClass('active')
      var $nextIndicator = $(this.$indicators.children()[this.getItemIndex($next)])
      $nextIndicator && $nextIndicator.addClass('active')
    }

    var slidEvent = $.Event('slid.bs.carousel', { relatedTarget: relatedTarget, direction: direction }) // yes, "slid"
    if ($.support.transition && this.$element.hasClass('slide')) {
      $next.addClass(type)
      $next[0].offsetWidth // force reflow
      $active.addClass(direction)
      $next.addClass(direction)
      $active
        .one('bsTransitionEnd', function () {
          $next.removeClass([type, direction].join(' ')).addClass('active')
          $active.removeClass(['active', direction].join(' '))
          that.sliding = false
          setTimeout(function () {
            that.$element.trigger(slidEvent)
          }, 0)
        })
        .emulateTransitionEnd(Carousel.TRANSITION_DURATION)
    } else {
      $active.removeClass('active')
      $next.addClass('active')
      this.sliding = false
      this.$element.trigger(slidEvent)
    }

    isCycling && this.cycle()

    return this
  }


  // CAROUSEL PLUGIN DEFINITION
  // ==========================

  function Plugin(option) {
    return this.each(function () {
      var $this   = $(this)
      var data    = $this.data('bs.carousel')
      var options = $.extend({}, Carousel.DEFAULTS, $this.data(), typeof option == 'object' && option)
      var action  = typeof option == 'string' ? option : options.slide

      if (!data) $this.data('bs.carousel', (data = new Carousel(this, options)))
      if (typeof option == 'number') data.to(option)
      else if (action) data[action]()
      else if (options.interval) data.pause().cycle()
    })
  }

  var old = $.fn.carousel

  $.fn.carousel             = Plugin
  $.fn.carousel.Constructor = Carousel


  // CAROUSEL NO CONFLICT
  // ====================

  $.fn.carousel.noConflict = function () {
    $.fn.carousel = old
    return this
  }


  // CAROUSEL DATA-API
  // =================

  var clickHandler = function (e) {
    var href
    var $this   = $(this)
    var $target = $($this.attr('data-target') || (href = $this.attr('href')) && href.replace(/.*(?=#[^\s]+$)/, '')) // strip for ie7
    if (!$target.hasClass('carousel')) return
    var options = $.extend({}, $target.data(), $this.data())
    var slideIndex = $this.attr('data-slide-to')
    if (slideIndex) options.interval = false

    Plugin.call($target, options)

    if (slideIndex) {
      $target.data('bs.carousel').to(slideIndex)
    }

    e.preventDefault()
  }

  $(document)
    .on('click.bs.carousel.data-api', '[data-slide]', clickHandler)
    .on('click.bs.carousel.data-api', '[data-slide-to]', clickHandler)

  $(window).on('load', function () {
    $('[data-ride="carousel"]').each(function () {
      var $carousel = $(this)
      Plugin.call($carousel, $carousel.data())
    })
  })

}(jQuery);

/* ========================================================================
 * Bootstrap: collapse.js v3.3.0
 * http://getbootstrap.com/javascript/#collapse
 * ========================================================================
 * Copyright 2011-2014 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * ======================================================================== */


+function ($) {
  'use strict';

  // COLLAPSE PUBLIC CLASS DEFINITION
  // ================================

  var Collapse = function (element, options) {
    this.$element      = $(element)
    this.options       = $.extend({}, Collapse.DEFAULTS, options)
    this.$trigger      = $(this.options.trigger).filter('[href="#' + element.id + '"], [data-target="#' + element.id + '"]')
    this.transitioning = null

    if (this.options.parent) {
      this.$parent = this.getParent()
    } else {
      this.addAriaAndCollapsedClass(this.$element, this.$trigger)
    }

    if (this.options.toggle) this.toggle()
  }

  Collapse.VERSION  = '3.3.0'

  Collapse.TRANSITION_DURATION = 350

  Collapse.DEFAULTS = {
    toggle: true,
    trigger: '[data-toggle="collapse"]'
  }

  Collapse.prototype.dimension = function () {
    var hasWidth = this.$element.hasClass('width')
    return hasWidth ? 'width' : 'height'
  }

  Collapse.prototype.show = function () {
    if (this.transitioning || this.$element.hasClass('in')) return

    var activesData
    var actives = this.$parent && this.$parent.find('> .panel').children('.in, .collapsing')

    if (actives && actives.length) {
      activesData = actives.data('bs.collapse')
      if (activesData && activesData.transitioning) return
    }

    var startEvent = $.Event('show.bs.collapse')
    this.$element.trigger(startEvent)
    if (startEvent.isDefaultPrevented()) return

    if (actives && actives.length) {
      Plugin.call(actives, 'hide')
      activesData || actives.data('bs.collapse', null)
    }

    var dimension = this.dimension()

    this.$element
      .removeClass('collapse')
      .addClass('collapsing')[dimension](0)
      .attr('aria-expanded', true)

    this.$trigger
      .removeClass('collapsed')
      .attr('aria-expanded', true)

    this.transitioning = 1

    var complete = function () {
      this.$element
        .removeClass('collapsing')
        .addClass('collapse in')[dimension]('')
      this.transitioning = 0
      this.$element
        .trigger('shown.bs.collapse')
    }

    if (!$.support.transition) return complete.call(this)

    var scrollSize = $.camelCase(['scroll', dimension].join('-'))

    this.$element
      .one('bsTransitionEnd', $.proxy(complete, this))
      .emulateTransitionEnd(Collapse.TRANSITION_DURATION)[dimension](this.$element[0][scrollSize])
  }

  Collapse.prototype.hide = function () {
    if (this.transitioning || !this.$element.hasClass('in')) return

    var startEvent = $.Event('hide.bs.collapse')
    this.$element.trigger(startEvent)
    if (startEvent.isDefaultPrevented()) return

    var dimension = this.dimension()

    this.$element[dimension](this.$element[dimension]())[0].offsetHeight

    this.$element
      .addClass('collapsing')
      .removeClass('collapse in')
      .attr('aria-expanded', false)

    this.$trigger
      .addClass('collapsed')
      .attr('aria-expanded', false)

    this.transitioning = 1

    var complete = function () {
      this.transitioning = 0
      this.$element
        .removeClass('collapsing')
        .addClass('collapse')
        .trigger('hidden.bs.collapse')
    }

    if (!$.support.transition) return complete.call(this)

    this.$element
      [dimension](0)
      .one('bsTransitionEnd', $.proxy(complete, this))
      .emulateTransitionEnd(Collapse.TRANSITION_DURATION)
  }

  Collapse.prototype.toggle = function () {
    this[this.$element.hasClass('in') ? 'hide' : 'show']()
  }

  Collapse.prototype.getParent = function () {
    return $(this.options.parent)
      .find('[data-toggle="collapse"][data-parent="' + this.options.parent + '"]')
      .each($.proxy(function (i, element) {
        var $element = $(element)
        this.addAriaAndCollapsedClass(getTargetFromTrigger($element), $element)
      }, this))
      .end()
  }

  Collapse.prototype.addAriaAndCollapsedClass = function ($element, $trigger) {
    var isOpen = $element.hasClass('in')

    $element.attr('aria-expanded', isOpen)
    $trigger
      .toggleClass('collapsed', !isOpen)
      .attr('aria-expanded', isOpen)
  }

  function getTargetFromTrigger($trigger) {
    var href
    var target = $trigger.attr('data-target')
      || (href = $trigger.attr('href')) && href.replace(/.*(?=#[^\s]+$)/, '') // strip for ie7

    return $(target)
  }


  // COLLAPSE PLUGIN DEFINITION
  // ==========================

  function Plugin(option) {
    return this.each(function () {
      var $this   = $(this)
      var data    = $this.data('bs.collapse')
      var options = $.extend({}, Collapse.DEFAULTS, $this.data(), typeof option == 'object' && option)

      if (!data && options.toggle && option == 'show') options.toggle = false
      if (!data) $this.data('bs.collapse', (data = new Collapse(this, options)))
      if (typeof option == 'string') data[option]()
    })
  }

  var old = $.fn.collapse

  $.fn.collapse             = Plugin
  $.fn.collapse.Constructor = Collapse


  // COLLAPSE NO CONFLICT
  // ====================

  $.fn.collapse.noConflict = function () {
    $.fn.collapse = old
    return this
  }


  // COLLAPSE DATA-API
  // =================

  $(document).on('click.bs.collapse.data-api', '[data-toggle="collapse"]', function (e) {
    var $this   = $(this)

    if (!$this.attr('data-target')) e.preventDefault()

    var $target = getTargetFromTrigger($this)
    var data    = $target.data('bs.collapse')
    var option  = data ? 'toggle' : $.extend({}, $this.data(), { trigger: this })

    Plugin.call($target, option)
  })

}(jQuery);

/* ========================================================================
 * Bootstrap: dropdown.js v3.3.0
 * http://getbootstrap.com/javascript/#dropdowns
 * ========================================================================
 * Copyright 2011-2014 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * ======================================================================== */


+function ($) {
  'use strict';

  // DROPDOWN CLASS DEFINITION
  // =========================

  var backdrop = '.dropdown-backdrop'
  var toggle   = '[data-toggle="dropdown"]'
  var Dropdown = function (element) {
    $(element).on('click.bs.dropdown', this.toggle)
  }

  Dropdown.VERSION = '3.3.0'

  Dropdown.prototype.toggle = function (e) {
    var $this = $(this)

    if ($this.is('.disabled, :disabled')) return

    var $parent  = getParent($this)
    var isActive = $parent.hasClass('open')

    clearMenus()

    if (!isActive) {
      if ('ontouchstart' in document.documentElement && !$parent.closest('.navbar-nav').length) {
        // if mobile we use a backdrop because click events don't delegate
        $('<div class="dropdown-backdrop"/>').insertAfter($(this)).on('click', clearMenus)
      }

      var relatedTarget = { relatedTarget: this }
      $parent.trigger(e = $.Event('show.bs.dropdown', relatedTarget))

      if (e.isDefaultPrevented()) return

      $this
        .trigger('focus')
        .attr('aria-expanded', 'true')

      $parent
        .toggleClass('open')
        .trigger('shown.bs.dropdown', relatedTarget)
    }

    return false
  }

  Dropdown.prototype.keydown = function (e) {
    if (!/(38|40|27|32)/.test(e.which)) return

    var $this = $(this)

    e.preventDefault()
    e.stopPropagation()

    if ($this.is('.disabled, :disabled')) return

    var $parent  = getParent($this)
    var isActive = $parent.hasClass('open')

    if ((!isActive && e.which != 27) || (isActive && e.which == 27)) {
      if (e.which == 27) $parent.find(toggle).trigger('focus')
      return $this.trigger('click')
    }

    var desc = ' li:not(.divider):visible a'
    var $items = $parent.find('[role="menu"]' + desc + ', [role="listbox"]' + desc)

    if (!$items.length) return

    var index = $items.index(e.target)

    if (e.which == 38 && index > 0)                 index--                        // up
    if (e.which == 40 && index < $items.length - 1) index++                        // down
    if (!~index)                                      index = 0

    $items.eq(index).trigger('focus')
  }

  function clearMenus(e) {
    if (e && e.which === 3) return
    $(backdrop).remove()
    $(toggle).each(function () {
      var $this         = $(this)
      var $parent       = getParent($this)
      var relatedTarget = { relatedTarget: this }

      if (!$parent.hasClass('open')) return

      $parent.trigger(e = $.Event('hide.bs.dropdown', relatedTarget))

      if (e.isDefaultPrevented()) return

      $this.attr('aria-expanded', 'false')
      $parent.removeClass('open').trigger('hidden.bs.dropdown', relatedTarget)
    })
  }

  function getParent($this) {
    var selector = $this.attr('data-target')

    if (!selector) {
      selector = $this.attr('href')
      selector = selector && /#[A-Za-z]/.test(selector) && selector.replace(/.*(?=#[^\s]*$)/, '') // strip for ie7
    }

    var $parent = selector && $(selector)

    return $parent && $parent.length ? $parent : $this.parent()
  }


  // DROPDOWN PLUGIN DEFINITION
  // ==========================

  function Plugin(option) {
    return this.each(function () {
      var $this = $(this)
      var data  = $this.data('bs.dropdown')

      if (!data) $this.data('bs.dropdown', (data = new Dropdown(this)))
      if (typeof option == 'string') data[option].call($this)
    })
  }

  var old = $.fn.dropdown

  $.fn.dropdown             = Plugin
  $.fn.dropdown.Constructor = Dropdown


  // DROPDOWN NO CONFLICT
  // ====================

  $.fn.dropdown.noConflict = function () {
    $.fn.dropdown = old
    return this
  }


  // APPLY TO STANDARD DROPDOWN ELEMENTS
  // ===================================

  $(document)
    .on('click.bs.dropdown.data-api', clearMenus)
    .on('click.bs.dropdown.data-api', '.dropdown form', function (e) { e.stopPropagation() })
    .on('click.bs.dropdown.data-api', toggle, Dropdown.prototype.toggle)
    .on('keydown.bs.dropdown.data-api', toggle, Dropdown.prototype.keydown)
    .on('keydown.bs.dropdown.data-api', '[role="menu"]', Dropdown.prototype.keydown)
    .on('keydown.bs.dropdown.data-api', '[role="listbox"]', Dropdown.prototype.keydown)

}(jQuery);

/* ========================================================================
 * Bootstrap: modal.js v3.3.0
 * http://getbootstrap.com/javascript/#modals
 * ========================================================================
 * Copyright 2011-2014 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * ======================================================================== */


+function ($) {
  'use strict';

  // MODAL CLASS DEFINITION
  // ======================

  var Modal = function (element, options) {
    this.options        = options
    this.$body          = $(document.body)
    this.$element       = $(element)
    this.$backdrop      =
    this.isShown        = null
    this.scrollbarWidth = 0

    if (this.options.remote) {
      this.$element
        .find('.modal-content')
        .load(this.options.remote, $.proxy(function () {
          this.$element.trigger('loaded.bs.modal')
        }, this))
    }
  }

  Modal.VERSION  = '3.3.0'

  Modal.TRANSITION_DURATION = 300
  Modal.BACKDROP_TRANSITION_DURATION = 150

  Modal.DEFAULTS = {
    backdrop: true,
    keyboard: true,
    show: true
  }

  Modal.prototype.toggle = function (_relatedTarget) {
    return this.isShown ? this.hide() : this.show(_relatedTarget)
  }

  Modal.prototype.show = function (_relatedTarget) {
    var that = this
    var e    = $.Event('show.bs.modal', { relatedTarget: _relatedTarget })

    this.$element.trigger(e)

    if (this.isShown || e.isDefaultPrevented()) return

    this.isShown = true

    this.checkScrollbar()
    this.$body.addClass('modal-open')

    this.setScrollbar()
    this.escape()

    this.$element.on('click.dismiss.bs.modal', '[data-dismiss="modal"]', $.proxy(this.hide, this))

    this.backdrop(function () {
      var transition = $.support.transition && that.$element.hasClass('fade')

      if (!that.$element.parent().length) {
        that.$element.appendTo(that.$body) // don't move modals dom position
      }

      that.$element
        .show()
        .scrollTop(0)

      if (transition) {
        that.$element[0].offsetWidth // force reflow
      }

      that.$element
        .addClass('in')
        .attr('aria-hidden', false)

      that.enforceFocus()

      var e = $.Event('shown.bs.modal', { relatedTarget: _relatedTarget })

      transition ?
        that.$element.find('.modal-dialog') // wait for modal to slide in
          .one('bsTransitionEnd', function () {
            that.$element.trigger('focus').trigger(e)
          })
          .emulateTransitionEnd(Modal.TRANSITION_DURATION) :
        that.$element.trigger('focus').trigger(e)
    })
  }

  Modal.prototype.hide = function (e) {
    if (e) e.preventDefault()

    e = $.Event('hide.bs.modal')

    this.$element.trigger(e)

    if (!this.isShown || e.isDefaultPrevented()) return

    this.isShown = false

    this.escape()

    $(document).off('focusin.bs.modal')

    this.$element
      .removeClass('in')
      .attr('aria-hidden', true)
      .off('click.dismiss.bs.modal')

    $.support.transition && this.$element.hasClass('fade') ?
      this.$element
        .one('bsTransitionEnd', $.proxy(this.hideModal, this))
        .emulateTransitionEnd(Modal.TRANSITION_DURATION) :
      this.hideModal()
  }

  Modal.prototype.enforceFocus = function () {
    $(document)
      .off('focusin.bs.modal') // guard against infinite focus loop
      .on('focusin.bs.modal', $.proxy(function (e) {
        if (this.$element[0] !== e.target && !this.$element.has(e.target).length) {
          this.$element.trigger('focus')
        }
      }, this))
  }

  Modal.prototype.escape = function () {
    if (this.isShown && this.options.keyboard) {
      this.$element.on('keydown.dismiss.bs.modal', $.proxy(function (e) {
        e.which == 27 && this.hide()
      }, this))
    } else if (!this.isShown) {
      this.$element.off('keydown.dismiss.bs.modal')
    }
  }

  Modal.prototype.hideModal = function () {
    var that = this
    this.$element.hide()
    this.backdrop(function () {
      that.$body.removeClass('modal-open')
      that.resetScrollbar()
      that.$element.trigger('hidden.bs.modal')
    })
  }

  Modal.prototype.removeBackdrop = function () {
    this.$backdrop && this.$backdrop.remove()
    this.$backdrop = null
  }

  Modal.prototype.backdrop = function (callback) {
    var that = this
    var animate = this.$element.hasClass('fade') ? 'fade' : ''

    if (this.isShown && this.options.backdrop) {
      var doAnimate = $.support.transition && animate

      this.$backdrop = $('<div class="modal-backdrop ' + animate + '" />')
        .prependTo(this.$element)
        .on('click.dismiss.bs.modal', $.proxy(function (e) {
          if (e.target !== e.currentTarget) return
          this.options.backdrop == 'static'
            ? this.$element[0].focus.call(this.$element[0])
            : this.hide.call(this)
        }, this))

      if (doAnimate) this.$backdrop[0].offsetWidth // force reflow

      this.$backdrop.addClass('in')

      if (!callback) return

      doAnimate ?
        this.$backdrop
          .one('bsTransitionEnd', callback)
          .emulateTransitionEnd(Modal.BACKDROP_TRANSITION_DURATION) :
        callback()

    } else if (!this.isShown && this.$backdrop) {
      this.$backdrop.removeClass('in')

      var callbackRemove = function () {
        that.removeBackdrop()
        callback && callback()
      }
      $.support.transition && this.$element.hasClass('fade') ?
        this.$backdrop
          .one('bsTransitionEnd', callbackRemove)
          .emulateTransitionEnd(Modal.BACKDROP_TRANSITION_DURATION) :
        callbackRemove()

    } else if (callback) {
      callback()
    }
  }

  Modal.prototype.checkScrollbar = function () {
    this.scrollbarWidth = this.measureScrollbar()
  }

  Modal.prototype.setScrollbar = function () {
    var bodyPad = parseInt((this.$body.css('padding-right') || 0), 10)
    if (this.scrollbarWidth) this.$body.css('padding-right', bodyPad + this.scrollbarWidth)
  }

  Modal.prototype.resetScrollbar = function () {
    this.$body.css('padding-right', '')
  }

  Modal.prototype.measureScrollbar = function () { // thx walsh
    if (document.body.clientWidth >= window.innerWidth) return 0
    var scrollDiv = document.createElement('div')
    scrollDiv.className = 'modal-scrollbar-measure'
    this.$body.append(scrollDiv)
    var scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth
    this.$body[0].removeChild(scrollDiv)
    return scrollbarWidth
  }


  // MODAL PLUGIN DEFINITION
  // =======================

  function Plugin(option, _relatedTarget) {
    return this.each(function () {
      var $this   = $(this)
      var data    = $this.data('bs.modal')
      var options = $.extend({}, Modal.DEFAULTS, $this.data(), typeof option == 'object' && option)

      if (!data) $this.data('bs.modal', (data = new Modal(this, options)))
      if (typeof option == 'string') data[option](_relatedTarget)
      else if (options.show) data.show(_relatedTarget)
    })
  }

  var old = $.fn.modal

  $.fn.modal             = Plugin
  $.fn.modal.Constructor = Modal


  // MODAL NO CONFLICT
  // =================

  $.fn.modal.noConflict = function () {
    $.fn.modal = old
    return this
  }


  // MODAL DATA-API
  // ==============

  $(document).on('click.bs.modal.data-api', '[data-toggle="modal"]', function (e) {
    var $this   = $(this)
    var href    = $this.attr('href')
    var $target = $($this.attr('data-target') || (href && href.replace(/.*(?=#[^\s]+$)/, ''))) // strip for ie7
    var option  = $target.data('bs.modal') ? 'toggle' : $.extend({ remote: !/#/.test(href) && href }, $target.data(), $this.data())

    if ($this.is('a')) e.preventDefault()

    $target.one('show.bs.modal', function (showEvent) {
      if (showEvent.isDefaultPrevented()) return // only register focus restorer if modal will actually get shown
      $target.one('hidden.bs.modal', function () {
        $this.is(':visible') && $this.trigger('focus')
      })
    })
    Plugin.call($target, option, this)
  })

}(jQuery);

/* ========================================================================
 * Bootstrap: tooltip.js v3.3.0
 * http://getbootstrap.com/javascript/#tooltip
 * Inspired by the original jQuery.tipsy by Jason Frame
 * ========================================================================
 * Copyright 2011-2014 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * ======================================================================== */


+function ($) {
  'use strict';

  // TOOLTIP PUBLIC CLASS DEFINITION
  // ===============================

  var Tooltip = function (element, options) {
    this.type       =
    this.options    =
    this.enabled    =
    this.timeout    =
    this.hoverState =
    this.$element   = null

    this.init('tooltip', element, options)
  }

  Tooltip.VERSION  = '3.3.0'

  Tooltip.TRANSITION_DURATION = 150

  Tooltip.DEFAULTS = {
    animation: true,
    placement: 'top',
    selector: false,
    template: '<div class="tooltip" role="tooltip"><div class="tooltip-arrow"></div><div class="tooltip-inner"></div></div>',
    trigger: 'hover focus',
    title: '',
    delay: 0,
    html: false,
    container: false,
    viewport: {
      selector: 'body',
      padding: 0
    }
  }

  Tooltip.prototype.init = function (type, element, options) {
    this.enabled   = true
    this.type      = type
    this.$element  = $(element)
    this.options   = this.getOptions(options)
    this.$viewport = this.options.viewport && $(this.options.viewport.selector || this.options.viewport)

    var triggers = this.options.trigger.split(' ')

    for (var i = triggers.length; i--;) {
      var trigger = triggers[i]

      if (trigger == 'click') {
        this.$element.on('click.' + this.type, this.options.selector, $.proxy(this.toggle, this))
      } else if (trigger != 'manual') {
        var eventIn  = trigger == 'hover' ? 'mouseenter' : 'focusin'
        var eventOut = trigger == 'hover' ? 'mouseleave' : 'focusout'

        this.$element.on(eventIn  + '.' + this.type, this.options.selector, $.proxy(this.enter, this))
        this.$element.on(eventOut + '.' + this.type, this.options.selector, $.proxy(this.leave, this))
      }
    }

    this.options.selector ?
      (this._options = $.extend({}, this.options, { trigger: 'manual', selector: '' })) :
      this.fixTitle()
  }

  Tooltip.prototype.getDefaults = function () {
    return Tooltip.DEFAULTS
  }

  Tooltip.prototype.getOptions = function (options) {
    options = $.extend({}, this.getDefaults(), this.$element.data(), options)

    if (options.delay && typeof options.delay == 'number') {
      options.delay = {
        show: options.delay,
        hide: options.delay
      }
    }

    return options
  }

  Tooltip.prototype.getDelegateOptions = function () {
    var options  = {}
    var defaults = this.getDefaults()

    this._options && $.each(this._options, function (key, value) {
      if (defaults[key] != value) options[key] = value
    })

    return options
  }

  Tooltip.prototype.enter = function (obj) {
    var self = obj instanceof this.constructor ?
      obj : $(obj.currentTarget).data('bs.' + this.type)

    if (self && self.$tip && self.$tip.is(':visible')) {
      self.hoverState = 'in'
      return
    }

    if (!self) {
      self = new this.constructor(obj.currentTarget, this.getDelegateOptions())
      $(obj.currentTarget).data('bs.' + this.type, self)
    }

    clearTimeout(self.timeout)

    self.hoverState = 'in'

    if (!self.options.delay || !self.options.delay.show) return self.show()

    self.timeout = setTimeout(function () {
      if (self.hoverState == 'in') self.show()
    }, self.options.delay.show)
  }

  Tooltip.prototype.leave = function (obj) {
    var self = obj instanceof this.constructor ?
      obj : $(obj.currentTarget).data('bs.' + this.type)

    if (!self) {
      self = new this.constructor(obj.currentTarget, this.getDelegateOptions())
      $(obj.currentTarget).data('bs.' + this.type, self)
    }

    clearTimeout(self.timeout)

    self.hoverState = 'out'

    if (!self.options.delay || !self.options.delay.hide) return self.hide()

    self.timeout = setTimeout(function () {
      if (self.hoverState == 'out') self.hide()
    }, self.options.delay.hide)
  }

  Tooltip.prototype.show = function () {
    var e = $.Event('show.bs.' + this.type)

    if (this.hasContent() && this.enabled) {
      this.$element.trigger(e)

      var inDom = $.contains(this.$element[0].ownerDocument.documentElement, this.$element[0])
      if (e.isDefaultPrevented() || !inDom) return
      var that = this

      var $tip = this.tip()

      var tipId = this.getUID(this.type)

      this.setContent()
      $tip.attr('id', tipId)
      this.$element.attr('aria-describedby', tipId)

      if (this.options.animation) $tip.addClass('fade')

      var placement = typeof this.options.placement == 'function' ?
        this.options.placement.call(this, $tip[0], this.$element[0]) :
        this.options.placement

      var autoToken = /\s?auto?\s?/i
      var autoPlace = autoToken.test(placement)
      if (autoPlace) placement = placement.replace(autoToken, '') || 'top'

      $tip
        .detach()
        .css({ top: 0, left: 0, display: 'block' })
        .addClass(placement)
        .data('bs.' + this.type, this)

      this.options.container ? $tip.appendTo(this.options.container) : $tip.insertAfter(this.$element)

      var pos          = this.getPosition()
      var actualWidth  = $tip[0].offsetWidth
      var actualHeight = $tip[0].offsetHeight

      if (autoPlace) {
        var orgPlacement = placement
        var $container   = this.options.container ? $(this.options.container) : this.$element.parent()
        var containerDim = this.getPosition($container)

        placement = placement == 'bottom' && pos.bottom + actualHeight > containerDim.bottom ? 'top'    :
                    placement == 'top'    && pos.top    - actualHeight < containerDim.top    ? 'bottom' :
                    placement == 'right'  && pos.right  + actualWidth  > containerDim.width  ? 'left'   :
                    placement == 'left'   && pos.left   - actualWidth  < containerDim.left   ? 'right'  :
                    placement

        $tip
          .removeClass(orgPlacement)
          .addClass(placement)
      }

      var calculatedOffset = this.getCalculatedOffset(placement, pos, actualWidth, actualHeight)

      this.applyPlacement(calculatedOffset, placement)

      var complete = function () {
        var prevHoverState = that.hoverState
        that.$element.trigger('shown.bs.' + that.type)
        that.hoverState = null

        if (prevHoverState == 'out') that.leave(that)
      }

      $.support.transition && this.$tip.hasClass('fade') ?
        $tip
          .one('bsTransitionEnd', complete)
          .emulateTransitionEnd(Tooltip.TRANSITION_DURATION) :
        complete()
    }
  }

  Tooltip.prototype.applyPlacement = function (offset, placement) {
    var $tip   = this.tip()
    var width  = $tip[0].offsetWidth
    var height = $tip[0].offsetHeight

    // manually read margins because getBoundingClientRect includes difference
    var marginTop = parseInt($tip.css('margin-top'), 10)
    var marginLeft = parseInt($tip.css('margin-left'), 10)

    // we must check for NaN for ie 8/9
    if (isNaN(marginTop))  marginTop  = 0
    if (isNaN(marginLeft)) marginLeft = 0

    offset.top  = offset.top  + marginTop
    offset.left = offset.left + marginLeft

    // $.fn.offset doesn't round pixel values
    // so we use setOffset directly with our own function B-0
    $.offset.setOffset($tip[0], $.extend({
      using: function (props) {
        $tip.css({
          top: Math.round(props.top),
          left: Math.round(props.left)
        })
      }
    }, offset), 0)

    $tip.addClass('in')

    // check to see if placing tip in new offset caused the tip to resize itself
    var actualWidth  = $tip[0].offsetWidth
    var actualHeight = $tip[0].offsetHeight

    if (placement == 'top' && actualHeight != height) {
      offset.top = offset.top + height - actualHeight
    }

    var delta = this.getViewportAdjustedDelta(placement, offset, actualWidth, actualHeight)

    if (delta.left) offset.left += delta.left
    else offset.top += delta.top

    var isVertical          = /top|bottom/.test(placement)
    var arrowDelta          = isVertical ? delta.left * 2 - width + actualWidth : delta.top * 2 - height + actualHeight
    var arrowOffsetPosition = isVertical ? 'offsetWidth' : 'offsetHeight'

    $tip.offset(offset)
    this.replaceArrow(arrowDelta, $tip[0][arrowOffsetPosition], isVertical)
  }

  Tooltip.prototype.replaceArrow = function (delta, dimension, isHorizontal) {
    this.arrow()
      .css(isHorizontal ? 'left' : 'top', 50 * (1 - delta / dimension) + '%')
      .css(isHorizontal ? 'top' : 'left', '')
  }

  Tooltip.prototype.setContent = function () {
    var $tip  = this.tip()
    var title = this.getTitle()

    $tip.find('.tooltip-inner')[this.options.html ? 'html' : 'text'](title)
    $tip.removeClass('fade in top bottom left right')
  }

  Tooltip.prototype.hide = function (callback) {
    var that = this
    var $tip = this.tip()
    var e    = $.Event('hide.bs.' + this.type)

    function complete() {
      if (that.hoverState != 'in') $tip.detach()
      that.$element
        .removeAttr('aria-describedby')
        .trigger('hidden.bs.' + that.type)
      callback && callback()
    }

    this.$element.trigger(e)

    if (e.isDefaultPrevented()) return

    $tip.removeClass('in')

    $.support.transition && this.$tip.hasClass('fade') ?
      $tip
        .one('bsTransitionEnd', complete)
        .emulateTransitionEnd(Tooltip.TRANSITION_DURATION) :
      complete()

    this.hoverState = null

    return this
  }

  Tooltip.prototype.fixTitle = function () {
    var $e = this.$element
    if ($e.attr('title') || typeof ($e.attr('data-original-title')) != 'string') {
      $e.attr('data-original-title', $e.attr('title') || '').attr('title', '')
    }
  }

  Tooltip.prototype.hasContent = function () {
    return this.getTitle()
  }

  Tooltip.prototype.getPosition = function ($element) {
    $element   = $element || this.$element

    var el     = $element[0]
    var isBody = el.tagName == 'BODY'

    var elRect    = el.getBoundingClientRect()
    if (elRect.width == null) {
      // width and height are missing in IE8, so compute them manually; see https://github.com/twbs/bootstrap/issues/14093
      elRect = $.extend({}, elRect, { width: elRect.right - elRect.left, height: elRect.bottom - elRect.top })
    }
    var elOffset  = isBody ? { top: 0, left: 0 } : $element.offset()
    var scroll    = { scroll: isBody ? document.documentElement.scrollTop || document.body.scrollTop : $element.scrollTop() }
    var outerDims = isBody ? { width: $(window).width(), height: $(window).height() } : null

    return $.extend({}, elRect, scroll, outerDims, elOffset)
  }

  Tooltip.prototype.getCalculatedOffset = function (placement, pos, actualWidth, actualHeight) {
    return placement == 'bottom' ? { top: pos.top + pos.height,   left: pos.left + pos.width / 2 - actualWidth / 2  } :
           placement == 'top'    ? { top: pos.top - actualHeight, left: pos.left + pos.width / 2 - actualWidth / 2  } :
           placement == 'left'   ? { top: pos.top + pos.height / 2 - actualHeight / 2, left: pos.left - actualWidth } :
        /* placement == 'right' */ { top: pos.top + pos.height / 2 - actualHeight / 2, left: pos.left + pos.width   }

  }

  Tooltip.prototype.getViewportAdjustedDelta = function (placement, pos, actualWidth, actualHeight) {
    var delta = { top: 0, left: 0 }
    if (!this.$viewport) return delta

    var viewportPadding = this.options.viewport && this.options.viewport.padding || 0
    var viewportDimensions = this.getPosition(this.$viewport)

    if (/right|left/.test(placement)) {
      var topEdgeOffset    = pos.top - viewportPadding - viewportDimensions.scroll
      var bottomEdgeOffset = pos.top + viewportPadding - viewportDimensions.scroll + actualHeight
      if (topEdgeOffset < viewportDimensions.top) { // top overflow
        delta.top = viewportDimensions.top - topEdgeOffset
      } else if (bottomEdgeOffset > viewportDimensions.top + viewportDimensions.height) { // bottom overflow
        delta.top = viewportDimensions.top + viewportDimensions.height - bottomEdgeOffset
      }
    } else {
      var leftEdgeOffset  = pos.left - viewportPadding
      var rightEdgeOffset = pos.left + viewportPadding + actualWidth
      if (leftEdgeOffset < viewportDimensions.left) { // left overflow
        delta.left = viewportDimensions.left - leftEdgeOffset
      } else if (rightEdgeOffset > viewportDimensions.width) { // right overflow
        delta.left = viewportDimensions.left + viewportDimensions.width - rightEdgeOffset
      }
    }

    return delta
  }

  Tooltip.prototype.getTitle = function () {
    var title
    var $e = this.$element
    var o  = this.options

    title = $e.attr('data-original-title')
      || (typeof o.title == 'function' ? o.title.call($e[0]) :  o.title)

    return title
  }

  Tooltip.prototype.getUID = function (prefix) {
    do prefix += ~~(Math.random() * 1000000)
    while (document.getElementById(prefix))
    return prefix
  }

  Tooltip.prototype.tip = function () {
    return (this.$tip = this.$tip || $(this.options.template))
  }

  Tooltip.prototype.arrow = function () {
    return (this.$arrow = this.$arrow || this.tip().find('.tooltip-arrow'))
  }

  Tooltip.prototype.enable = function () {
    this.enabled = true
  }

  Tooltip.prototype.disable = function () {
    this.enabled = false
  }

  Tooltip.prototype.toggleEnabled = function () {
    this.enabled = !this.enabled
  }

  Tooltip.prototype.toggle = function (e) {
    var self = this
    if (e) {
      self = $(e.currentTarget).data('bs.' + this.type)
      if (!self) {
        self = new this.constructor(e.currentTarget, this.getDelegateOptions())
        $(e.currentTarget).data('bs.' + this.type, self)
      }
    }

    self.tip().hasClass('in') ? self.leave(self) : self.enter(self)
  }

  Tooltip.prototype.destroy = function () {
    var that = this
    clearTimeout(this.timeout)
    this.hide(function () {
      that.$element.off('.' + that.type).removeData('bs.' + that.type)
    })
  }


  // TOOLTIP PLUGIN DEFINITION
  // =========================

  function Plugin(option) {
    return this.each(function () {
      var $this    = $(this)
      var data     = $this.data('bs.tooltip')
      var options  = typeof option == 'object' && option
      var selector = options && options.selector

      if (!data && option == 'destroy') return
      if (selector) {
        if (!data) $this.data('bs.tooltip', (data = {}))
        if (!data[selector]) data[selector] = new Tooltip(this, options)
      } else {
        if (!data) $this.data('bs.tooltip', (data = new Tooltip(this, options)))
      }
      if (typeof option == 'string') data[option]()
    })
  }

  var old = $.fn.tooltip

  $.fn.tooltip             = Plugin
  $.fn.tooltip.Constructor = Tooltip


  // TOOLTIP NO CONFLICT
  // ===================

  $.fn.tooltip.noConflict = function () {
    $.fn.tooltip = old
    return this
  }

}(jQuery);

/* ========================================================================
 * Bootstrap: popover.js v3.3.0
 * http://getbootstrap.com/javascript/#popovers
 * ========================================================================
 * Copyright 2011-2014 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * ======================================================================== */


+function ($) {
  'use strict';

  // POPOVER PUBLIC CLASS DEFINITION
  // ===============================

  var Popover = function (element, options) {
    this.init('popover', element, options)
  }

  if (!$.fn.tooltip) throw new Error('Popover requires tooltip.js')

  Popover.VERSION  = '3.3.0'

  Popover.DEFAULTS = $.extend({}, $.fn.tooltip.Constructor.DEFAULTS, {
    placement: 'right',
    trigger: 'click',
    content: '',
    template: '<div class="popover" role="tooltip"><div class="arrow"></div><h3 class="popover-title"></h3><div class="popover-content"></div></div>'
  })


  // NOTE: POPOVER EXTENDS tooltip.js
  // ================================

  Popover.prototype = $.extend({}, $.fn.tooltip.Constructor.prototype)

  Popover.prototype.constructor = Popover

  Popover.prototype.getDefaults = function () {
    return Popover.DEFAULTS
  }

  Popover.prototype.setContent = function () {
    var $tip    = this.tip()
    var title   = this.getTitle()
    var content = this.getContent()

    $tip.find('.popover-title')[this.options.html ? 'html' : 'text'](title)
    $tip.find('.popover-content').children().detach().end()[ // we use append for html objects to maintain js events
      this.options.html ? (typeof content == 'string' ? 'html' : 'append') : 'text'
    ](content)

    $tip.removeClass('fade top bottom left right in')

    // IE8 doesn't accept hiding via the `:empty` pseudo selector, we have to do
    // this manually by checking the contents.
    if (!$tip.find('.popover-title').html()) $tip.find('.popover-title').hide()
  }

  Popover.prototype.hasContent = function () {
    return this.getTitle() || this.getContent()
  }

  Popover.prototype.getContent = function () {
    var $e = this.$element
    var o  = this.options

    return $e.attr('data-content')
      || (typeof o.content == 'function' ?
            o.content.call($e[0]) :
            o.content)
  }

  Popover.prototype.arrow = function () {
    return (this.$arrow = this.$arrow || this.tip().find('.arrow'))
  }

  Popover.prototype.tip = function () {
    if (!this.$tip) this.$tip = $(this.options.template)
    return this.$tip
  }


  // POPOVER PLUGIN DEFINITION
  // =========================

  function Plugin(option) {
    return this.each(function () {
      var $this    = $(this)
      var data     = $this.data('bs.popover')
      var options  = typeof option == 'object' && option
      var selector = options && options.selector

      if (!data && option == 'destroy') return
      if (selector) {
        if (!data) $this.data('bs.popover', (data = {}))
        if (!data[selector]) data[selector] = new Popover(this, options)
      } else {
        if (!data) $this.data('bs.popover', (data = new Popover(this, options)))
      }
      if (typeof option == 'string') data[option]()
    })
  }

  var old = $.fn.popover

  $.fn.popover             = Plugin
  $.fn.popover.Constructor = Popover


  // POPOVER NO CONFLICT
  // ===================

  $.fn.popover.noConflict = function () {
    $.fn.popover = old
    return this
  }

}(jQuery);

/* ========================================================================
 * Bootstrap: scrollspy.js v3.3.0
 * http://getbootstrap.com/javascript/#scrollspy
 * ========================================================================
 * Copyright 2011-2014 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * ======================================================================== */


+function ($) {
  'use strict';

  // SCROLLSPY CLASS DEFINITION
  // ==========================

  function ScrollSpy(element, options) {
    var process  = $.proxy(this.process, this)

    this.$body          = $('body')
    this.$scrollElement = $(element).is('body') ? $(window) : $(element)
    this.options        = $.extend({}, ScrollSpy.DEFAULTS, options)
    this.selector       = (this.options.target || '') + ' .nav li > a'
    this.offsets        = []
    this.targets        = []
    this.activeTarget   = null
    this.scrollHeight   = 0

    this.$scrollElement.on('scroll.bs.scrollspy', process)
    this.refresh()
    this.process()
  }

  ScrollSpy.VERSION  = '3.3.0'

  ScrollSpy.DEFAULTS = {
    offset: 10
  }

  ScrollSpy.prototype.getScrollHeight = function () {
    return this.$scrollElement[0].scrollHeight || Math.max(this.$body[0].scrollHeight, document.documentElement.scrollHeight)
  }

  ScrollSpy.prototype.refresh = function () {
    var offsetMethod = 'offset'
    var offsetBase   = 0

    if (!$.isWindow(this.$scrollElement[0])) {
      offsetMethod = 'position'
      offsetBase   = this.$scrollElement.scrollTop()
    }

    this.offsets = []
    this.targets = []
    this.scrollHeight = this.getScrollHeight()

    var self     = this

    this.$body
      .find(this.selector)
      .map(function () {
        var $el   = $(this)
        var href  = $el.data('target') || $el.attr('href')
        var $href = /^#./.test(href) && $(href)

        return ($href
          && $href.length
          && $href.is(':visible')
          && [[$href[offsetMethod]().top + offsetBase, href]]) || null
      })
      .sort(function (a, b) { return a[0] - b[0] })
      .each(function () {
        self.offsets.push(this[0])
        self.targets.push(this[1])
      })
  }

  ScrollSpy.prototype.process = function () {
    var scrollTop    = this.$scrollElement.scrollTop() + this.options.offset
    var scrollHeight = this.getScrollHeight()
    var maxScroll    = this.options.offset + scrollHeight - this.$scrollElement.height()
    var offsets      = this.offsets
    var targets      = this.targets
    var activeTarget = this.activeTarget
    var i

    if (this.scrollHeight != scrollHeight) {
      this.refresh()
    }

    if (scrollTop >= maxScroll) {
      return activeTarget != (i = targets[targets.length - 1]) && this.activate(i)
    }

    if (activeTarget && scrollTop < offsets[0]) {
      this.activeTarget = null
      return this.clear()
    }

    for (i = offsets.length; i--;) {
      activeTarget != targets[i]
        && scrollTop >= offsets[i]
        && (!offsets[i + 1] || scrollTop <= offsets[i + 1])
        && this.activate(targets[i])
    }
  }

  ScrollSpy.prototype.activate = function (target) {
    this.activeTarget = target

    this.clear()

    var selector = this.selector +
        '[data-target="' + target + '"],' +
        this.selector + '[href="' + target + '"]'

    var active = $(selector)
      .parents('li')
      .addClass('active')

    if (active.parent('.dropdown-menu').length) {
      active = active
        .closest('li.dropdown')
        .addClass('active')
    }

    active.trigger('activate.bs.scrollspy')
  }

  ScrollSpy.prototype.clear = function () {
    $(this.selector)
      .parentsUntil(this.options.target, '.active')
      .removeClass('active')
  }


  // SCROLLSPY PLUGIN DEFINITION
  // ===========================

  function Plugin(option) {
    return this.each(function () {
      var $this   = $(this)
      var data    = $this.data('bs.scrollspy')
      var options = typeof option == 'object' && option

      if (!data) $this.data('bs.scrollspy', (data = new ScrollSpy(this, options)))
      if (typeof option == 'string') data[option]()
    })
  }

  var old = $.fn.scrollspy

  $.fn.scrollspy             = Plugin
  $.fn.scrollspy.Constructor = ScrollSpy


  // SCROLLSPY NO CONFLICT
  // =====================

  $.fn.scrollspy.noConflict = function () {
    $.fn.scrollspy = old
    return this
  }


  // SCROLLSPY DATA-API
  // ==================

  $(window).on('load.bs.scrollspy.data-api', function () {
    $('[data-spy="scroll"]').each(function () {
      var $spy = $(this)
      Plugin.call($spy, $spy.data())
    })
  })

}(jQuery);

/* ========================================================================
 * Bootstrap: tab.js v3.3.0
 * http://getbootstrap.com/javascript/#tabs
 * ========================================================================
 * Copyright 2011-2014 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * ======================================================================== */


+function ($) {
  'use strict';

  // TAB CLASS DEFINITION
  // ====================

  var Tab = function (element) {
    this.element = $(element)
  }

  Tab.VERSION = '3.3.0'

  Tab.TRANSITION_DURATION = 150

  Tab.prototype.show = function () {
    var $this    = this.element
    var $ul      = $this.closest('ul:not(.dropdown-menu)')
    var selector = $this.data('target')

    if (!selector) {
      selector = $this.attr('href')
      selector = selector && selector.replace(/.*(?=#[^\s]*$)/, '') // strip for ie7
    }

    if ($this.parent('li').hasClass('active')) return

    var $previous = $ul.find('.active:last a')
    var hideEvent = $.Event('hide.bs.tab', {
      relatedTarget: $this[0]
    })
    var showEvent = $.Event('show.bs.tab', {
      relatedTarget: $previous[0]
    })

    $previous.trigger(hideEvent)
    $this.trigger(showEvent)

    if (showEvent.isDefaultPrevented() || hideEvent.isDefaultPrevented()) return

    var $target = $(selector)

    this.activate($this.closest('li'), $ul)
    this.activate($target, $target.parent(), function () {
      $previous.trigger({
        type: 'hidden.bs.tab',
        relatedTarget: $this[0]
      })
      $this.trigger({
        type: 'shown.bs.tab',
        relatedTarget: $previous[0]
      })
    })
  }

  Tab.prototype.activate = function (element, container, callback) {
    var $active    = container.find('> .active')
    var transition = callback
      && $.support.transition
      && (($active.length && $active.hasClass('fade')) || !!container.find('> .fade').length)

    function next() {
      $active
        .removeClass('active')
        .find('> .dropdown-menu > .active')
          .removeClass('active')
        .end()
        .find('[data-toggle="tab"]')
          .attr('aria-expanded', false)

      element
        .addClass('active')
        .find('[data-toggle="tab"]')
          .attr('aria-expanded', true)

      if (transition) {
        element[0].offsetWidth // reflow for transition
        element.addClass('in')
      } else {
        element.removeClass('fade')
      }

      if (element.parent('.dropdown-menu')) {
        element
          .closest('li.dropdown')
            .addClass('active')
          .end()
          .find('[data-toggle="tab"]')
            .attr('aria-expanded', true)
      }

      callback && callback()
    }

    $active.length && transition ?
      $active
        .one('bsTransitionEnd', next)
        .emulateTransitionEnd(Tab.TRANSITION_DURATION) :
      next()

    $active.removeClass('in')
  }


  // TAB PLUGIN DEFINITION
  // =====================

  function Plugin(option) {
    return this.each(function () {
      var $this = $(this)
      var data  = $this.data('bs.tab')

      if (!data) $this.data('bs.tab', (data = new Tab(this)))
      if (typeof option == 'string') data[option]()
    })
  }

  var old = $.fn.tab

  $.fn.tab             = Plugin
  $.fn.tab.Constructor = Tab


  // TAB NO CONFLICT
  // ===============

  $.fn.tab.noConflict = function () {
    $.fn.tab = old
    return this
  }


  // TAB DATA-API
  // ============

  var clickHandler = function (e) {
    e.preventDefault()
    Plugin.call($(this), 'show')
  }

  $(document)
    .on('click.bs.tab.data-api', '[data-toggle="tab"]', clickHandler)
    .on('click.bs.tab.data-api', '[data-toggle="pill"]', clickHandler)

}(jQuery);

/* ========================================================================
 * Bootstrap: affix.js v3.3.0
 * http://getbootstrap.com/javascript/#affix
 * ========================================================================
 * Copyright 2011-2014 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * ======================================================================== */


+function ($) {
  'use strict';

  // AFFIX CLASS DEFINITION
  // ======================

  var Affix = function (element, options) {
    this.options = $.extend({}, Affix.DEFAULTS, options)

    this.$target = $(this.options.target)
      .on('scroll.bs.affix.data-api', $.proxy(this.checkPosition, this))
      .on('click.bs.affix.data-api',  $.proxy(this.checkPositionWithEventLoop, this))

    this.$element     = $(element)
    this.affixed      =
    this.unpin        =
    this.pinnedOffset = null

    this.checkPosition()
  }

  Affix.VERSION  = '3.3.0'

  Affix.RESET    = 'affix affix-top affix-bottom'

  Affix.DEFAULTS = {
    offset: 0,
    target: window
  }

  Affix.prototype.getState = function (scrollHeight, height, offsetTop, offsetBottom) {
    var scrollTop    = this.$target.scrollTop()
    var position     = this.$element.offset()
    var targetHeight = this.$target.height()

    if (offsetTop != null && this.affixed == 'top') return scrollTop < offsetTop ? 'top' : false

    if (this.affixed == 'bottom') {
      if (offsetTop != null) return (scrollTop + this.unpin <= position.top) ? false : 'bottom'
      return (scrollTop + targetHeight <= scrollHeight - offsetBottom) ? false : 'bottom'
    }

    var initializing   = this.affixed == null
    var colliderTop    = initializing ? scrollTop : position.top
    var colliderHeight = initializing ? targetHeight : height

    if (offsetTop != null && colliderTop <= offsetTop) return 'top'
    if (offsetBottom != null && (colliderTop + colliderHeight >= scrollHeight - offsetBottom)) return 'bottom'

    return false
  }

  Affix.prototype.getPinnedOffset = function () {
    if (this.pinnedOffset) return this.pinnedOffset
    this.$element.removeClass(Affix.RESET).addClass('affix')
    var scrollTop = this.$target.scrollTop()
    var position  = this.$element.offset()
    return (this.pinnedOffset = position.top - scrollTop)
  }

  Affix.prototype.checkPositionWithEventLoop = function () {
    setTimeout($.proxy(this.checkPosition, this), 1)
  }

  Affix.prototype.checkPosition = function () {
    if (!this.$element.is(':visible')) return

    var height       = this.$element.height()
    var offset       = this.options.offset
    var offsetTop    = offset.top
    var offsetBottom = offset.bottom
    var scrollHeight = $('body').height()

    if (typeof offset != 'object')         offsetBottom = offsetTop = offset
    if (typeof offsetTop == 'function')    offsetTop    = offset.top(this.$element)
    if (typeof offsetBottom == 'function') offsetBottom = offset.bottom(this.$element)

    var affix = this.getState(scrollHeight, height, offsetTop, offsetBottom)

    if (this.affixed != affix) {
      if (this.unpin != null) this.$element.css('top', '')

      var affixType = 'affix' + (affix ? '-' + affix : '')
      var e         = $.Event(affixType + '.bs.affix')

      this.$element.trigger(e)

      if (e.isDefaultPrevented()) return

      this.affixed = affix
      this.unpin = affix == 'bottom' ? this.getPinnedOffset() : null

      this.$element
        .removeClass(Affix.RESET)
        .addClass(affixType)
        .trigger(affixType.replace('affix', 'affixed') + '.bs.affix')
    }

    if (affix == 'bottom') {
      this.$element.offset({
        top: scrollHeight - height - offsetBottom
      })
    }
  }


  // AFFIX PLUGIN DEFINITION
  // =======================

  function Plugin(option) {
    return this.each(function () {
      var $this   = $(this)
      var data    = $this.data('bs.affix')
      var options = typeof option == 'object' && option

      if (!data) $this.data('bs.affix', (data = new Affix(this, options)))
      if (typeof option == 'string') data[option]()
    })
  }

  var old = $.fn.affix

  $.fn.affix             = Plugin
  $.fn.affix.Constructor = Affix


  // AFFIX NO CONFLICT
  // =================

  $.fn.affix.noConflict = function () {
    $.fn.affix = old
    return this
  }


  // AFFIX DATA-API
  // ==============

  $(window).on('load', function () {
    $('[data-spy="affix"]').each(function () {
      var $spy = $(this)
      var data = $spy.data()

      data.offset = data.offset || {}

      if (data.offsetBottom != null) data.offset.bottom = data.offsetBottom
      if (data.offsetTop    != null) data.offset.top    = data.offsetTop

      Plugin.call($spy, data)
    })
  })

}(jQuery);
;
/*
 AngularJS v1.5.0
 (c) 2010-2016 Google, Inc. http://angularjs.org
 License: MIT
*/
(function(O,W,v){'use strict';function H(a){return function(){var b=arguments[0],d;d="["+(a?a+":":"")+b+"] http://errors.angularjs.org/1.5.0/"+(a?a+"/":"")+b;for(b=1;b<arguments.length;b++){d=d+(1==b?"?":"&")+"p"+(b-1)+"=";var c=encodeURIComponent,e;e=arguments[b];e="function"==typeof e?e.toString().replace(/ \{[\s\S]*$/,""):"undefined"==typeof e?"undefined":"string"!=typeof e?JSON.stringify(e):e;d+=c(e)}return Error(d)}}function Ca(a){if(null==a||Za(a))return!1;if(L(a)||F(a)||C&&a instanceof C)return!0;
var b="length"in Object(a)&&a.length;return N(b)&&(0<=b&&(b-1 in a||a instanceof Array)||"function"==typeof a.item)}function n(a,b,d){var c,e;if(a)if(D(a))for(c in a)"prototype"==c||"length"==c||"name"==c||a.hasOwnProperty&&!a.hasOwnProperty(c)||b.call(d,a[c],c,a);else if(L(a)||Ca(a)){var f="object"!==typeof a;c=0;for(e=a.length;c<e;c++)(f||c in a)&&b.call(d,a[c],c,a)}else if(a.forEach&&a.forEach!==n)a.forEach(b,d,a);else if(qc(a))for(c in a)b.call(d,a[c],c,a);else if("function"===typeof a.hasOwnProperty)for(c in a)a.hasOwnProperty(c)&&
b.call(d,a[c],c,a);else for(c in a)sa.call(a,c)&&b.call(d,a[c],c,a);return a}function rc(a,b,d){for(var c=Object.keys(a).sort(),e=0;e<c.length;e++)b.call(d,a[c[e]],c[e]);return c}function sc(a){return function(b,d){a(d,b)}}function Yd(){return++pb}function Qb(a,b,d){for(var c=a.$$hashKey,e=0,f=b.length;e<f;++e){var g=b[e];if(E(g)||D(g))for(var h=Object.keys(g),k=0,l=h.length;k<l;k++){var m=h[k],r=g[m];d&&E(r)?V(r)?a[m]=new Date(r.valueOf()):$a(r)?a[m]=new RegExp(r):r.nodeName?a[m]=r.cloneNode(!0):
Rb(r)?a[m]=r.clone():(E(a[m])||(a[m]=L(r)?[]:{}),Qb(a[m],[r],!0)):a[m]=r}}c?a.$$hashKey=c:delete a.$$hashKey;return a}function T(a){return Qb(a,wa.call(arguments,1),!1)}function Zd(a){return Qb(a,wa.call(arguments,1),!0)}function ca(a){return parseInt(a,10)}function Sb(a,b){return T(Object.create(a),b)}function B(){}function ab(a){return a}function ba(a){return function(){return a}}function tc(a){return D(a.toString)&&a.toString!==ga}function x(a){return"undefined"===typeof a}function y(a){return"undefined"!==
typeof a}function E(a){return null!==a&&"object"===typeof a}function qc(a){return null!==a&&"object"===typeof a&&!uc(a)}function F(a){return"string"===typeof a}function N(a){return"number"===typeof a}function V(a){return"[object Date]"===ga.call(a)}function D(a){return"function"===typeof a}function $a(a){return"[object RegExp]"===ga.call(a)}function Za(a){return a&&a.window===a}function bb(a){return a&&a.$evalAsync&&a.$watch}function Na(a){return"boolean"===typeof a}function $d(a){return a&&N(a.length)&&
ae.test(ga.call(a))}function Rb(a){return!(!a||!(a.nodeName||a.prop&&a.attr&&a.find))}function be(a){var b={};a=a.split(",");var d;for(d=0;d<a.length;d++)b[a[d]]=!0;return b}function ra(a){return G(a.nodeName||a[0]&&a[0].nodeName)}function cb(a,b){var d=a.indexOf(b);0<=d&&a.splice(d,1);return d}function Oa(a,b){function d(a,b){var d=b.$$hashKey,e;if(L(a)){e=0;for(var f=a.length;e<f;e++)b.push(c(a[e]))}else if(qc(a))for(e in a)b[e]=c(a[e]);else if(a&&"function"===typeof a.hasOwnProperty)for(e in a)a.hasOwnProperty(e)&&
(b[e]=c(a[e]));else for(e in a)sa.call(a,e)&&(b[e]=c(a[e]));d?b.$$hashKey=d:delete b.$$hashKey;return b}function c(a){if(!E(a))return a;var b=f.indexOf(a);if(-1!==b)return g[b];if(Za(a)||bb(a))throw Da("cpws");var b=!1,c=e(a);c===v&&(c=L(a)?[]:Object.create(uc(a)),b=!0);f.push(a);g.push(c);return b?d(a,c):c}function e(a){switch(ga.call(a)){case "[object Int8Array]":case "[object Int16Array]":case "[object Int32Array]":case "[object Float32Array]":case "[object Float64Array]":case "[object Uint8Array]":case "[object Uint8ClampedArray]":case "[object Uint16Array]":case "[object Uint32Array]":return new a.constructor(c(a.buffer));
case "[object ArrayBuffer]":if(!a.slice){var b=new ArrayBuffer(a.byteLength);(new Uint8Array(b)).set(new Uint8Array(a));return b}return a.slice(0);case "[object Boolean]":case "[object Number]":case "[object String]":case "[object Date]":return new a.constructor(a.valueOf());case "[object RegExp]":return b=new RegExp(a.source,a.toString().match(/[^\/]*$/)[0]),b.lastIndex=a.lastIndex,b}if(D(a.cloneNode))return a.cloneNode(!0)}var f=[],g=[];if(b){if($d(b)||"[object ArrayBuffer]"===ga.call(b))throw Da("cpta");
if(a===b)throw Da("cpi");L(b)?b.length=0:n(b,function(a,c){"$$hashKey"!==c&&delete b[c]});f.push(a);g.push(b);return d(a,b)}return c(a)}function na(a,b){if(L(a)){b=b||[];for(var d=0,c=a.length;d<c;d++)b[d]=a[d]}else if(E(a))for(d in b=b||{},a)if("$"!==d.charAt(0)||"$"!==d.charAt(1))b[d]=a[d];return b||a}function oa(a,b){if(a===b)return!0;if(null===a||null===b)return!1;if(a!==a&&b!==b)return!0;var d=typeof a,c;if(d==typeof b&&"object"==d)if(L(a)){if(!L(b))return!1;if((d=a.length)==b.length){for(c=
0;c<d;c++)if(!oa(a[c],b[c]))return!1;return!0}}else{if(V(a))return V(b)?oa(a.getTime(),b.getTime()):!1;if($a(a))return $a(b)?a.toString()==b.toString():!1;if(bb(a)||bb(b)||Za(a)||Za(b)||L(b)||V(b)||$a(b))return!1;d=Z();for(c in a)if("$"!==c.charAt(0)&&!D(a[c])){if(!oa(a[c],b[c]))return!1;d[c]=!0}for(c in b)if(!(c in d)&&"$"!==c.charAt(0)&&y(b[c])&&!D(b[c]))return!1;return!0}return!1}function db(a,b,d){return a.concat(wa.call(b,d))}function vc(a,b){var d=2<arguments.length?wa.call(arguments,2):[];
return!D(b)||b instanceof RegExp?b:d.length?function(){return arguments.length?b.apply(a,db(d,arguments,0)):b.apply(a,d)}:function(){return arguments.length?b.apply(a,arguments):b.call(a)}}function ce(a,b){var d=b;"string"===typeof a&&"$"===a.charAt(0)&&"$"===a.charAt(1)?d=v:Za(b)?d="$WINDOW":b&&W===b?d="$DOCUMENT":bb(b)&&(d="$SCOPE");return d}function eb(a,b){if(x(a))return v;N(b)||(b=b?2:null);return JSON.stringify(a,ce,b)}function wc(a){return F(a)?JSON.parse(a):a}function xc(a,b){a=a.replace(de,
"");var d=Date.parse("Jan 01, 1970 00:00:00 "+a)/6E4;return isNaN(d)?b:d}function Tb(a,b,d){d=d?-1:1;var c=a.getTimezoneOffset();b=xc(b,c);d*=b-c;a=new Date(a.getTime());a.setMinutes(a.getMinutes()+d);return a}function ta(a){a=C(a).clone();try{a.empty()}catch(b){}var d=C("<div>").append(a).html();try{return a[0].nodeType===Pa?G(d):d.match(/^(<[^>]+>)/)[1].replace(/^<([\w\-]+)/,function(a,b){return"<"+G(b)})}catch(c){return G(d)}}function yc(a){try{return decodeURIComponent(a)}catch(b){}}function zc(a){var b=
{};n((a||"").split("&"),function(a){var c,e,f;a&&(e=a=a.replace(/\+/g,"%20"),c=a.indexOf("="),-1!==c&&(e=a.substring(0,c),f=a.substring(c+1)),e=yc(e),y(e)&&(f=y(f)?yc(f):!0,sa.call(b,e)?L(b[e])?b[e].push(f):b[e]=[b[e],f]:b[e]=f))});return b}function Ub(a){var b=[];n(a,function(a,c){L(a)?n(a,function(a){b.push(ha(c,!0)+(!0===a?"":"="+ha(a,!0)))}):b.push(ha(c,!0)+(!0===a?"":"="+ha(a,!0)))});return b.length?b.join("&"):""}function qb(a){return ha(a,!0).replace(/%26/gi,"&").replace(/%3D/gi,"=").replace(/%2B/gi,
"+")}function ha(a,b){return encodeURIComponent(a).replace(/%40/gi,"@").replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",").replace(/%3B/gi,";").replace(/%20/g,b?"%20":"+")}function ee(a,b){var d,c,e=Qa.length;for(c=0;c<e;++c)if(d=Qa[c]+b,F(d=a.getAttribute(d)))return d;return null}function fe(a,b){var d,c,e={};n(Qa,function(b){b+="app";!d&&a.hasAttribute&&a.hasAttribute(b)&&(d=a,c=a.getAttribute(b))});n(Qa,function(b){b+="app";var e;!d&&(e=a.querySelector("["+b.replace(":","\\:")+"]"))&&
(d=e,c=e.getAttribute(b))});d&&(e.strictDi=null!==ee(d,"strict-di"),b(d,c?[c]:[],e))}function Ac(a,b,d){E(d)||(d={});d=T({strictDi:!1},d);var c=function(){a=C(a);if(a.injector()){var c=a[0]===W?"document":ta(a);throw Da("btstrpd",c.replace(/</,"&lt;").replace(/>/,"&gt;"));}b=b||[];b.unshift(["$provide",function(b){b.value("$rootElement",a)}]);d.debugInfoEnabled&&b.push(["$compileProvider",function(a){a.debugInfoEnabled(!0)}]);b.unshift("ng");c=fb(b,d.strictDi);c.invoke(["$rootScope","$rootElement",
"$compile","$injector",function(a,b,c,d){a.$apply(function(){b.data("$injector",d);c(b)(a)})}]);return c},e=/^NG_ENABLE_DEBUG_INFO!/,f=/^NG_DEFER_BOOTSTRAP!/;O&&e.test(O.name)&&(d.debugInfoEnabled=!0,O.name=O.name.replace(e,""));if(O&&!f.test(O.name))return c();O.name=O.name.replace(f,"");ia.resumeBootstrap=function(a){n(a,function(a){b.push(a)});return c()};D(ia.resumeDeferredBootstrap)&&ia.resumeDeferredBootstrap()}function ge(){O.name="NG_ENABLE_DEBUG_INFO!"+O.name;O.location.reload()}function he(a){a=
ia.element(a).injector();if(!a)throw Da("test");return a.get("$$testability")}function Bc(a,b){b=b||"_";return a.replace(ie,function(a,c){return(c?b:"")+a.toLowerCase()})}function je(){var a;if(!Cc){var b=rb();(ua=x(b)?O.jQuery:b?O[b]:v)&&ua.fn.on?(C=ua,T(ua.fn,{scope:Ra.scope,isolateScope:Ra.isolateScope,controller:Ra.controller,injector:Ra.injector,inheritedData:Ra.inheritedData}),a=ua.cleanData,ua.cleanData=function(b){for(var c,e=0,f;null!=(f=b[e]);e++)(c=ua._data(f,"events"))&&c.$destroy&&ua(f).triggerHandler("$destroy");
a(b)}):C=U;ia.element=C;Cc=!0}}function sb(a,b,d){if(!a)throw Da("areq",b||"?",d||"required");return a}function Sa(a,b,d){d&&L(a)&&(a=a[a.length-1]);sb(D(a),b,"not a function, got "+(a&&"object"===typeof a?a.constructor.name||"Object":typeof a));return a}function Ta(a,b){if("hasOwnProperty"===a)throw Da("badname",b);}function Dc(a,b,d){if(!b)return a;b=b.split(".");for(var c,e=a,f=b.length,g=0;g<f;g++)c=b[g],a&&(a=(e=a)[c]);return!d&&D(a)?vc(e,a):a}function tb(a){for(var b=a[0],d=a[a.length-1],c,
e=1;b!==d&&(b=b.nextSibling);e++)if(c||a[e]!==b)c||(c=C(wa.call(a,0,e))),c.push(b);return c||a}function Z(){return Object.create(null)}function ke(a){function b(a,b,c){return a[b]||(a[b]=c())}var d=H("$injector"),c=H("ng");a=b(a,"angular",Object);a.$$minErr=a.$$minErr||H;return b(a,"module",function(){var a={};return function(f,g,h){if("hasOwnProperty"===f)throw c("badname","module");g&&a.hasOwnProperty(f)&&(a[f]=null);return b(a,f,function(){function a(b,d,e,f){f||(f=c);return function(){f[e||"push"]([b,
d,arguments]);return K}}function b(a,d){return function(b,e){e&&D(e)&&(e.$$moduleName=f);c.push([a,d,arguments]);return K}}if(!g)throw d("nomod",f);var c=[],e=[],s=[],I=a("$injector","invoke","push",e),K={_invokeQueue:c,_configBlocks:e,_runBlocks:s,requires:g,name:f,provider:b("$provide","provider"),factory:b("$provide","factory"),service:b("$provide","service"),value:a("$provide","value"),constant:a("$provide","constant","unshift"),decorator:b("$provide","decorator"),animation:b("$animateProvider",
"register"),filter:b("$filterProvider","register"),controller:b("$controllerProvider","register"),directive:b("$compileProvider","directive"),component:b("$compileProvider","component"),config:I,run:function(a){s.push(a);return this}};h&&I(h);return K})}})}function le(a){T(a,{bootstrap:Ac,copy:Oa,extend:T,merge:Zd,equals:oa,element:C,forEach:n,injector:fb,noop:B,bind:vc,toJson:eb,fromJson:wc,identity:ab,isUndefined:x,isDefined:y,isString:F,isFunction:D,isObject:E,isNumber:N,isElement:Rb,isArray:L,
version:me,isDate:V,lowercase:G,uppercase:ub,callbacks:{counter:0},getTestability:he,$$minErr:H,$$csp:Ea,reloadWithDebugInfo:ge});Vb=ke(O);Vb("ng",["ngLocale"],["$provide",function(a){a.provider({$$sanitizeUri:ne});a.provider("$compile",Ec).directive({a:oe,input:Fc,textarea:Fc,form:pe,script:qe,select:re,style:se,option:te,ngBind:ue,ngBindHtml:ve,ngBindTemplate:we,ngClass:xe,ngClassEven:ye,ngClassOdd:ze,ngCloak:Ae,ngController:Be,ngForm:Ce,ngHide:De,ngIf:Ee,ngInclude:Fe,ngInit:Ge,ngNonBindable:He,
ngPluralize:Ie,ngRepeat:Je,ngShow:Ke,ngStyle:Le,ngSwitch:Me,ngSwitchWhen:Ne,ngSwitchDefault:Oe,ngOptions:Pe,ngTransclude:Qe,ngModel:Re,ngList:Se,ngChange:Te,pattern:Gc,ngPattern:Gc,required:Hc,ngRequired:Hc,minlength:Ic,ngMinlength:Ic,maxlength:Jc,ngMaxlength:Jc,ngValue:Ue,ngModelOptions:Ve}).directive({ngInclude:We}).directive(vb).directive(Kc);a.provider({$anchorScroll:Xe,$animate:Ye,$animateCss:Ze,$$animateJs:$e,$$animateQueue:af,$$AnimateRunner:bf,$$animateAsyncRun:cf,$browser:df,$cacheFactory:ef,
$controller:ff,$document:gf,$exceptionHandler:hf,$filter:Lc,$$forceReflow:jf,$interpolate:kf,$interval:lf,$http:mf,$httpParamSerializer:nf,$httpParamSerializerJQLike:of,$httpBackend:pf,$xhrFactory:qf,$location:rf,$log:sf,$parse:tf,$rootScope:uf,$q:vf,$$q:wf,$sce:xf,$sceDelegate:yf,$sniffer:zf,$templateCache:Af,$templateRequest:Bf,$$testability:Cf,$timeout:Df,$window:Ef,$$rAF:Ff,$$jqLite:Gf,$$HashMap:Hf,$$cookieReader:If})}])}function gb(a){return a.replace(Jf,function(a,d,c,e){return e?c.toUpperCase():
c}).replace(Kf,"Moz$1")}function Mc(a){a=a.nodeType;return 1===a||!a||9===a}function Nc(a,b){var d,c,e=b.createDocumentFragment(),f=[];if(Wb.test(a)){d=d||e.appendChild(b.createElement("div"));c=(Lf.exec(a)||["",""])[1].toLowerCase();c=da[c]||da._default;d.innerHTML=c[1]+a.replace(Mf,"<$1></$2>")+c[2];for(c=c[0];c--;)d=d.lastChild;f=db(f,d.childNodes);d=e.firstChild;d.textContent=""}else f.push(b.createTextNode(a));e.textContent="";e.innerHTML="";n(f,function(a){e.appendChild(a)});return e}function Oc(a,
b){var d=a.parentNode;d&&d.replaceChild(b,a);b.appendChild(a)}function U(a){if(a instanceof U)return a;var b;F(a)&&(a=X(a),b=!0);if(!(this instanceof U)){if(b&&"<"!=a.charAt(0))throw Xb("nosel");return new U(a)}if(b){b=W;var d;a=(d=Nf.exec(a))?[b.createElement(d[1])]:(d=Nc(a,b))?d.childNodes:[]}Pc(this,a)}function Yb(a){return a.cloneNode(!0)}function wb(a,b){b||hb(a);if(a.querySelectorAll)for(var d=a.querySelectorAll("*"),c=0,e=d.length;c<e;c++)hb(d[c])}function Qc(a,b,d,c){if(y(c))throw Xb("offargs");
var e=(c=xb(a))&&c.events,f=c&&c.handle;if(f)if(b){var g=function(b){var c=e[b];y(d)&&cb(c||[],d);y(d)&&c&&0<c.length||(a.removeEventListener(b,f,!1),delete e[b])};n(b.split(" "),function(a){g(a);yb[a]&&g(yb[a])})}else for(b in e)"$destroy"!==b&&a.removeEventListener(b,f,!1),delete e[b]}function hb(a,b){var d=a.ng339,c=d&&ib[d];c&&(b?delete c.data[b]:(c.handle&&(c.events.$destroy&&c.handle({},"$destroy"),Qc(a)),delete ib[d],a.ng339=v))}function xb(a,b){var d=a.ng339,d=d&&ib[d];b&&!d&&(a.ng339=d=++Of,
d=ib[d]={events:{},data:{},handle:v});return d}function Zb(a,b,d){if(Mc(a)){var c=y(d),e=!c&&b&&!E(b),f=!b;a=(a=xb(a,!e))&&a.data;if(c)a[b]=d;else{if(f)return a;if(e)return a&&a[b];T(a,b)}}}function zb(a,b){return a.getAttribute?-1<(" "+(a.getAttribute("class")||"")+" ").replace(/[\n\t]/g," ").indexOf(" "+b+" "):!1}function Ab(a,b){b&&a.setAttribute&&n(b.split(" "),function(b){a.setAttribute("class",X((" "+(a.getAttribute("class")||"")+" ").replace(/[\n\t]/g," ").replace(" "+X(b)+" "," ")))})}function Bb(a,
b){if(b&&a.setAttribute){var d=(" "+(a.getAttribute("class")||"")+" ").replace(/[\n\t]/g," ");n(b.split(" "),function(a){a=X(a);-1===d.indexOf(" "+a+" ")&&(d+=a+" ")});a.setAttribute("class",X(d))}}function Pc(a,b){if(b)if(b.nodeType)a[a.length++]=b;else{var d=b.length;if("number"===typeof d&&b.window!==b){if(d)for(var c=0;c<d;c++)a[a.length++]=b[c]}else a[a.length++]=b}}function Rc(a,b){return Cb(a,"$"+(b||"ngController")+"Controller")}function Cb(a,b,d){9==a.nodeType&&(a=a.documentElement);for(b=
L(b)?b:[b];a;){for(var c=0,e=b.length;c<e;c++)if(y(d=C.data(a,b[c])))return d;a=a.parentNode||11===a.nodeType&&a.host}}function Sc(a){for(wb(a,!0);a.firstChild;)a.removeChild(a.firstChild)}function $b(a,b){b||wb(a);var d=a.parentNode;d&&d.removeChild(a)}function Pf(a,b){b=b||O;if("complete"===b.document.readyState)b.setTimeout(a);else C(b).on("load",a)}function Tc(a,b){var d=Db[b.toLowerCase()];return d&&Uc[ra(a)]&&d}function Qf(a,b){var d=function(c,d){c.isDefaultPrevented=function(){return c.defaultPrevented};
var f=b[d||c.type],g=f?f.length:0;if(g){if(x(c.immediatePropagationStopped)){var h=c.stopImmediatePropagation;c.stopImmediatePropagation=function(){c.immediatePropagationStopped=!0;c.stopPropagation&&c.stopPropagation();h&&h.call(c)}}c.isImmediatePropagationStopped=function(){return!0===c.immediatePropagationStopped};var k=f.specialHandlerWrapper||Rf;1<g&&(f=na(f));for(var l=0;l<g;l++)c.isImmediatePropagationStopped()||k(a,c,f[l])}};d.elem=a;return d}function Rf(a,b,d){d.call(a,b)}function Sf(a,b,
d){var c=b.relatedTarget;c&&(c===a||Tf.call(a,c))||d.call(a,b)}function Gf(){this.$get=function(){return T(U,{hasClass:function(a,b){a.attr&&(a=a[0]);return zb(a,b)},addClass:function(a,b){a.attr&&(a=a[0]);return Bb(a,b)},removeClass:function(a,b){a.attr&&(a=a[0]);return Ab(a,b)}})}}function Fa(a,b){var d=a&&a.$$hashKey;if(d)return"function"===typeof d&&(d=a.$$hashKey()),d;d=typeof a;return d="function"==d||"object"==d&&null!==a?a.$$hashKey=d+":"+(b||Yd)():d+":"+a}function Ua(a,b){if(b){var d=0;this.nextUid=
function(){return++d}}n(a,this.put,this)}function Vc(a){a=a.toString().replace(Uf,"");return a.match(Vf)||a.match(Wf)}function Xf(a){return(a=Vc(a))?"function("+(a[1]||"").replace(/[\s\r\n]+/," ")+")":"fn"}function fb(a,b){function d(a){return function(b,c){if(E(b))n(b,sc(a));else return a(b,c)}}function c(a,b){Ta(a,"service");if(D(b)||L(b))b=s.instantiate(b);if(!b.$get)throw Ga("pget",a);return r[a+"Provider"]=b}function e(a,b){return function(){var c=t.invoke(b,this);if(x(c))throw Ga("undef",a);
return c}}function f(a,b,d){return c(a,{$get:!1!==d?e(a,b):b})}function g(a){sb(x(a)||L(a),"modulesToLoad","not an array");var b=[],c;n(a,function(a){function d(a){var b,c;b=0;for(c=a.length;b<c;b++){var e=a[b],f=s.get(e[0]);f[e[1]].apply(f,e[2])}}if(!m.get(a)){m.put(a,!0);try{F(a)?(c=Vb(a),b=b.concat(g(c.requires)).concat(c._runBlocks),d(c._invokeQueue),d(c._configBlocks)):D(a)?b.push(s.invoke(a)):L(a)?b.push(s.invoke(a)):Sa(a,"module")}catch(e){throw L(a)&&(a=a[a.length-1]),e.message&&e.stack&&
-1==e.stack.indexOf(e.message)&&(e=e.message+"\n"+e.stack),Ga("modulerr",a,e.stack||e.message||e);}}});return b}function h(a,c){function d(b,e){if(a.hasOwnProperty(b)){if(a[b]===k)throw Ga("cdep",b+" <- "+l.join(" <- "));return a[b]}try{return l.unshift(b),a[b]=k,a[b]=c(b,e)}catch(f){throw a[b]===k&&delete a[b],f;}finally{l.shift()}}function e(a,c,f){var g=[];a=fb.$$annotate(a,b,f);for(var h=0,k=a.length;h<k;h++){var l=a[h];if("string"!==typeof l)throw Ga("itkn",l);g.push(c&&c.hasOwnProperty(l)?c[l]:
d(l,f))}return g}return{invoke:function(a,b,c,d){"string"===typeof c&&(d=c,c=null);c=e(a,c,d);L(a)&&(a=a[a.length-1]);d=11>=xa?!1:"function"===typeof a&&/^(?:class\s|constructor\()/.test(Function.prototype.toString.call(a));return d?(c.unshift(null),new (Function.prototype.bind.apply(a,c))):a.apply(b,c)},instantiate:function(a,b,c){var d=L(a)?a[a.length-1]:a;a=e(a,b,c);a.unshift(null);return new (Function.prototype.bind.apply(d,a))},get:d,annotate:fb.$$annotate,has:function(b){return r.hasOwnProperty(b+
"Provider")||a.hasOwnProperty(b)}}}b=!0===b;var k={},l=[],m=new Ua([],!0),r={$provide:{provider:d(c),factory:d(f),service:d(function(a,b){return f(a,["$injector",function(a){return a.instantiate(b)}])}),value:d(function(a,b){return f(a,ba(b),!1)}),constant:d(function(a,b){Ta(a,"constant");r[a]=b;I[a]=b}),decorator:function(a,b){var c=s.get(a+"Provider"),d=c.$get;c.$get=function(){var a=t.invoke(d,c);return t.invoke(b,null,{$delegate:a})}}}},s=r.$injector=h(r,function(a,b){ia.isString(b)&&l.push(b);
throw Ga("unpr",l.join(" <- "));}),I={},K=h(I,function(a,b){var c=s.get(a+"Provider",b);return t.invoke(c.$get,c,v,a)}),t=K;r.$injectorProvider={$get:ba(K)};var p=g(a),t=K.get("$injector");t.strictDi=b;n(p,function(a){a&&t.invoke(a)});return t}function Xe(){var a=!0;this.disableAutoScrolling=function(){a=!1};this.$get=["$window","$location","$rootScope",function(b,d,c){function e(a){var b=null;Array.prototype.some.call(a,function(a){if("a"===ra(a))return b=a,!0});return b}function f(a){if(a){a.scrollIntoView();
var c;c=g.yOffset;D(c)?c=c():Rb(c)?(c=c[0],c="fixed"!==b.getComputedStyle(c).position?0:c.getBoundingClientRect().bottom):N(c)||(c=0);c&&(a=a.getBoundingClientRect().top,b.scrollBy(0,a-c))}else b.scrollTo(0,0)}function g(a){a=F(a)?a:d.hash();var b;a?(b=h.getElementById(a))?f(b):(b=e(h.getElementsByName(a)))?f(b):"top"===a&&f(null):f(null)}var h=b.document;a&&c.$watch(function(){return d.hash()},function(a,b){a===b&&""===a||Pf(function(){c.$evalAsync(g)})});return g}]}function jb(a,b){if(!a&&!b)return"";
if(!a)return b;if(!b)return a;L(a)&&(a=a.join(" "));L(b)&&(b=b.join(" "));return a+" "+b}function Yf(a){F(a)&&(a=a.split(" "));var b=Z();n(a,function(a){a.length&&(b[a]=!0)});return b}function Ha(a){return E(a)?a:{}}function Zf(a,b,d,c){function e(a){try{a.apply(null,wa.call(arguments,1))}finally{if(K--,0===K)for(;t.length;)try{t.pop()()}catch(b){d.error(b)}}}function f(){z=null;g();h()}function g(){a:{try{p=m.state;break a}catch(a){}p=void 0}p=x(p)?null:p;oa(p,$)&&(p=$);$=p}function h(){if(u!==k.url()||
w!==p)u=k.url(),w=p,n(A,function(a){a(k.url(),p)})}var k=this,l=a.location,m=a.history,r=a.setTimeout,s=a.clearTimeout,I={};k.isMock=!1;var K=0,t=[];k.$$completeOutstandingRequest=e;k.$$incOutstandingRequestCount=function(){K++};k.notifyWhenNoOutstandingRequests=function(a){0===K?a():t.push(a)};var p,w,u=l.href,la=b.find("base"),z=null;g();w=p;k.url=function(b,d,e){x(e)&&(e=null);l!==a.location&&(l=a.location);m!==a.history&&(m=a.history);if(b){var f=w===e;if(u===b&&(!c.history||f))return k;var h=
u&&Ia(u)===Ia(b);u=b;w=e;if(!c.history||h&&f){if(!h||z)z=b;d?l.replace(b):h?(d=l,e=b.indexOf("#"),e=-1===e?"":b.substr(e),d.hash=e):l.href=b;l.href!==b&&(z=b)}else m[d?"replaceState":"pushState"](e,"",b),g(),w=p;return k}return z||l.href.replace(/%27/g,"'")};k.state=function(){return p};var A=[],Q=!1,$=null;k.onUrlChange=function(b){if(!Q){if(c.history)C(a).on("popstate",f);C(a).on("hashchange",f);Q=!0}A.push(b);return b};k.$$applicationDestroyed=function(){C(a).off("hashchange popstate",f)};k.$$checkUrlChange=
h;k.baseHref=function(){var a=la.attr("href");return a?a.replace(/^(https?\:)?\/\/[^\/]*/,""):""};k.defer=function(a,b){var c;K++;c=r(function(){delete I[c];e(a)},b||0);I[c]=!0;return c};k.defer.cancel=function(a){return I[a]?(delete I[a],s(a),e(B),!0):!1}}function df(){this.$get=["$window","$log","$sniffer","$document",function(a,b,d,c){return new Zf(a,c,b,d)}]}function ef(){this.$get=function(){function a(a,c){function e(a){a!=r&&(s?s==a&&(s=a.n):s=a,f(a.n,a.p),f(a,r),r=a,r.n=null)}function f(a,
b){a!=b&&(a&&(a.p=b),b&&(b.n=a))}if(a in b)throw H("$cacheFactory")("iid",a);var g=0,h=T({},c,{id:a}),k=Z(),l=c&&c.capacity||Number.MAX_VALUE,m=Z(),r=null,s=null;return b[a]={put:function(a,b){if(!x(b)){if(l<Number.MAX_VALUE){var c=m[a]||(m[a]={key:a});e(c)}a in k||g++;k[a]=b;g>l&&this.remove(s.key);return b}},get:function(a){if(l<Number.MAX_VALUE){var b=m[a];if(!b)return;e(b)}return k[a]},remove:function(a){if(l<Number.MAX_VALUE){var b=m[a];if(!b)return;b==r&&(r=b.p);b==s&&(s=b.n);f(b.n,b.p);delete m[a]}a in
k&&(delete k[a],g--)},removeAll:function(){k=Z();g=0;m=Z();r=s=null},destroy:function(){m=h=k=null;delete b[a]},info:function(){return T({},h,{size:g})}}}var b={};a.info=function(){var a={};n(b,function(b,e){a[e]=b.info()});return a};a.get=function(a){return b[a]};return a}}function Af(){this.$get=["$cacheFactory",function(a){return a("templates")}]}function Ec(a,b){function d(a,b,c){var d=/^\s*([@&<]|=(\*?))(\??)\s*(\w*)\s*$/,e={};n(a,function(a,f){var g=a.match(d);if(!g)throw ja("iscp",b,f,a,c?
"controller bindings definition":"isolate scope definition");e[f]={mode:g[1][0],collection:"*"===g[2],optional:"?"===g[3],attrName:g[4]||f}});return e}function c(a){var b=a.charAt(0);if(!b||b!==G(b))throw ja("baddir",a);if(a!==a.trim())throw ja("baddir",a);}var e={},f=/^\s*directive\:\s*([\w\-]+)\s+(.*)$/,g=/(([\w\-]+)(?:\:([^;]+))?;?)/,h=be("ngSrc,ngSrcset,src,srcset"),k=/^(?:(\^\^?)?(\?)?(\^\^?)?)?/,l=/^(on[a-z]+|formaction)$/;this.directive=function s(b,f){Ta(b,"directive");F(b)?(c(b),sb(f,"directiveFactory"),
e.hasOwnProperty(b)||(e[b]=[],a.factory(b+"Directive",["$injector","$exceptionHandler",function(a,c){var f=[];n(e[b],function(e,g){try{var h=a.invoke(e);D(h)?h={compile:ba(h)}:!h.compile&&h.link&&(h.compile=ba(h.link));h.priority=h.priority||0;h.index=g;h.name=h.name||b;h.require=h.require||h.controller&&h.name;h.restrict=h.restrict||"EA";var k=h,l=h,m=h.name,s={isolateScope:null,bindToController:null};E(l.scope)&&(!0===l.bindToController?(s.bindToController=d(l.scope,m,!0),s.isolateScope={}):s.isolateScope=
d(l.scope,m,!1));E(l.bindToController)&&(s.bindToController=d(l.bindToController,m,!0));if(E(s.bindToController)){var P=l.controller,S=l.controllerAs;if(!P)throw ja("noctrl",m);if(!Wc(P,S))throw ja("noident",m);}var ma=k.$$bindings=s;E(ma.isolateScope)&&(h.$$isolateBindings=ma.isolateScope);h.$$moduleName=e.$$moduleName;f.push(h)}catch(K){c(K)}});return f}])),e[b].push(f)):n(b,sc(s));return this};this.component=function(a,b){function c(a){function e(b){return D(b)||L(b)?function(c,d){return a.invoke(b,
this,{$element:c,$attrs:d})}:b}var f=b.template||b.templateUrl?b.template:"";return{controller:d,controllerAs:Wc(b.controller)||b.controllerAs||"$ctrl",template:e(f),templateUrl:e(b.templateUrl),transclude:b.transclude,scope:{},bindToController:b.bindings||{},restrict:"E",require:b.require}}var d=b.controller||function(){};n(b,function(a,b){"$"===b.charAt(0)&&(c[b]=a)});c.$inject=["$injector"];return this.directive(a,c)};this.aHrefSanitizationWhitelist=function(a){return y(a)?(b.aHrefSanitizationWhitelist(a),
this):b.aHrefSanitizationWhitelist()};this.imgSrcSanitizationWhitelist=function(a){return y(a)?(b.imgSrcSanitizationWhitelist(a),this):b.imgSrcSanitizationWhitelist()};var m=!0;this.debugInfoEnabled=function(a){return y(a)?(m=a,this):m};this.$get=["$injector","$interpolate","$exceptionHandler","$templateRequest","$parse","$controller","$rootScope","$sce","$animate","$$sanitizeUri",function(a,b,c,d,p,w,u,la,z,A){function Q(a,b,c){ba.innerHTML="<span "+b+">";b=ba.firstChild.attributes;var d=b[0];b.removeNamedItem(d.name);
d.value=c;a.attributes.setNamedItem(d)}function $(a,b){try{a.addClass(b)}catch(c){}}function M(a,b,c,d,e){a instanceof C||(a=C(a));for(var f=/\S+/,g=0,h=a.length;g<h;g++){var k=a[g];k.nodeType===Pa&&k.nodeValue.match(f)&&Oc(k,a[g]=W.createElement("span"))}var l=P(a,b,a,c,d,e);M.$$addScopeClass(a);var m=null;return function(b,c,d){sb(b,"scope");e&&e.needsNewScope&&(b=b.$parent.$new());d=d||{};var f=d.parentBoundTranscludeFn,g=d.transcludeControllers;d=d.futureParentElement;f&&f.$$boundTransclude&&
(f=f.$$boundTransclude);m||(m=(d=d&&d[0])?"foreignobject"!==ra(d)&&ga.call(d).match(/SVG/)?"svg":"html":"html");d="html"!==m?C(U(m,C("<div>").append(a).html())):c?Ra.clone.call(a):a;if(g)for(var h in g)d.data("$"+h+"Controller",g[h].instance);M.$$addScopeInfo(d,b);c&&c(d,b);l&&l(b,d,d,f);return d}}function P(a,b,c,d,e,f){function g(a,c,d,e){var f,k,l,m,p,s,u;if(A)for(u=Array(c.length),m=0;m<h.length;m+=3)f=h[m],u[f]=c[f];else u=c;m=0;for(p=h.length;m<p;)k=u[h[m++]],c=h[m++],f=h[m++],c?(c.scope?(l=
a.$new(),M.$$addScopeInfo(C(k),l)):l=a,s=c.transcludeOnThisElement?S(a,c.transclude,e):!c.templateOnThisElement&&e?e:!e&&b?S(a,b):null,c(f,l,k,d,s)):f&&f(a,k.childNodes,v,e)}for(var h=[],k,l,m,p,A,s=0;s<a.length;s++){k=new na;l=ma(a[s],[],k,0===s?d:v,e);(f=l.length?y(l,a[s],k,b,c,null,[],[],f):null)&&f.scope&&M.$$addScopeClass(k.$$element);k=f&&f.terminal||!(m=a[s].childNodes)||!m.length?null:P(m,f?(f.transcludeOnThisElement||!f.templateOnThisElement)&&f.transclude:b);if(f||k)h.push(s,f,k),p=!0,A=
A||f;f=null}return p?g:null}function S(a,b,c){var d=function(d,e,f,g,h){d||(d=a.$new(!1,h),d.$$transcluded=!0);return b(d,e,{parentBoundTranscludeFn:c,transcludeControllers:f,futureParentElement:g})},e=d.$$slots=Z(),f;for(f in b.$$slots)e[f]=b.$$slots[f]?S(a,b.$$slots[f],c):null;return d}function ma(a,b,c,d,e){var h=c.$attr,k;switch(a.nodeType){case 1:H(b,va(ra(a)),"E",d,e);for(var l,m,p,s=a.attributes,A=0,u=s&&s.length;A<u;A++){var t=!1,w=!1;l=s[A];k=l.name;m=X(l.value);l=va(k);if(p=pa.test(l))k=
k.replace(Xc,"").substr(8).replace(/_(.)/g,function(a,b){return b.toUpperCase()});(l=l.match(ua))&&O(l[1])&&(t=k,w=k.substr(0,k.length-5)+"end",k=k.substr(0,k.length-6));l=va(k.toLowerCase());h[l]=k;if(p||!c.hasOwnProperty(l))c[l]=m,Tc(a,l)&&(c[l]=!0);Y(a,b,m,l,p);H(b,l,"A",d,e,t,w)}a=a.className;E(a)&&(a=a.animVal);if(F(a)&&""!==a)for(;k=g.exec(a);)l=va(k[2]),H(b,l,"C",d,e)&&(c[l]=X(k[3])),a=a.substr(k.index+k[0].length);break;case Pa:if(11===xa)for(;a.parentNode&&a.nextSibling&&a.nextSibling.nodeType===
Pa;)a.nodeValue+=a.nextSibling.nodeValue,a.parentNode.removeChild(a.nextSibling);N(b,a.nodeValue);break;case 8:try{if(k=f.exec(a.nodeValue))l=va(k[1]),H(b,l,"M",d,e)&&(c[l]=X(k[2]))}catch(M){}}b.sort(ya);return b}function q(a,b,c){var d=[],e=0;if(b&&a.hasAttribute&&a.hasAttribute(b)){do{if(!a)throw ja("uterdir",b,c);1==a.nodeType&&(a.hasAttribute(b)&&e++,a.hasAttribute(c)&&e--);d.push(a);a=a.nextSibling}while(0<e)}else d.push(a);return C(d)}function Yc(a,b,c){return function(d,e,f,g,h){e=q(e[0],b,
c);return a(d,e,f,g,h)}}function ac(a,b,c,d,e,f){if(a)return M(b,c,d,e,f);var g;return function(){g||(g=M(b,c,d,e,f),b=c=f=null);return g.apply(this,arguments)}}function y(a,b,d,e,f,g,h,l,m){function p(a,b,c,d){if(a){c&&(a=Yc(a,c,d));a.require=J.require;a.directiveName=H;if(P===J||J.$$isolateScope)a=ca(a,{isolateScope:!0});h.push(a)}if(b){c&&(b=Yc(b,c,d));b.require=J.require;b.directiveName=H;if(P===J||J.$$isolateScope)b=ca(b,{isolateScope:!0});l.push(b)}}function s(a,b,c,d){var e;if(F(b)){var f=
b.match(k);b=b.substring(f[0].length);var g=f[1]||f[3],f="?"===f[2];"^^"===g?c=c.parent():e=(e=d&&d[b])&&e.instance;if(!e){var h="$"+b+"Controller";e=g?c.inheritedData(h):c.data(h)}if(!e&&!f)throw ja("ctreq",b,a);}else if(L(b))for(e=[],g=0,f=b.length;g<f;g++)e[g]=s(a,b[g],c,d);else E(b)&&(e={},n(b,function(b,f){e[f]=s(a,b,c,d)}));return e||null}function A(a,b,c,d,e,f){var g=Z(),h;for(h in d){var k=d[h],l={$scope:k===P||k.$$isolateScope?e:f,$element:a,$attrs:b,$transclude:c},m=k.controller;"@"==m&&
(m=b[k.name]);l=w(m,l,!0,k.controllerAs);g[k.name]=l;B||a.data("$"+k.name+"Controller",l.instance)}return g}function u(a,c,e,f,g){function k(a,b,c,d){var e;bb(a)||(d=c,c=b,b=a,a=v);B&&(e=ma);c||(c=B?z.parent():z);if(d){var f=g.$$slots[d];if(f)return f(a,b,e,c,Eb);if(x(f))throw ja("noslot",d,ta(z));}else return g(a,b,e,c,Eb)}var m,p,t,w,ma,S,z,Ja;b===e?(f=d,z=d.$$element):(z=C(e),f=new na(z,d));t=c;P?w=c.$new(!0):Q&&(t=c.$parent);g&&(S=k,S.$$boundTransclude=g,S.isSlotFilled=function(a){return!!g.$$slots[a]});
I&&(ma=A(z,f,S,I,w,c));P&&(M.$$addScopeInfo(z,w,!0,!($&&($===P||$===P.$$originalDirective))),M.$$addScopeClass(z,!0),w.$$isolateBindings=P.$$isolateBindings,(Ja=ia(c,f,w,w.$$isolateBindings,P))&&w.$on("$destroy",Ja));for(p in ma){Ja=I[p];var K=ma[p],la=Ja.$$bindings.bindToController;K.identifier&&la&&(m=ia(t,f,K.instance,la,Ja));var q=K();q!==K.instance&&(K.instance=q,z.data("$"+Ja.name+"Controller",q),m&&m(),m=ia(t,f,K.instance,la,Ja))}n(I,function(a,b){var c=a.require;a.bindToController&&!L(c)&&
E(c)&&T(ma[b].instance,s(b,c,z,ma))});n(ma,function(a){D(a.instance.$onInit)&&a.instance.$onInit()});m=0;for(p=h.length;m<p;m++)t=h[m],ka(t,t.isolateScope?w:c,z,f,t.require&&s(t.directiveName,t.require,z,ma),S);var Eb=c;P&&(P.template||null===P.templateUrl)&&(Eb=w);a&&a(Eb,e.childNodes,v,g);for(m=l.length-1;0<=m;m--)t=l[m],ka(t,t.isolateScope?w:c,z,f,t.require&&s(t.directiveName,t.require,z,ma),S)}m=m||{};for(var t=-Number.MAX_VALUE,Q=m.newScopeDirective,I=m.controllerDirectives,P=m.newIsolateScopeDirective,
$=m.templateDirective,S=m.nonTlbTranscludeDirective,z=!1,la=!1,B=m.hasElementTranscludeDirective,ea=d.$$element=C(b),J,H,G,ya=e,O,N=!1,Fb=!1,fa,R=0,Va=a.length;R<Va;R++){J=a[R];var Y=J.$$start,ba=J.$$end;Y&&(ea=q(b,Y,ba));G=v;if(t>J.priority)break;if(fa=J.scope)J.templateUrl||(E(fa)?(Wa("new/isolated scope",P||Q,J,ea),P=J):Wa("new/isolated scope",P,J,ea)),Q=Q||J;H=J.name;if(!N&&(J.replace&&(J.templateUrl||J.template)||J.transclude&&!J.$$tlb)){for(fa=R+1;N=a[fa++];)if(N.transclude&&!N.$$tlb||N.replace&&
(N.templateUrl||N.template)){Fb=!0;break}N=!0}!J.templateUrl&&J.controller&&(fa=J.controller,I=I||Z(),Wa("'"+H+"' controller",I[H],J,ea),I[H]=J);if(fa=J.transclude)if(z=!0,J.$$tlb||(Wa("transclusion",S,J,ea),S=J),"element"==fa)B=!0,t=J.priority,G=ea,ea=d.$$element=C(W.createComment(" "+H+": "+d[H]+" ")),b=ea[0],aa(f,wa.call(G,0),b),ya=ac(Fb,G,e,t,g&&g.name,{nonTlbTranscludeDirective:S});else{var V=Z();G=C(Yb(b)).contents();if(E(fa)){G=[];var ha=Z(),da=Z();n(fa,function(a,b){var c="?"===a.charAt(0);
a=c?a.substring(1):a;ha[a]=b;V[b]=null;da[b]=c});n(ea.contents(),function(a){var b=ha[va(ra(a))];b?(da[b]=!0,V[b]=V[b]||[],V[b].push(a)):G.push(a)});n(da,function(a,b){if(!a)throw ja("reqslot",b);});for(var ga in V)V[ga]&&(V[ga]=ac(Fb,V[ga],e))}ea.empty();ya=ac(Fb,G,e,v,v,{needsNewScope:J.$$isolateScope||J.$$newScope});ya.$$slots=V}if(J.template)if(la=!0,Wa("template",$,J,ea),$=J,fa=D(J.template)?J.template(ea,d):J.template,fa=qa(fa),J.replace){g=J;G=Wb.test(fa)?Zc(U(J.templateNamespace,X(fa))):[];
b=G[0];if(1!=G.length||1!==b.nodeType)throw ja("tplrt",H,"");aa(f,ea,b);Va={$attr:{}};fa=ma(b,[],Va);var oa=a.splice(R+1,a.length-(R+1));(P||Q)&&$c(fa,P,Q);a=a.concat(fa).concat(oa);ad(d,Va);Va=a.length}else ea.html(fa);if(J.templateUrl)la=!0,Wa("template",$,J,ea),$=J,J.replace&&(g=J),u=$f(a.splice(R,a.length-R),ea,d,f,z&&ya,h,l,{controllerDirectives:I,newScopeDirective:Q!==J&&Q,newIsolateScopeDirective:P,templateDirective:$,nonTlbTranscludeDirective:S}),Va=a.length;else if(J.compile)try{O=J.compile(ea,
d,ya),D(O)?p(null,O,Y,ba):O&&p(O.pre,O.post,Y,ba)}catch(pa){c(pa,ta(ea))}J.terminal&&(u.terminal=!0,t=Math.max(t,J.priority))}u.scope=Q&&!0===Q.scope;u.transcludeOnThisElement=z;u.templateOnThisElement=la;u.transclude=ya;m.hasElementTranscludeDirective=B;return u}function $c(a,b,c){for(var d=0,e=a.length;d<e;d++)a[d]=Sb(a[d],{$$isolateScope:b,$$newScope:c})}function H(b,d,f,g,h,k,l){if(d===h)return null;h=null;if(e.hasOwnProperty(d)){var m;d=a.get(d+"Directive");for(var p=0,A=d.length;p<A;p++)try{m=
d[p],(x(g)||g>m.priority)&&-1!=m.restrict.indexOf(f)&&(k&&(m=Sb(m,{$$start:k,$$end:l})),b.push(m),h=m)}catch(t){c(t)}}return h}function O(b){if(e.hasOwnProperty(b))for(var c=a.get(b+"Directive"),d=0,f=c.length;d<f;d++)if(b=c[d],b.multiElement)return!0;return!1}function ad(a,b){var c=b.$attr,d=a.$attr,e=a.$$element;n(a,function(d,e){"$"!=e.charAt(0)&&(b[e]&&b[e]!==d&&(d+=("style"===e?";":" ")+b[e]),a.$set(e,d,!0,c[e]))});n(b,function(b,f){"class"==f?($(e,b),a["class"]=(a["class"]?a["class"]+" ":"")+
b):"style"==f?(e.attr("style",e.attr("style")+";"+b),a.style=(a.style?a.style+";":"")+b):"$"==f.charAt(0)||a.hasOwnProperty(f)||(a[f]=b,d[f]=c[f])})}function $f(a,b,c,e,f,g,h,k){var l=[],m,p,s=b[0],A=a.shift(),u=Sb(A,{templateUrl:null,transclude:null,replace:null,$$originalDirective:A}),w=D(A.templateUrl)?A.templateUrl(b,c):A.templateUrl,Q=A.templateNamespace;b.empty();d(w).then(function(d){var t,I;d=qa(d);if(A.replace){d=Wb.test(d)?Zc(U(Q,X(d))):[];t=d[0];if(1!=d.length||1!==t.nodeType)throw ja("tplrt",
A.name,w);d={$attr:{}};aa(e,b,t);var M=ma(t,[],d);E(A.scope)&&$c(M,!0);a=M.concat(a);ad(c,d)}else t=s,b.html(d);a.unshift(u);m=y(a,t,c,f,b,A,g,h,k);n(e,function(a,c){a==t&&(e[c]=b[0])});for(p=P(b[0].childNodes,f);l.length;){d=l.shift();I=l.shift();var z=l.shift(),K=l.shift(),M=b[0];if(!d.$$destroyed){if(I!==s){var la=I.className;k.hasElementTranscludeDirective&&A.replace||(M=Yb(t));aa(z,C(I),M);$(C(M),la)}I=m.transcludeOnThisElement?S(d,m.transclude,K):K;m(p,d,M,e,I)}}l=null});return function(a,b,
c,d,e){a=e;b.$$destroyed||(l?l.push(b,c,d,a):(m.transcludeOnThisElement&&(a=S(b,m.transclude,e)),m(p,b,c,d,a)))}}function ya(a,b){var c=b.priority-a.priority;return 0!==c?c:a.name!==b.name?a.name<b.name?-1:1:a.index-b.index}function Wa(a,b,c,d){function e(a){return a?" (module: "+a+")":""}if(b)throw ja("multidir",b.name,e(b.$$moduleName),c.name,e(c.$$moduleName),a,ta(d));}function N(a,c){var d=b(c,!0);d&&a.push({priority:0,compile:function(a){a=a.parent();var b=!!a.length;b&&M.$$addBindingClass(a);
return function(a,c){var e=c.parent();b||M.$$addBindingClass(e);M.$$addBindingInfo(e,d.expressions);a.$watch(d,function(a){c[0].nodeValue=a})}}})}function U(a,b){a=G(a||"html");switch(a){case "svg":case "math":var c=W.createElement("div");c.innerHTML="<"+a+">"+b+"</"+a+">";return c.childNodes[0].childNodes;default:return b}}function R(a,b){if("srcdoc"==b)return la.HTML;var c=ra(a);if("xlinkHref"==b||"form"==c&&"action"==b||"img"!=c&&("src"==b||"ngSrc"==b))return la.RESOURCE_URL}function Y(a,c,d,e,
f){var g=R(a,e);f=h[e]||f;var k=b(d,!0,g,f);if(k){if("multiple"===e&&"select"===ra(a))throw ja("selmulti",ta(a));c.push({priority:100,compile:function(){return{pre:function(a,c,h){c=h.$$observers||(h.$$observers=Z());if(l.test(e))throw ja("nodomevents");var m=h[e];m!==d&&(k=m&&b(m,!0,g,f),d=m);k&&(h[e]=k(a),(c[e]||(c[e]=[])).$$inter=!0,(h.$$observers&&h.$$observers[e].$$scope||a).$watch(k,function(a,b){"class"===e&&a!=b?h.$updateClass(a,b):h.$set(e,a)}))}}}})}}function aa(a,b,c){var d=b[0],e=b.length,
f=d.parentNode,g,h;if(a)for(g=0,h=a.length;g<h;g++)if(a[g]==d){a[g++]=c;h=g+e-1;for(var k=a.length;g<k;g++,h++)h<k?a[g]=a[h]:delete a[g];a.length-=e-1;a.context===d&&(a.context=c);break}f&&f.replaceChild(c,d);a=W.createDocumentFragment();for(g=0;g<e;g++)a.appendChild(b[g]);C.hasData(d)&&(C.data(c,C.data(d)),C(d).off("$destroy"));C.cleanData(a.querySelectorAll("*"));for(g=1;g<e;g++)delete b[g];b[0]=c;b.length=1}function ca(a,b){return T(function(){return a.apply(null,arguments)},a,b)}function ka(a,
b,d,e,f,g){try{a(b,d,e,f,g)}catch(h){c(h,ta(d))}}function ia(a,c,d,e,f){var g=[];n(e,function(e,h){var k=e.attrName,l=e.optional,m,A,s,t;switch(e.mode){case "@":l||sa.call(c,k)||(d[h]=c[k]=void 0);c.$observe(k,function(a){F(a)&&(d[h]=a)});c.$$observers[k].$$scope=a;m=c[k];F(m)?d[h]=b(m)(a):Na(m)&&(d[h]=m);break;case "=":if(!sa.call(c,k)){if(l)break;c[k]=void 0}if(l&&!c[k])break;A=p(c[k]);t=A.literal?oa:function(a,b){return a===b||a!==a&&b!==b};s=A.assign||function(){m=d[h]=A(a);throw ja("nonassign",
c[k],k,f.name);};m=d[h]=A(a);l=function(b){t(b,d[h])||(t(b,m)?s(a,b=d[h]):d[h]=b);return m=b};l.$stateful=!0;l=e.collection?a.$watchCollection(c[k],l):a.$watch(p(c[k],l),null,A.literal);g.push(l);break;case "<":if(!sa.call(c,k)){if(l)break;c[k]=void 0}if(l&&!c[k])break;A=p(c[k]);d[h]=A(a);l=a.$watch(A,function(a){d[h]=a},A.literal);g.push(l);break;case "&":A=c.hasOwnProperty(k)?p(c[k]):B;if(A===B&&l)break;d[h]=function(b){return A(a,b)}}});return g.length&&function(){for(var a=0,b=g.length;a<b;++a)g[a]()}}
var V=/^\w/,ba=W.createElement("div"),na=function(a,b){if(b){var c=Object.keys(b),d,e,f;d=0;for(e=c.length;d<e;d++)f=c[d],this[f]=b[f]}else this.$attr={};this.$$element=a};na.prototype={$normalize:va,$addClass:function(a){a&&0<a.length&&z.addClass(this.$$element,a)},$removeClass:function(a){a&&0<a.length&&z.removeClass(this.$$element,a)},$updateClass:function(a,b){var c=bd(a,b);c&&c.length&&z.addClass(this.$$element,c);(c=bd(b,a))&&c.length&&z.removeClass(this.$$element,c)},$set:function(a,b,d,e){var f=
Tc(this.$$element[0],a),g=cd[a],h=a;f?(this.$$element.prop(a,b),e=f):g&&(this[g]=b,h=g);this[a]=b;e?this.$attr[a]=e:(e=this.$attr[a])||(this.$attr[a]=e=Bc(a,"-"));f=ra(this.$$element);if("a"===f&&("href"===a||"xlinkHref"===a)||"img"===f&&"src"===a)this[a]=b=A(b,"src"===a);else if("img"===f&&"srcset"===a){for(var f="",g=X(b),k=/(\s+\d+x\s*,|\s+\d+w\s*,|\s+,|,\s+)/,k=/\s/.test(g)?k:/(,)/,g=g.split(k),k=Math.floor(g.length/2),l=0;l<k;l++)var m=2*l,f=f+A(X(g[m]),!0),f=f+(" "+X(g[m+1]));g=X(g[2*l]).split(/\s/);
f+=A(X(g[0]),!0);2===g.length&&(f+=" "+X(g[1]));this[a]=b=f}!1!==d&&(null===b||x(b)?this.$$element.removeAttr(e):V.test(e)?this.$$element.attr(e,b):Q(this.$$element[0],e,b));(a=this.$$observers)&&n(a[h],function(a){try{a(b)}catch(d){c(d)}})},$observe:function(a,b){var c=this,d=c.$$observers||(c.$$observers=Z()),e=d[a]||(d[a]=[]);e.push(b);u.$evalAsync(function(){e.$$inter||!c.hasOwnProperty(a)||x(c[a])||b(c[a])});return function(){cb(e,b)}}};var ha=b.startSymbol(),da=b.endSymbol(),qa="{{"==ha&&"}}"==
da?ab:function(a){return a.replace(/\{\{/g,ha).replace(/}}/g,da)},pa=/^ngAttr[A-Z]/,ua=/^(.+)Start$/;M.$$addBindingInfo=m?function(a,b){var c=a.data("$binding")||[];L(b)?c=c.concat(b):c.push(b);a.data("$binding",c)}:B;M.$$addBindingClass=m?function(a){$(a,"ng-binding")}:B;M.$$addScopeInfo=m?function(a,b,c,d){a.data(c?d?"$isolateScopeNoTemplate":"$isolateScope":"$scope",b)}:B;M.$$addScopeClass=m?function(a,b){$(a,b?"ng-isolate-scope":"ng-scope")}:B;return M}]}function va(a){return gb(a.replace(Xc,
""))}function bd(a,b){var d="",c=a.split(/\s+/),e=b.split(/\s+/),f=0;a:for(;f<c.length;f++){for(var g=c[f],h=0;h<e.length;h++)if(g==e[h])continue a;d+=(0<d.length?" ":"")+g}return d}function Zc(a){a=C(a);var b=a.length;if(1>=b)return a;for(;b--;)8===a[b].nodeType&&ag.call(a,b,1);return a}function Wc(a,b){if(b&&F(b))return b;if(F(a)){var d=dd.exec(a);if(d)return d[3]}}function ff(){var a={},b=!1;this.register=function(b,c){Ta(b,"controller");E(b)?T(a,b):a[b]=c};this.allowGlobals=function(){b=!0};this.$get=
["$injector","$window",function(d,c){function e(a,b,c,d){if(!a||!E(a.$scope))throw H("$controller")("noscp",d,b);a.$scope[b]=c}return function(f,g,h,k){var l,m,r;h=!0===h;k&&F(k)&&(r=k);if(F(f)){k=f.match(dd);if(!k)throw bg("ctrlfmt",f);m=k[1];r=r||k[3];f=a.hasOwnProperty(m)?a[m]:Dc(g.$scope,m,!0)||(b?Dc(c,m,!0):v);Sa(f,m,!0)}if(h)return h=(L(f)?f[f.length-1]:f).prototype,l=Object.create(h||null),r&&e(g,r,l,m||f.name),T(function(){var a=d.invoke(f,l,g,m);a!==l&&(E(a)||D(a))&&(l=a,r&&e(g,r,l,m||f.name));
return l},{instance:l,identifier:r});l=d.instantiate(f,g,m);r&&e(g,r,l,m||f.name);return l}}]}function gf(){this.$get=["$window",function(a){return C(a.document)}]}function hf(){this.$get=["$log",function(a){return function(b,d){a.error.apply(a,arguments)}}]}function bc(a){return E(a)?V(a)?a.toISOString():eb(a):a}function nf(){this.$get=function(){return function(a){if(!a)return"";var b=[];rc(a,function(a,c){null===a||x(a)||(L(a)?n(a,function(a,d){b.push(ha(c)+"="+ha(bc(a)))}):b.push(ha(c)+"="+ha(bc(a))))});
return b.join("&")}}}function of(){this.$get=function(){return function(a){function b(a,e,f){null===a||x(a)||(L(a)?n(a,function(a,c){b(a,e+"["+(E(a)?c:"")+"]")}):E(a)&&!V(a)?rc(a,function(a,c){b(a,e+(f?"":"[")+c+(f?"":"]"))}):d.push(ha(e)+"="+ha(bc(a))))}if(!a)return"";var d=[];b(a,"",!0);return d.join("&")}}}function cc(a,b){if(F(a)){var d=a.replace(cg,"").trim();if(d){var c=b("Content-Type");(c=c&&0===c.indexOf(ed))||(c=(c=d.match(dg))&&eg[c[0]].test(d));c&&(a=wc(d))}}return a}function fd(a){var b=
Z(),d;F(a)?n(a.split("\n"),function(a){d=a.indexOf(":");var e=G(X(a.substr(0,d)));a=X(a.substr(d+1));e&&(b[e]=b[e]?b[e]+", "+a:a)}):E(a)&&n(a,function(a,d){var f=G(d),g=X(a);f&&(b[f]=b[f]?b[f]+", "+g:g)});return b}function gd(a){var b;return function(d){b||(b=fd(a));return d?(d=b[G(d)],void 0===d&&(d=null),d):b}}function hd(a,b,d,c){if(D(c))return c(a,b,d);n(c,function(c){a=c(a,b,d)});return a}function mf(){var a=this.defaults={transformResponse:[cc],transformRequest:[function(a){return E(a)&&"[object File]"!==
ga.call(a)&&"[object Blob]"!==ga.call(a)&&"[object FormData]"!==ga.call(a)?eb(a):a}],headers:{common:{Accept:"application/json, text/plain, */*"},post:na(dc),put:na(dc),patch:na(dc)},xsrfCookieName:"XSRF-TOKEN",xsrfHeaderName:"X-XSRF-TOKEN",paramSerializer:"$httpParamSerializer"},b=!1;this.useApplyAsync=function(a){return y(a)?(b=!!a,this):b};var d=!0;this.useLegacyPromiseExtensions=function(a){return y(a)?(d=!!a,this):d};var c=this.interceptors=[];this.$get=["$httpBackend","$$cookieReader","$cacheFactory",
"$rootScope","$q","$injector",function(e,f,g,h,k,l){function m(b){function c(a){var b=T({},a);b.data=hd(a.data,a.headers,a.status,f.transformResponse);a=a.status;return 200<=a&&300>a?b:k.reject(b)}function e(a,b){var c,d={};n(a,function(a,e){D(a)?(c=a(b),null!=c&&(d[e]=c)):d[e]=a});return d}if(!E(b))throw H("$http")("badreq",b);if(!F(b.url))throw H("$http")("badreq",b.url);var f=T({method:"get",transformRequest:a.transformRequest,transformResponse:a.transformResponse,paramSerializer:a.paramSerializer},
b);f.headers=function(b){var c=a.headers,d=T({},b.headers),f,g,h,c=T({},c.common,c[G(b.method)]);a:for(f in c){g=G(f);for(h in d)if(G(h)===g)continue a;d[f]=c[f]}return e(d,na(b))}(b);f.method=ub(f.method);f.paramSerializer=F(f.paramSerializer)?l.get(f.paramSerializer):f.paramSerializer;var g=[function(b){var d=b.headers,e=hd(b.data,gd(d),v,b.transformRequest);x(e)&&n(d,function(a,b){"content-type"===G(b)&&delete d[b]});x(b.withCredentials)&&!x(a.withCredentials)&&(b.withCredentials=a.withCredentials);
return r(b,e).then(c,c)},v],h=k.when(f);for(n(K,function(a){(a.request||a.requestError)&&g.unshift(a.request,a.requestError);(a.response||a.responseError)&&g.push(a.response,a.responseError)});g.length;){b=g.shift();var m=g.shift(),h=h.then(b,m)}d?(h.success=function(a){Sa(a,"fn");h.then(function(b){a(b.data,b.status,b.headers,f)});return h},h.error=function(a){Sa(a,"fn");h.then(null,function(b){a(b.data,b.status,b.headers,f)});return h}):(h.success=id("success"),h.error=id("error"));return h}function r(c,
d){function g(a,c,d,e){function f(){l(c,a,d,e)}K&&(200<=a&&300>a?K.put(S,[a,c,fd(d),e]):K.remove(S));b?h.$applyAsync(f):(f(),h.$$phase||h.$apply())}function l(a,b,d,e){b=-1<=b?b:0;(200<=b&&300>b?A.resolve:A.reject)({data:a,status:b,headers:gd(d),config:c,statusText:e})}function r(a){l(a.data,a.status,na(a.headers()),a.statusText)}function z(){var a=m.pendingRequests.indexOf(c);-1!==a&&m.pendingRequests.splice(a,1)}var A=k.defer(),Q=A.promise,K,M,P=c.headers,S=s(c.url,c.paramSerializer(c.params));
m.pendingRequests.push(c);Q.then(z,z);!c.cache&&!a.cache||!1===c.cache||"GET"!==c.method&&"JSONP"!==c.method||(K=E(c.cache)?c.cache:E(a.cache)?a.cache:I);K&&(M=K.get(S),y(M)?M&&D(M.then)?M.then(r,r):L(M)?l(M[1],M[0],na(M[2]),M[3]):l(M,200,{},"OK"):K.put(S,Q));x(M)&&((M=jd(c.url)?f()[c.xsrfCookieName||a.xsrfCookieName]:v)&&(P[c.xsrfHeaderName||a.xsrfHeaderName]=M),e(c.method,S,d,g,P,c.timeout,c.withCredentials,c.responseType));return Q}function s(a,b){0<b.length&&(a+=(-1==a.indexOf("?")?"?":"&")+b);
return a}var I=g("$http");a.paramSerializer=F(a.paramSerializer)?l.get(a.paramSerializer):a.paramSerializer;var K=[];n(c,function(a){K.unshift(F(a)?l.get(a):l.invoke(a))});m.pendingRequests=[];(function(a){n(arguments,function(a){m[a]=function(b,c){return m(T({},c||{},{method:a,url:b}))}})})("get","delete","head","jsonp");(function(a){n(arguments,function(a){m[a]=function(b,c,d){return m(T({},d||{},{method:a,url:b,data:c}))}})})("post","put","patch");m.defaults=a;return m}]}function qf(){this.$get=
function(){return function(){return new O.XMLHttpRequest}}}function pf(){this.$get=["$browser","$window","$document","$xhrFactory",function(a,b,d,c){return fg(a,c,a.defer,b.angular.callbacks,d[0])}]}function fg(a,b,d,c,e){function f(a,b,d){var f=e.createElement("script"),m=null;f.type="text/javascript";f.src=a;f.async=!0;m=function(a){f.removeEventListener("load",m,!1);f.removeEventListener("error",m,!1);e.body.removeChild(f);f=null;var g=-1,I="unknown";a&&("load"!==a.type||c[b].called||(a={type:"error"}),
I=a.type,g="error"===a.type?404:200);d&&d(g,I)};f.addEventListener("load",m,!1);f.addEventListener("error",m,!1);e.body.appendChild(f);return m}return function(e,h,k,l,m,r,s,I){function K(){w&&w();u&&u.abort()}function t(b,c,e,f,g){y(z)&&d.cancel(z);w=u=null;b(c,e,f,g);a.$$completeOutstandingRequest(B)}a.$$incOutstandingRequestCount();h=h||a.url();if("jsonp"==G(e)){var p="_"+(c.counter++).toString(36);c[p]=function(a){c[p].data=a;c[p].called=!0};var w=f(h.replace("JSON_CALLBACK","angular.callbacks."+
p),p,function(a,b){t(l,a,c[p].data,"",b);c[p]=B})}else{var u=b(e,h);u.open(e,h,!0);n(m,function(a,b){y(a)&&u.setRequestHeader(b,a)});u.onload=function(){var a=u.statusText||"",b="response"in u?u.response:u.responseText,c=1223===u.status?204:u.status;0===c&&(c=b?200:"file"==za(h).protocol?404:0);t(l,c,b,u.getAllResponseHeaders(),a)};e=function(){t(l,-1,null,null,"")};u.onerror=e;u.onabort=e;s&&(u.withCredentials=!0);if(I)try{u.responseType=I}catch(la){if("json"!==I)throw la;}u.send(x(k)?null:k)}if(0<
r)var z=d(K,r);else r&&D(r.then)&&r.then(K)}}function kf(){var a="{{",b="}}";this.startSymbol=function(b){return b?(a=b,this):a};this.endSymbol=function(a){return a?(b=a,this):b};this.$get=["$parse","$exceptionHandler","$sce",function(d,c,e){function f(a){return"\\\\\\"+a}function g(c){return c.replace(r,a).replace(s,b)}function h(a,b,c,d){var e;return e=a.$watch(function(a){e();return d(a)},b,c)}function k(f,k,r,p){function s(a){try{var b=a;a=r?e.getTrusted(r,b):e.valueOf(b);var d;if(p&&!y(a))d=
a;else if(null==a)d="";else{switch(typeof a){case "string":break;case "number":a=""+a;break;default:a=eb(a)}d=a}return d}catch(g){c(Ka.interr(f,g))}}if(!f.length||-1===f.indexOf(a)){var u;k||(k=g(f),u=ba(k),u.exp=f,u.expressions=[],u.$$watchDelegate=h);return u}p=!!p;var n,z,A=0,Q=[],$=[];u=f.length;for(var M=[],P=[];A<u;)if(-1!=(n=f.indexOf(a,A))&&-1!=(z=f.indexOf(b,n+l)))A!==n&&M.push(g(f.substring(A,n))),A=f.substring(n+l,z),Q.push(A),$.push(d(A,s)),A=z+m,P.push(M.length),M.push("");else{A!==u&&
M.push(g(f.substring(A)));break}r&&1<M.length&&Ka.throwNoconcat(f);if(!k||Q.length){var S=function(a){for(var b=0,c=Q.length;b<c;b++){if(p&&x(a[b]))return;M[P[b]]=a[b]}return M.join("")};return T(function(a){var b=0,d=Q.length,e=Array(d);try{for(;b<d;b++)e[b]=$[b](a);return S(e)}catch(g){c(Ka.interr(f,g))}},{exp:f,expressions:Q,$$watchDelegate:function(a,b){var c;return a.$watchGroup($,function(d,e){var f=S(d);D(b)&&b.call(this,f,d!==e?c:f,a);c=f})}})}}var l=a.length,m=b.length,r=new RegExp(a.replace(/./g,
f),"g"),s=new RegExp(b.replace(/./g,f),"g");k.startSymbol=function(){return a};k.endSymbol=function(){return b};return k}]}function lf(){this.$get=["$rootScope","$window","$q","$$q","$browser",function(a,b,d,c,e){function f(f,k,l,m){function r(){s?f.apply(null,I):f(p)}var s=4<arguments.length,I=s?wa.call(arguments,4):[],K=b.setInterval,t=b.clearInterval,p=0,w=y(m)&&!m,u=(w?c:d).defer(),n=u.promise;l=y(l)?l:0;n.$$intervalId=K(function(){w?e.defer(r):a.$evalAsync(r);u.notify(p++);0<l&&p>=l&&(u.resolve(p),
t(n.$$intervalId),delete g[n.$$intervalId]);w||a.$apply()},k);g[n.$$intervalId]=u;return n}var g={};f.cancel=function(a){return a&&a.$$intervalId in g?(g[a.$$intervalId].reject("canceled"),b.clearInterval(a.$$intervalId),delete g[a.$$intervalId],!0):!1};return f}]}function ec(a){a=a.split("/");for(var b=a.length;b--;)a[b]=qb(a[b]);return a.join("/")}function kd(a,b){var d=za(a);b.$$protocol=d.protocol;b.$$host=d.hostname;b.$$port=ca(d.port)||gg[d.protocol]||null}function ld(a,b){var d="/"!==a.charAt(0);
d&&(a="/"+a);var c=za(a);b.$$path=decodeURIComponent(d&&"/"===c.pathname.charAt(0)?c.pathname.substring(1):c.pathname);b.$$search=zc(c.search);b.$$hash=decodeURIComponent(c.hash);b.$$path&&"/"!=b.$$path.charAt(0)&&(b.$$path="/"+b.$$path)}function pa(a,b){if(0===b.indexOf(a))return b.substr(a.length)}function Ia(a){var b=a.indexOf("#");return-1==b?a:a.substr(0,b)}function kb(a){return a.replace(/(#.+)|#$/,"$1")}function fc(a,b,d){this.$$html5=!0;d=d||"";kd(a,this);this.$$parse=function(a){var d=pa(b,
a);if(!F(d))throw Gb("ipthprfx",a,b);ld(d,this);this.$$path||(this.$$path="/");this.$$compose()};this.$$compose=function(){var a=Ub(this.$$search),d=this.$$hash?"#"+qb(this.$$hash):"";this.$$url=ec(this.$$path)+(a?"?"+a:"")+d;this.$$absUrl=b+this.$$url.substr(1)};this.$$parseLinkUrl=function(c,e){if(e&&"#"===e[0])return this.hash(e.slice(1)),!0;var f,g;y(f=pa(a,c))?(g=f,g=y(f=pa(d,f))?b+(pa("/",f)||f):a+g):y(f=pa(b,c))?g=b+f:b==c+"/"&&(g=b);g&&this.$$parse(g);return!!g}}function gc(a,b,d){kd(a,this);
this.$$parse=function(c){var e=pa(a,c)||pa(b,c),f;x(e)||"#"!==e.charAt(0)?this.$$html5?f=e:(f="",x(e)&&(a=c,this.replace())):(f=pa(d,e),x(f)&&(f=e));ld(f,this);c=this.$$path;var e=a,g=/^\/[A-Z]:(\/.*)/;0===f.indexOf(e)&&(f=f.replace(e,""));g.exec(f)||(c=(f=g.exec(c))?f[1]:c);this.$$path=c;this.$$compose()};this.$$compose=function(){var b=Ub(this.$$search),e=this.$$hash?"#"+qb(this.$$hash):"";this.$$url=ec(this.$$path)+(b?"?"+b:"")+e;this.$$absUrl=a+(this.$$url?d+this.$$url:"")};this.$$parseLinkUrl=
function(b,d){return Ia(a)==Ia(b)?(this.$$parse(b),!0):!1}}function md(a,b,d){this.$$html5=!0;gc.apply(this,arguments);this.$$parseLinkUrl=function(c,e){if(e&&"#"===e[0])return this.hash(e.slice(1)),!0;var f,g;a==Ia(c)?f=c:(g=pa(b,c))?f=a+d+g:b===c+"/"&&(f=b);f&&this.$$parse(f);return!!f};this.$$compose=function(){var b=Ub(this.$$search),e=this.$$hash?"#"+qb(this.$$hash):"";this.$$url=ec(this.$$path)+(b?"?"+b:"")+e;this.$$absUrl=a+d+this.$$url}}function Hb(a){return function(){return this[a]}}function nd(a,
b){return function(d){if(x(d))return this[a];this[a]=b(d);this.$$compose();return this}}function rf(){var a="",b={enabled:!1,requireBase:!0,rewriteLinks:!0};this.hashPrefix=function(b){return y(b)?(a=b,this):a};this.html5Mode=function(a){return Na(a)?(b.enabled=a,this):E(a)?(Na(a.enabled)&&(b.enabled=a.enabled),Na(a.requireBase)&&(b.requireBase=a.requireBase),Na(a.rewriteLinks)&&(b.rewriteLinks=a.rewriteLinks),this):b};this.$get=["$rootScope","$browser","$sniffer","$rootElement","$window",function(d,
c,e,f,g){function h(a,b,d){var e=l.url(),f=l.$$state;try{c.url(a,b,d),l.$$state=c.state()}catch(g){throw l.url(e),l.$$state=f,g;}}function k(a,b){d.$broadcast("$locationChangeSuccess",l.absUrl(),a,l.$$state,b)}var l,m;m=c.baseHref();var r=c.url(),s;if(b.enabled){if(!m&&b.requireBase)throw Gb("nobase");s=r.substring(0,r.indexOf("/",r.indexOf("//")+2))+(m||"/");m=e.history?fc:md}else s=Ia(r),m=gc;var I=s.substr(0,Ia(s).lastIndexOf("/")+1);l=new m(s,I,"#"+a);l.$$parseLinkUrl(r,r);l.$$state=c.state();
var n=/^\s*(javascript|mailto):/i;f.on("click",function(a){if(b.rewriteLinks&&!a.ctrlKey&&!a.metaKey&&!a.shiftKey&&2!=a.which&&2!=a.button){for(var e=C(a.target);"a"!==ra(e[0]);)if(e[0]===f[0]||!(e=e.parent())[0])return;var h=e.prop("href"),k=e.attr("href")||e.attr("xlink:href");E(h)&&"[object SVGAnimatedString]"===h.toString()&&(h=za(h.animVal).href);n.test(h)||!h||e.attr("target")||a.isDefaultPrevented()||!l.$$parseLinkUrl(h,k)||(a.preventDefault(),l.absUrl()!=c.url()&&(d.$apply(),g.angular["ff-684208-preventDefault"]=
!0))}});kb(l.absUrl())!=kb(r)&&c.url(l.absUrl(),!0);var t=!0;c.onUrlChange(function(a,b){x(pa(I,a))?g.location.href=a:(d.$evalAsync(function(){var c=l.absUrl(),e=l.$$state,f;a=kb(a);l.$$parse(a);l.$$state=b;f=d.$broadcast("$locationChangeStart",a,c,b,e).defaultPrevented;l.absUrl()===a&&(f?(l.$$parse(c),l.$$state=e,h(c,!1,e)):(t=!1,k(c,e)))}),d.$$phase||d.$digest())});d.$watch(function(){var a=kb(c.url()),b=kb(l.absUrl()),f=c.state(),g=l.$$replace,m=a!==b||l.$$html5&&e.history&&f!==l.$$state;if(t||
m)t=!1,d.$evalAsync(function(){var b=l.absUrl(),c=d.$broadcast("$locationChangeStart",b,a,l.$$state,f).defaultPrevented;l.absUrl()===b&&(c?(l.$$parse(a),l.$$state=f):(m&&h(b,g,f===l.$$state?null:l.$$state),k(a,f)))});l.$$replace=!1});return l}]}function sf(){var a=!0,b=this;this.debugEnabled=function(b){return y(b)?(a=b,this):a};this.$get=["$window",function(d){function c(a){a instanceof Error&&(a.stack?a=a.message&&-1===a.stack.indexOf(a.message)?"Error: "+a.message+"\n"+a.stack:a.stack:a.sourceURL&&
(a=a.message+"\n"+a.sourceURL+":"+a.line));return a}function e(a){var b=d.console||{},e=b[a]||b.log||B;a=!1;try{a=!!e.apply}catch(k){}return a?function(){var a=[];n(arguments,function(b){a.push(c(b))});return e.apply(b,a)}:function(a,b){e(a,null==b?"":b)}}return{log:e("log"),info:e("info"),warn:e("warn"),error:e("error"),debug:function(){var c=e("debug");return function(){a&&c.apply(b,arguments)}}()}}]}function Xa(a,b){if("__defineGetter__"===a||"__defineSetter__"===a||"__lookupGetter__"===a||"__lookupSetter__"===
a||"__proto__"===a)throw ka("isecfld",b);return a}function hg(a){return a+""}function Aa(a,b){if(a){if(a.constructor===a)throw ka("isecfn",b);if(a.window===a)throw ka("isecwindow",b);if(a.children&&(a.nodeName||a.prop&&a.attr&&a.find))throw ka("isecdom",b);if(a===Object)throw ka("isecobj",b);}return a}function od(a,b){if(a){if(a.constructor===a)throw ka("isecfn",b);if(a===ig||a===jg||a===kg)throw ka("isecff",b);}}function Ib(a,b){if(a&&(a===(0).constructor||a===(!1).constructor||a==="".constructor||
a==={}.constructor||a===[].constructor||a===Function.constructor))throw ka("isecaf",b);}function lg(a,b){return"undefined"!==typeof a?a:b}function pd(a,b){return"undefined"===typeof a?b:"undefined"===typeof b?a:a+b}function R(a,b){var d,c;switch(a.type){case q.Program:d=!0;n(a.body,function(a){R(a.expression,b);d=d&&a.expression.constant});a.constant=d;break;case q.Literal:a.constant=!0;a.toWatch=[];break;case q.UnaryExpression:R(a.argument,b);a.constant=a.argument.constant;a.toWatch=a.argument.toWatch;
break;case q.BinaryExpression:R(a.left,b);R(a.right,b);a.constant=a.left.constant&&a.right.constant;a.toWatch=a.left.toWatch.concat(a.right.toWatch);break;case q.LogicalExpression:R(a.left,b);R(a.right,b);a.constant=a.left.constant&&a.right.constant;a.toWatch=a.constant?[]:[a];break;case q.ConditionalExpression:R(a.test,b);R(a.alternate,b);R(a.consequent,b);a.constant=a.test.constant&&a.alternate.constant&&a.consequent.constant;a.toWatch=a.constant?[]:[a];break;case q.Identifier:a.constant=!1;a.toWatch=
[a];break;case q.MemberExpression:R(a.object,b);a.computed&&R(a.property,b);a.constant=a.object.constant&&(!a.computed||a.property.constant);a.toWatch=[a];break;case q.CallExpression:d=a.filter?!b(a.callee.name).$stateful:!1;c=[];n(a.arguments,function(a){R(a,b);d=d&&a.constant;a.constant||c.push.apply(c,a.toWatch)});a.constant=d;a.toWatch=a.filter&&!b(a.callee.name).$stateful?c:[a];break;case q.AssignmentExpression:R(a.left,b);R(a.right,b);a.constant=a.left.constant&&a.right.constant;a.toWatch=[a];
break;case q.ArrayExpression:d=!0;c=[];n(a.elements,function(a){R(a,b);d=d&&a.constant;a.constant||c.push.apply(c,a.toWatch)});a.constant=d;a.toWatch=c;break;case q.ObjectExpression:d=!0;c=[];n(a.properties,function(a){R(a.value,b);d=d&&a.value.constant;a.value.constant||c.push.apply(c,a.value.toWatch)});a.constant=d;a.toWatch=c;break;case q.ThisExpression:a.constant=!1;a.toWatch=[];break;case q.LocalsExpression:a.constant=!1,a.toWatch=[]}}function qd(a){if(1==a.length){a=a[0].expression;var b=a.toWatch;
return 1!==b.length?b:b[0]!==a?b:v}}function rd(a){return a.type===q.Identifier||a.type===q.MemberExpression}function sd(a){if(1===a.body.length&&rd(a.body[0].expression))return{type:q.AssignmentExpression,left:a.body[0].expression,right:{type:q.NGValueParameter},operator:"="}}function td(a){return 0===a.body.length||1===a.body.length&&(a.body[0].expression.type===q.Literal||a.body[0].expression.type===q.ArrayExpression||a.body[0].expression.type===q.ObjectExpression)}function ud(a,b){this.astBuilder=
a;this.$filter=b}function vd(a,b){this.astBuilder=a;this.$filter=b}function Jb(a){return"constructor"==a}function hc(a){return D(a.valueOf)?a.valueOf():mg.call(a)}function tf(){var a=Z(),b=Z();this.$get=["$filter",function(d){function c(c,f,r){var u,n,z;r=r||K;switch(typeof c){case "string":z=c=c.trim();var A=r?b:a;u=A[z];if(!u){":"===c.charAt(0)&&":"===c.charAt(1)&&(n=!0,c=c.substring(2));u=r?I:s;var Q=new ic(u);u=(new jc(Q,d,u)).parse(c);u.constant?u.$$watchDelegate=l:n?u.$$watchDelegate=u.literal?
k:h:u.inputs&&(u.$$watchDelegate=g);r&&(u=e(u));A[z]=u}return m(u,f);case "function":return m(c,f);default:return m(B,f)}}function e(a){function b(c,d,e,f){var g=K;K=!0;try{return a(c,d,e,f)}finally{K=g}}if(!a)return a;b.$$watchDelegate=a.$$watchDelegate;b.assign=e(a.assign);b.constant=a.constant;b.literal=a.literal;for(var c=0;a.inputs&&c<a.inputs.length;++c)a.inputs[c]=e(a.inputs[c]);b.inputs=a.inputs;return b}function f(a,b){return null==a||null==b?a===b:"object"===typeof a&&(a=hc(a),"object"===
typeof a)?!1:a===b||a!==a&&b!==b}function g(a,b,c,d,e){var g=d.inputs,h;if(1===g.length){var k=f,g=g[0];return a.$watch(function(a){var b=g(a);f(b,k)||(h=d(a,v,v,[b]),k=b&&hc(b));return h},b,c,e)}for(var l=[],m=[],r=0,s=g.length;r<s;r++)l[r]=f,m[r]=null;return a.$watch(function(a){for(var b=!1,c=0,e=g.length;c<e;c++){var k=g[c](a);if(b||(b=!f(k,l[c])))m[c]=k,l[c]=k&&hc(k)}b&&(h=d(a,v,v,m));return h},b,c,e)}function h(a,b,c,d){var e,f;return e=a.$watch(function(a){return d(a)},function(a,c,d){f=a;
D(b)&&b.apply(this,arguments);y(a)&&d.$$postDigest(function(){y(f)&&e()})},c)}function k(a,b,c,d){function e(a){var b=!0;n(a,function(a){y(a)||(b=!1)});return b}var f,g;return f=a.$watch(function(a){return d(a)},function(a,c,d){g=a;D(b)&&b.call(this,a,c,d);e(a)&&d.$$postDigest(function(){e(g)&&f()})},c)}function l(a,b,c,d){var e;return e=a.$watch(function(a){e();return d(a)},b,c)}function m(a,b){if(!b)return a;var c=a.$$watchDelegate,d=!1,c=c!==k&&c!==h?function(c,e,f,g){f=d&&g?g[0]:a(c,e,f,g);return b(f,
c,e)}:function(c,d,e,f){e=a(c,d,e,f);c=b(e,c,d);return y(e)?c:e};a.$$watchDelegate&&a.$$watchDelegate!==g?c.$$watchDelegate=a.$$watchDelegate:b.$stateful||(c.$$watchDelegate=g,d=!a.inputs,c.inputs=a.inputs?a.inputs:[a]);return c}var r=Ea().noUnsafeEval,s={csp:r,expensiveChecks:!1},I={csp:r,expensiveChecks:!0},K=!1;c.$$runningExpensiveChecks=function(){return K};return c}]}function vf(){this.$get=["$rootScope","$exceptionHandler",function(a,b){return wd(function(b){a.$evalAsync(b)},b)}]}function wf(){this.$get=
["$browser","$exceptionHandler",function(a,b){return wd(function(b){a.defer(b)},b)}]}function wd(a,b){function d(){this.$$state={status:0}}function c(a,b){return function(c){b.call(a,c)}}function e(c){!c.processScheduled&&c.pending&&(c.processScheduled=!0,a(function(){var a,d,e;e=c.pending;c.processScheduled=!1;c.pending=v;for(var f=0,g=e.length;f<g;++f){d=e[f][0];a=e[f][c.status];try{D(a)?d.resolve(a(c.value)):1===c.status?d.resolve(c.value):d.reject(c.value)}catch(h){d.reject(h),b(h)}}}))}function f(){this.promise=
new d}var g=H("$q",TypeError);T(d.prototype,{then:function(a,b,c){if(x(a)&&x(b)&&x(c))return this;var d=new f;this.$$state.pending=this.$$state.pending||[];this.$$state.pending.push([d,a,b,c]);0<this.$$state.status&&e(this.$$state);return d.promise},"catch":function(a){return this.then(null,a)},"finally":function(a,b){return this.then(function(b){return k(b,!0,a)},function(b){return k(b,!1,a)},b)}});T(f.prototype,{resolve:function(a){this.promise.$$state.status||(a===this.promise?this.$$reject(g("qcycle",
a)):this.$$resolve(a))},$$resolve:function(a){function d(a){k||(k=!0,h.$$resolve(a))}function f(a){k||(k=!0,h.$$reject(a))}var g,h=this,k=!1;try{if(E(a)||D(a))g=a&&a.then;D(g)?(this.promise.$$state.status=-1,g.call(a,d,f,c(this,this.notify))):(this.promise.$$state.value=a,this.promise.$$state.status=1,e(this.promise.$$state))}catch(l){f(l),b(l)}},reject:function(a){this.promise.$$state.status||this.$$reject(a)},$$reject:function(a){this.promise.$$state.value=a;this.promise.$$state.status=2;e(this.promise.$$state)},
notify:function(c){var d=this.promise.$$state.pending;0>=this.promise.$$state.status&&d&&d.length&&a(function(){for(var a,e,f=0,g=d.length;f<g;f++){e=d[f][0];a=d[f][3];try{e.notify(D(a)?a(c):c)}catch(h){b(h)}}})}});var h=function(a,b){var c=new f;b?c.resolve(a):c.reject(a);return c.promise},k=function(a,b,c){var d=null;try{D(c)&&(d=c())}catch(e){return h(e,!1)}return d&&D(d.then)?d.then(function(){return h(a,b)},function(a){return h(a,!1)}):h(a,b)},l=function(a,b,c,d){var e=new f;e.resolve(a);return e.promise.then(b,
c,d)},m=function(a){if(!D(a))throw g("norslvr",a);var b=new f;a(function(a){b.resolve(a)},function(a){b.reject(a)});return b.promise};m.prototype=d.prototype;m.defer=function(){var a=new f;a.resolve=c(a,a.resolve);a.reject=c(a,a.reject);a.notify=c(a,a.notify);return a};m.reject=function(a){var b=new f;b.reject(a);return b.promise};m.when=l;m.resolve=l;m.all=function(a){var b=new f,c=0,d=L(a)?[]:{};n(a,function(a,e){c++;l(a).then(function(a){d.hasOwnProperty(e)||(d[e]=a,--c||b.resolve(d))},function(a){d.hasOwnProperty(e)||
b.reject(a)})});0===c&&b.resolve(d);return b.promise};return m}function Ff(){this.$get=["$window","$timeout",function(a,b){var d=a.requestAnimationFrame||a.webkitRequestAnimationFrame,c=a.cancelAnimationFrame||a.webkitCancelAnimationFrame||a.webkitCancelRequestAnimationFrame,e=!!d,f=e?function(a){var b=d(a);return function(){c(b)}}:function(a){var c=b(a,16.66,!1);return function(){b.cancel(c)}};f.supported=e;return f}]}function uf(){function a(a){function b(){this.$$watchers=this.$$nextSibling=this.$$childHead=
this.$$childTail=null;this.$$listeners={};this.$$listenerCount={};this.$$watchersCount=0;this.$id=++pb;this.$$ChildScope=null}b.prototype=a;return b}var b=10,d=H("$rootScope"),c=null,e=null;this.digestTtl=function(a){arguments.length&&(b=a);return b};this.$get=["$exceptionHandler","$parse","$browser",function(f,g,h){function k(a){a.currentScope.$$destroyed=!0}function l(a){9===xa&&(a.$$childHead&&l(a.$$childHead),a.$$nextSibling&&l(a.$$nextSibling));a.$parent=a.$$nextSibling=a.$$prevSibling=a.$$childHead=
a.$$childTail=a.$root=a.$$watchers=null}function m(){this.$id=++pb;this.$$phase=this.$parent=this.$$watchers=this.$$nextSibling=this.$$prevSibling=this.$$childHead=this.$$childTail=null;this.$root=this;this.$$destroyed=!1;this.$$listeners={};this.$$listenerCount={};this.$$watchersCount=0;this.$$isolateBindings=null}function r(a){if(w.$$phase)throw d("inprog",w.$$phase);w.$$phase=a}function s(a,b){do a.$$watchersCount+=b;while(a=a.$parent)}function I(a,b,c){do a.$$listenerCount[c]-=b,0===a.$$listenerCount[c]&&
delete a.$$listenerCount[c];while(a=a.$parent)}function q(){}function t(){for(;z.length;)try{z.shift()()}catch(a){f(a)}e=null}function p(){null===e&&(e=h.defer(function(){w.$apply(t)}))}m.prototype={constructor:m,$new:function(b,c){var d;c=c||this;b?(d=new m,d.$root=this.$root):(this.$$ChildScope||(this.$$ChildScope=a(this)),d=new this.$$ChildScope);d.$parent=c;d.$$prevSibling=c.$$childTail;c.$$childHead?(c.$$childTail.$$nextSibling=d,c.$$childTail=d):c.$$childHead=c.$$childTail=d;(b||c!=this)&&d.$on("$destroy",
k);return d},$watch:function(a,b,d,e){var f=g(a);if(f.$$watchDelegate)return f.$$watchDelegate(this,b,d,f,a);var h=this,k=h.$$watchers,l={fn:b,last:q,get:f,exp:e||a,eq:!!d};c=null;D(b)||(l.fn=B);k||(k=h.$$watchers=[]);k.unshift(l);s(this,1);return function(){0<=cb(k,l)&&s(h,-1);c=null}},$watchGroup:function(a,b){function c(){h=!1;k?(k=!1,b(e,e,g)):b(e,d,g)}var d=Array(a.length),e=Array(a.length),f=[],g=this,h=!1,k=!0;if(!a.length){var l=!0;g.$evalAsync(function(){l&&b(e,e,g)});return function(){l=
!1}}if(1===a.length)return this.$watch(a[0],function(a,c,f){e[0]=a;d[0]=c;b(e,a===c?e:d,f)});n(a,function(a,b){var k=g.$watch(a,function(a,f){e[b]=a;d[b]=f;h||(h=!0,g.$evalAsync(c))});f.push(k)});return function(){for(;f.length;)f.shift()()}},$watchCollection:function(a,b){function c(a){e=a;var b,d,g,h;if(!x(e)){if(E(e))if(Ca(e))for(f!==r&&(f=r,u=f.length=0,l++),a=e.length,u!==a&&(l++,f.length=u=a),b=0;b<a;b++)h=f[b],g=e[b],d=h!==h&&g!==g,d||h===g||(l++,f[b]=g);else{f!==s&&(f=s={},u=0,l++);a=0;for(b in e)sa.call(e,
b)&&(a++,g=e[b],h=f[b],b in f?(d=h!==h&&g!==g,d||h===g||(l++,f[b]=g)):(u++,f[b]=g,l++));if(u>a)for(b in l++,f)sa.call(e,b)||(u--,delete f[b])}else f!==e&&(f=e,l++);return l}}c.$stateful=!0;var d=this,e,f,h,k=1<b.length,l=0,m=g(a,c),r=[],s={},p=!0,u=0;return this.$watch(m,function(){p?(p=!1,b(e,e,d)):b(e,h,d);if(k)if(E(e))if(Ca(e)){h=Array(e.length);for(var a=0;a<e.length;a++)h[a]=e[a]}else for(a in h={},e)sa.call(e,a)&&(h[a]=e[a]);else h=e})},$digest:function(){var a,g,k,l,m,s,p,n,I=b,z,y=[],x,C;
r("$digest");h.$$checkUrlChange();this===w&&null!==e&&(h.defer.cancel(e),t());c=null;do{n=!1;for(z=this;u.length;){try{C=u.shift(),C.scope.$eval(C.expression,C.locals)}catch(B){f(B)}c=null}a:do{if(s=z.$$watchers)for(p=s.length;p--;)try{if(a=s[p])if(m=a.get,(g=m(z))!==(k=a.last)&&!(a.eq?oa(g,k):"number"===typeof g&&"number"===typeof k&&isNaN(g)&&isNaN(k)))n=!0,c=a,a.last=a.eq?Oa(g,null):g,l=a.fn,l(g,k===q?g:k,z),5>I&&(x=4-I,y[x]||(y[x]=[]),y[x].push({msg:D(a.exp)?"fn: "+(a.exp.name||a.exp.toString()):
a.exp,newVal:g,oldVal:k}));else if(a===c){n=!1;break a}}catch(E){f(E)}if(!(s=z.$$watchersCount&&z.$$childHead||z!==this&&z.$$nextSibling))for(;z!==this&&!(s=z.$$nextSibling);)z=z.$parent}while(z=s);if((n||u.length)&&!I--)throw w.$$phase=null,d("infdig",b,y);}while(n||u.length);for(w.$$phase=null;v.length;)try{v.shift()()}catch(H){f(H)}},$destroy:function(){if(!this.$$destroyed){var a=this.$parent;this.$broadcast("$destroy");this.$$destroyed=!0;this===w&&h.$$applicationDestroyed();s(this,-this.$$watchersCount);
for(var b in this.$$listenerCount)I(this,this.$$listenerCount[b],b);a&&a.$$childHead==this&&(a.$$childHead=this.$$nextSibling);a&&a.$$childTail==this&&(a.$$childTail=this.$$prevSibling);this.$$prevSibling&&(this.$$prevSibling.$$nextSibling=this.$$nextSibling);this.$$nextSibling&&(this.$$nextSibling.$$prevSibling=this.$$prevSibling);this.$destroy=this.$digest=this.$apply=this.$evalAsync=this.$applyAsync=B;this.$on=this.$watch=this.$watchGroup=function(){return B};this.$$listeners={};this.$$nextSibling=
null;l(this)}},$eval:function(a,b){return g(a)(this,b)},$evalAsync:function(a,b){w.$$phase||u.length||h.defer(function(){u.length&&w.$digest()});u.push({scope:this,expression:g(a),locals:b})},$$postDigest:function(a){v.push(a)},$apply:function(a){try{r("$apply");try{return this.$eval(a)}finally{w.$$phase=null}}catch(b){f(b)}finally{try{w.$digest()}catch(c){throw f(c),c;}}},$applyAsync:function(a){function b(){c.$eval(a)}var c=this;a&&z.push(b);a=g(a);p()},$on:function(a,b){var c=this.$$listeners[a];
c||(this.$$listeners[a]=c=[]);c.push(b);var d=this;do d.$$listenerCount[a]||(d.$$listenerCount[a]=0),d.$$listenerCount[a]++;while(d=d.$parent);var e=this;return function(){var d=c.indexOf(b);-1!==d&&(c[d]=null,I(e,1,a))}},$emit:function(a,b){var c=[],d,e=this,g=!1,h={name:a,targetScope:e,stopPropagation:function(){g=!0},preventDefault:function(){h.defaultPrevented=!0},defaultPrevented:!1},k=db([h],arguments,1),l,m;do{d=e.$$listeners[a]||c;h.currentScope=e;l=0;for(m=d.length;l<m;l++)if(d[l])try{d[l].apply(null,
k)}catch(r){f(r)}else d.splice(l,1),l--,m--;if(g)return h.currentScope=null,h;e=e.$parent}while(e);h.currentScope=null;return h},$broadcast:function(a,b){var c=this,d=this,e={name:a,targetScope:this,preventDefault:function(){e.defaultPrevented=!0},defaultPrevented:!1};if(!this.$$listenerCount[a])return e;for(var g=db([e],arguments,1),h,k;c=d;){e.currentScope=c;d=c.$$listeners[a]||[];h=0;for(k=d.length;h<k;h++)if(d[h])try{d[h].apply(null,g)}catch(l){f(l)}else d.splice(h,1),h--,k--;if(!(d=c.$$listenerCount[a]&&
c.$$childHead||c!==this&&c.$$nextSibling))for(;c!==this&&!(d=c.$$nextSibling);)c=c.$parent}e.currentScope=null;return e}};var w=new m,u=w.$$asyncQueue=[],v=w.$$postDigestQueue=[],z=w.$$applyAsyncQueue=[];return w}]}function ne(){var a=/^\s*(https?|ftp|mailto|tel|file):/,b=/^\s*((https?|ftp|file|blob):|data:image\/)/;this.aHrefSanitizationWhitelist=function(b){return y(b)?(a=b,this):a};this.imgSrcSanitizationWhitelist=function(a){return y(a)?(b=a,this):b};this.$get=function(){return function(d,c){var e=
c?b:a,f;f=za(d).href;return""===f||f.match(e)?d:"unsafe:"+f}}}function ng(a){if("self"===a)return a;if(F(a)){if(-1<a.indexOf("***"))throw Ba("iwcard",a);a=xd(a).replace("\\*\\*",".*").replace("\\*","[^:/.?&;]*");return new RegExp("^"+a+"$")}if($a(a))return new RegExp("^"+a.source+"$");throw Ba("imatcher");}function yd(a){var b=[];y(a)&&n(a,function(a){b.push(ng(a))});return b}function yf(){this.SCE_CONTEXTS=qa;var a=["self"],b=[];this.resourceUrlWhitelist=function(b){arguments.length&&(a=yd(b));return a};
this.resourceUrlBlacklist=function(a){arguments.length&&(b=yd(a));return b};this.$get=["$injector",function(d){function c(a,b){return"self"===a?jd(b):!!a.exec(b.href)}function e(a){var b=function(a){this.$$unwrapTrustedValue=function(){return a}};a&&(b.prototype=new a);b.prototype.valueOf=function(){return this.$$unwrapTrustedValue()};b.prototype.toString=function(){return this.$$unwrapTrustedValue().toString()};return b}var f=function(a){throw Ba("unsafe");};d.has("$sanitize")&&(f=d.get("$sanitize"));
var g=e(),h={};h[qa.HTML]=e(g);h[qa.CSS]=e(g);h[qa.URL]=e(g);h[qa.JS]=e(g);h[qa.RESOURCE_URL]=e(h[qa.URL]);return{trustAs:function(a,b){var c=h.hasOwnProperty(a)?h[a]:null;if(!c)throw Ba("icontext",a,b);if(null===b||x(b)||""===b)return b;if("string"!==typeof b)throw Ba("itype",a);return new c(b)},getTrusted:function(d,e){if(null===e||x(e)||""===e)return e;var g=h.hasOwnProperty(d)?h[d]:null;if(g&&e instanceof g)return e.$$unwrapTrustedValue();if(d===qa.RESOURCE_URL){var g=za(e.toString()),r,s,n=!1;
r=0;for(s=a.length;r<s;r++)if(c(a[r],g)){n=!0;break}if(n)for(r=0,s=b.length;r<s;r++)if(c(b[r],g)){n=!1;break}if(n)return e;throw Ba("insecurl",e.toString());}if(d===qa.HTML)return f(e);throw Ba("unsafe");},valueOf:function(a){return a instanceof g?a.$$unwrapTrustedValue():a}}}]}function xf(){var a=!0;this.enabled=function(b){arguments.length&&(a=!!b);return a};this.$get=["$parse","$sceDelegate",function(b,d){if(a&&8>xa)throw Ba("iequirks");var c=na(qa);c.isEnabled=function(){return a};c.trustAs=d.trustAs;
c.getTrusted=d.getTrusted;c.valueOf=d.valueOf;a||(c.trustAs=c.getTrusted=function(a,b){return b},c.valueOf=ab);c.parseAs=function(a,d){var e=b(d);return e.literal&&e.constant?e:b(d,function(b){return c.getTrusted(a,b)})};var e=c.parseAs,f=c.getTrusted,g=c.trustAs;n(qa,function(a,b){var d=G(b);c[gb("parse_as_"+d)]=function(b){return e(a,b)};c[gb("get_trusted_"+d)]=function(b){return f(a,b)};c[gb("trust_as_"+d)]=function(b){return g(a,b)}});return c}]}function zf(){this.$get=["$window","$document",
function(a,b){var d={},c=ca((/android (\d+)/.exec(G((a.navigator||{}).userAgent))||[])[1]),e=/Boxee/i.test((a.navigator||{}).userAgent),f=b[0]||{},g,h=/^(Moz|webkit|ms)(?=[A-Z])/,k=f.body&&f.body.style,l=!1,m=!1;if(k){for(var r in k)if(l=h.exec(r)){g=l[0];g=g.substr(0,1).toUpperCase()+g.substr(1);break}g||(g="WebkitOpacity"in k&&"webkit");l=!!("transition"in k||g+"Transition"in k);m=!!("animation"in k||g+"Animation"in k);!c||l&&m||(l=F(k.webkitTransition),m=F(k.webkitAnimation))}return{history:!(!a.history||
!a.history.pushState||4>c||e),hasEvent:function(a){if("input"===a&&11>=xa)return!1;if(x(d[a])){var b=f.createElement("div");d[a]="on"+a in b}return d[a]},csp:Ea(),vendorPrefix:g,transitions:l,animations:m,android:c}}]}function Bf(){var a;this.httpOptions=function(b){return b?(a=b,this):a};this.$get=["$templateCache","$http","$q","$sce",function(b,d,c,e){function f(g,h){f.totalPendingRequests++;F(g)&&b.get(g)||(g=e.getTrustedResourceUrl(g));var k=d.defaults&&d.defaults.transformResponse;L(k)?k=k.filter(function(a){return a!==
cc}):k===cc&&(k=null);return d.get(g,T({cache:b,transformResponse:k},a))["finally"](function(){f.totalPendingRequests--}).then(function(a){b.put(g,a.data);return a.data},function(a){if(!h)throw ja("tpload",g,a.status,a.statusText);return c.reject(a)})}f.totalPendingRequests=0;return f}]}function Cf(){this.$get=["$rootScope","$browser","$location",function(a,b,d){return{findBindings:function(a,b,d){a=a.getElementsByClassName("ng-binding");var g=[];n(a,function(a){var c=ia.element(a).data("$binding");
c&&n(c,function(c){d?(new RegExp("(^|\\s)"+xd(b)+"(\\s|\\||$)")).test(c)&&g.push(a):-1!=c.indexOf(b)&&g.push(a)})});return g},findModels:function(a,b,d){for(var g=["ng-","data-ng-","ng\\:"],h=0;h<g.length;++h){var k=a.querySelectorAll("["+g[h]+"model"+(d?"=":"*=")+'"'+b+'"]');if(k.length)return k}},getLocation:function(){return d.url()},setLocation:function(b){b!==d.url()&&(d.url(b),a.$digest())},whenStable:function(a){b.notifyWhenNoOutstandingRequests(a)}}}]}function Df(){this.$get=["$rootScope",
"$browser","$q","$$q","$exceptionHandler",function(a,b,d,c,e){function f(f,k,l){D(f)||(l=k,k=f,f=B);var m=wa.call(arguments,3),r=y(l)&&!l,s=(r?c:d).defer(),n=s.promise,q;q=b.defer(function(){try{s.resolve(f.apply(null,m))}catch(b){s.reject(b),e(b)}finally{delete g[n.$$timeoutId]}r||a.$apply()},k);n.$$timeoutId=q;g[q]=s;return n}var g={};f.cancel=function(a){return a&&a.$$timeoutId in g?(g[a.$$timeoutId].reject("canceled"),delete g[a.$$timeoutId],b.defer.cancel(a.$$timeoutId)):!1};return f}]}function za(a){xa&&
(Y.setAttribute("href",a),a=Y.href);Y.setAttribute("href",a);return{href:Y.href,protocol:Y.protocol?Y.protocol.replace(/:$/,""):"",host:Y.host,search:Y.search?Y.search.replace(/^\?/,""):"",hash:Y.hash?Y.hash.replace(/^#/,""):"",hostname:Y.hostname,port:Y.port,pathname:"/"===Y.pathname.charAt(0)?Y.pathname:"/"+Y.pathname}}function jd(a){a=F(a)?za(a):a;return a.protocol===zd.protocol&&a.host===zd.host}function Ef(){this.$get=ba(O)}function Ad(a){function b(a){try{return decodeURIComponent(a)}catch(b){return a}}
var d=a[0]||{},c={},e="";return function(){var a,g,h,k,l;a=d.cookie||"";if(a!==e)for(e=a,a=e.split("; "),c={},h=0;h<a.length;h++)g=a[h],k=g.indexOf("="),0<k&&(l=b(g.substring(0,k)),x(c[l])&&(c[l]=b(g.substring(k+1))));return c}}function If(){this.$get=Ad}function Lc(a){function b(d,c){if(E(d)){var e={};n(d,function(a,c){e[c]=b(c,a)});return e}return a.factory(d+"Filter",c)}this.register=b;this.$get=["$injector",function(a){return function(b){return a.get(b+"Filter")}}];b("currency",Bd);b("date",Cd);
b("filter",og);b("json",pg);b("limitTo",qg);b("lowercase",rg);b("number",Dd);b("orderBy",Ed);b("uppercase",sg)}function og(){return function(a,b,d){if(!Ca(a)){if(null==a)return a;throw H("filter")("notarray",a);}var c;switch(kc(b)){case "function":break;case "boolean":case "null":case "number":case "string":c=!0;case "object":b=tg(b,d,c);break;default:return a}return Array.prototype.filter.call(a,b)}}function tg(a,b,d){var c=E(a)&&"$"in a;!0===b?b=oa:D(b)||(b=function(a,b){if(x(a))return!1;if(null===
a||null===b)return a===b;if(E(b)||E(a)&&!tc(a))return!1;a=G(""+a);b=G(""+b);return-1!==a.indexOf(b)});return function(e){return c&&!E(e)?La(e,a.$,b,!1):La(e,a,b,d)}}function La(a,b,d,c,e){var f=kc(a),g=kc(b);if("string"===g&&"!"===b.charAt(0))return!La(a,b.substring(1),d,c);if(L(a))return a.some(function(a){return La(a,b,d,c)});switch(f){case "object":var h;if(c){for(h in a)if("$"!==h.charAt(0)&&La(a[h],b,d,!0))return!0;return e?!1:La(a,b,d,!1)}if("object"===g){for(h in b)if(e=b[h],!D(e)&&!x(e)&&
(f="$"===h,!La(f?a:a[h],e,d,f,f)))return!1;return!0}return d(a,b);case "function":return!1;default:return d(a,b)}}function kc(a){return null===a?"null":typeof a}function Bd(a){var b=a.NUMBER_FORMATS;return function(a,c,e){x(c)&&(c=b.CURRENCY_SYM);x(e)&&(e=b.PATTERNS[1].maxFrac);return null==a?a:Fd(a,b.PATTERNS[1],b.GROUP_SEP,b.DECIMAL_SEP,e).replace(/\u00A4/g,c)}}function Dd(a){var b=a.NUMBER_FORMATS;return function(a,c){return null==a?a:Fd(a,b.PATTERNS[0],b.GROUP_SEP,b.DECIMAL_SEP,c)}}function ug(a){var b=
0,d,c,e,f,g;-1<(c=a.indexOf(Gd))&&(a=a.replace(Gd,""));0<(e=a.search(/e/i))?(0>c&&(c=e),c+=+a.slice(e+1),a=a.substring(0,e)):0>c&&(c=a.length);for(e=0;a.charAt(e)==lc;e++);if(e==(g=a.length))d=[0],c=1;else{for(g--;a.charAt(g)==lc;)g--;c-=e;d=[];for(f=0;e<=g;e++,f++)d[f]=+a.charAt(e)}c>Hd&&(d=d.splice(0,Hd-1),b=c-1,c=1);return{d:d,e:b,i:c}}function vg(a,b,d,c){var e=a.d,f=e.length-a.i;b=x(b)?Math.min(Math.max(d,f),c):+b;d=b+a.i;c=e[d];if(0<d)e.splice(d);else{a.i=1;e.length=d=b+1;for(var g=0;g<d;g++)e[g]=
0}for(5<=c&&e[d-1]++;f<b;f++)e.push(0);if(b=e.reduceRight(function(a,b,c,d){b+=a;d[c]=b%10;return Math.floor(b/10)},0))e.unshift(b),a.i++}function Fd(a,b,d,c,e){if(!F(a)&&!N(a)||isNaN(a))return"";var f=!isFinite(a),g=!1,h=Math.abs(a)+"",k="";if(f)k="\u221e";else{g=ug(h);vg(g,e,b.minFrac,b.maxFrac);k=g.d;h=g.i;e=g.e;f=[];for(g=k.reduce(function(a,b){return a&&!b},!0);0>h;)k.unshift(0),h++;0<h?f=k.splice(h):(f=k,k=[0]);h=[];for(k.length>b.lgSize&&h.unshift(k.splice(-b.lgSize).join(""));k.length>b.gSize;)h.unshift(k.splice(-b.gSize).join(""));
k.length&&h.unshift(k.join(""));k=h.join(d);f.length&&(k+=c+f.join(""));e&&(k+="e+"+e)}return 0>a&&!g?b.negPre+k+b.negSuf:b.posPre+k+b.posSuf}function Kb(a,b,d){var c="";0>a&&(c="-",a=-a);for(a=""+a;a.length<b;)a=lc+a;d&&(a=a.substr(a.length-b));return c+a}function aa(a,b,d,c){d=d||0;return function(e){e=e["get"+a]();if(0<d||e>-d)e+=d;0===e&&-12==d&&(e=12);return Kb(e,b,c)}}function Lb(a,b){return function(d,c){var e=d["get"+a](),f=ub(b?"SHORT"+a:a);return c[f][e]}}function Id(a){var b=(new Date(a,
0,1)).getDay();return new Date(a,0,(4>=b?5:12)-b)}function Jd(a){return function(b){var d=Id(b.getFullYear());b=+new Date(b.getFullYear(),b.getMonth(),b.getDate()+(4-b.getDay()))-+d;b=1+Math.round(b/6048E5);return Kb(b,a)}}function mc(a,b){return 0>=a.getFullYear()?b.ERAS[0]:b.ERAS[1]}function Cd(a){function b(a){var b;if(b=a.match(d)){a=new Date(0);var f=0,g=0,h=b[8]?a.setUTCFullYear:a.setFullYear,k=b[8]?a.setUTCHours:a.setHours;b[9]&&(f=ca(b[9]+b[10]),g=ca(b[9]+b[11]));h.call(a,ca(b[1]),ca(b[2])-
1,ca(b[3]));f=ca(b[4]||0)-f;g=ca(b[5]||0)-g;h=ca(b[6]||0);b=Math.round(1E3*parseFloat("0."+(b[7]||0)));k.call(a,f,g,h,b)}return a}var d=/^(\d{4})-?(\d\d)-?(\d\d)(?:T(\d\d)(?::?(\d\d)(?::?(\d\d)(?:\.(\d+))?)?)?(Z|([+-])(\d\d):?(\d\d))?)?$/;return function(c,d,f){var g="",h=[],k,l;d=d||"mediumDate";d=a.DATETIME_FORMATS[d]||d;F(c)&&(c=wg.test(c)?ca(c):b(c));N(c)&&(c=new Date(c));if(!V(c)||!isFinite(c.getTime()))return c;for(;d;)(l=xg.exec(d))?(h=db(h,l,1),d=h.pop()):(h.push(d),d=null);var m=c.getTimezoneOffset();
f&&(m=xc(f,m),c=Tb(c,f,!0));n(h,function(b){k=yg[b];g+=k?k(c,a.DATETIME_FORMATS,m):"''"===b?"'":b.replace(/(^'|'$)/g,"").replace(/''/g,"'")});return g}}function pg(){return function(a,b){x(b)&&(b=2);return eb(a,b)}}function qg(){return function(a,b,d){b=Infinity===Math.abs(Number(b))?Number(b):ca(b);if(isNaN(b))return a;N(a)&&(a=a.toString());if(!L(a)&&!F(a))return a;d=!d||isNaN(d)?0:ca(d);d=0>d?Math.max(0,a.length+d):d;return 0<=b?a.slice(d,d+b):0===d?a.slice(b,a.length):a.slice(Math.max(0,d+b),
d)}}function Ed(a){function b(b,d){d=d?-1:1;return b.map(function(b){var c=1,h=ab;if(D(b))h=b;else if(F(b)){if("+"==b.charAt(0)||"-"==b.charAt(0))c="-"==b.charAt(0)?-1:1,b=b.substring(1);if(""!==b&&(h=a(b),h.constant))var k=h(),h=function(a){return a[k]}}return{get:h,descending:c*d}})}function d(a){switch(typeof a){case "number":case "boolean":case "string":return!0;default:return!1}}return function(a,e,f){if(null==a)return a;if(!Ca(a))throw H("orderBy")("notarray",a);L(e)||(e=[e]);0===e.length&&
(e=["+"]);var g=b(e,f);g.push({get:function(){return{}},descending:f?-1:1});a=Array.prototype.map.call(a,function(a,b){return{value:a,predicateValues:g.map(function(c){var e=c.get(a);c=typeof e;if(null===e)c="string",e="null";else if("string"===c)e=e.toLowerCase();else if("object"===c)a:{if("function"===typeof e.valueOf&&(e=e.valueOf(),d(e)))break a;if(tc(e)&&(e=e.toString(),d(e)))break a;e=b}return{value:e,type:c}})}});a.sort(function(a,b){for(var c=0,d=0,e=g.length;d<e;++d){var c=a.predicateValues[d],
f=b.predicateValues[d],n=0;c.type===f.type?c.value!==f.value&&(n=c.value<f.value?-1:1):n=c.type<f.type?-1:1;if(c=n*g[d].descending)break}return c});return a=a.map(function(a){return a.value})}}function Ma(a){D(a)&&(a={link:a});a.restrict=a.restrict||"AC";return ba(a)}function Kd(a,b,d,c,e){var f=this,g=[];f.$error={};f.$$success={};f.$pending=v;f.$name=e(b.name||b.ngForm||"")(d);f.$dirty=!1;f.$pristine=!0;f.$valid=!0;f.$invalid=!1;f.$submitted=!1;f.$$parentForm=Mb;f.$rollbackViewValue=function(){n(g,
function(a){a.$rollbackViewValue()})};f.$commitViewValue=function(){n(g,function(a){a.$commitViewValue()})};f.$addControl=function(a){Ta(a.$name,"input");g.push(a);a.$name&&(f[a.$name]=a);a.$$parentForm=f};f.$$renameControl=function(a,b){var c=a.$name;f[c]===a&&delete f[c];f[b]=a;a.$name=b};f.$removeControl=function(a){a.$name&&f[a.$name]===a&&delete f[a.$name];n(f.$pending,function(b,c){f.$setValidity(c,null,a)});n(f.$error,function(b,c){f.$setValidity(c,null,a)});n(f.$$success,function(b,c){f.$setValidity(c,
null,a)});cb(g,a);a.$$parentForm=Mb};Ld({ctrl:this,$element:a,set:function(a,b,c){var d=a[b];d?-1===d.indexOf(c)&&d.push(c):a[b]=[c]},unset:function(a,b,c){var d=a[b];d&&(cb(d,c),0===d.length&&delete a[b])},$animate:c});f.$setDirty=function(){c.removeClass(a,Ya);c.addClass(a,Nb);f.$dirty=!0;f.$pristine=!1;f.$$parentForm.$setDirty()};f.$setPristine=function(){c.setClass(a,Ya,Nb+" ng-submitted");f.$dirty=!1;f.$pristine=!0;f.$submitted=!1;n(g,function(a){a.$setPristine()})};f.$setUntouched=function(){n(g,
function(a){a.$setUntouched()})};f.$setSubmitted=function(){c.addClass(a,"ng-submitted");f.$submitted=!0;f.$$parentForm.$setSubmitted()}}function nc(a){a.$formatters.push(function(b){return a.$isEmpty(b)?b:b.toString()})}function lb(a,b,d,c,e,f){var g=G(b[0].type);if(!e.android){var h=!1;b.on("compositionstart",function(a){h=!0});b.on("compositionend",function(){h=!1;k()})}var k=function(a){l&&(f.defer.cancel(l),l=null);if(!h){var e=b.val();a=a&&a.type;"password"===g||d.ngTrim&&"false"===d.ngTrim||
(e=X(e));(c.$viewValue!==e||""===e&&c.$$hasNativeValidators)&&c.$setViewValue(e,a)}};if(e.hasEvent("input"))b.on("input",k);else{var l,m=function(a,b,c){l||(l=f.defer(function(){l=null;b&&b.value===c||k(a)}))};b.on("keydown",function(a){var b=a.keyCode;91===b||15<b&&19>b||37<=b&&40>=b||m(a,this,this.value)});if(e.hasEvent("paste"))b.on("paste cut",m)}b.on("change",k);c.$render=function(){var a=c.$isEmpty(c.$viewValue)?"":c.$viewValue;b.val()!==a&&b.val(a)}}function Ob(a,b){return function(d,c){var e,
f;if(V(d))return d;if(F(d)){'"'==d.charAt(0)&&'"'==d.charAt(d.length-1)&&(d=d.substring(1,d.length-1));if(zg.test(d))return new Date(d);a.lastIndex=0;if(e=a.exec(d))return e.shift(),f=c?{yyyy:c.getFullYear(),MM:c.getMonth()+1,dd:c.getDate(),HH:c.getHours(),mm:c.getMinutes(),ss:c.getSeconds(),sss:c.getMilliseconds()/1E3}:{yyyy:1970,MM:1,dd:1,HH:0,mm:0,ss:0,sss:0},n(e,function(a,c){c<b.length&&(f[b[c]]=+a)}),new Date(f.yyyy,f.MM-1,f.dd,f.HH,f.mm,f.ss||0,1E3*f.sss||0)}return NaN}}function mb(a,b,d,c){return function(e,
f,g,h,k,l,m){function r(a){return a&&!(a.getTime&&a.getTime()!==a.getTime())}function s(a){return y(a)&&!V(a)?d(a)||v:a}Md(e,f,g,h);lb(e,f,g,h,k,l);var n=h&&h.$options&&h.$options.timezone,q;h.$$parserName=a;h.$parsers.push(function(a){return h.$isEmpty(a)?null:b.test(a)?(a=d(a,q),n&&(a=Tb(a,n)),a):v});h.$formatters.push(function(a){if(a&&!V(a))throw nb("datefmt",a);if(r(a))return(q=a)&&n&&(q=Tb(q,n,!0)),m("date")(a,c,n);q=null;return""});if(y(g.min)||g.ngMin){var t;h.$validators.min=function(a){return!r(a)||
x(t)||d(a)>=t};g.$observe("min",function(a){t=s(a);h.$validate()})}if(y(g.max)||g.ngMax){var p;h.$validators.max=function(a){return!r(a)||x(p)||d(a)<=p};g.$observe("max",function(a){p=s(a);h.$validate()})}}}function Md(a,b,d,c){(c.$$hasNativeValidators=E(b[0].validity))&&c.$parsers.push(function(a){var c=b.prop("validity")||{};return c.badInput||c.typeMismatch?v:a})}function Nd(a,b,d,c,e){if(y(c)){a=a(c);if(!a.constant)throw nb("constexpr",d,c);return a(b)}return e}function oc(a,b){a="ngClass"+a;
return["$animate",function(d){function c(a,b){var c=[],d=0;a:for(;d<a.length;d++){for(var e=a[d],m=0;m<b.length;m++)if(e==b[m])continue a;c.push(e)}return c}function e(a){var b=[];return L(a)?(n(a,function(a){b=b.concat(e(a))}),b):F(a)?a.split(" "):E(a)?(n(a,function(a,c){a&&(b=b.concat(c.split(" ")))}),b):a}return{restrict:"AC",link:function(f,g,h){function k(a,b){var c=g.data("$classCounts")||Z(),d=[];n(a,function(a){if(0<b||c[a])c[a]=(c[a]||0)+b,c[a]===+(0<b)&&d.push(a)});g.data("$classCounts",
c);return d.join(" ")}function l(a){if(!0===b||f.$index%2===b){var l=e(a||[]);if(!m){var n=k(l,1);h.$addClass(n)}else if(!oa(a,m)){var q=e(m),n=c(l,q),l=c(q,l),n=k(n,1),l=k(l,-1);n&&n.length&&d.addClass(g,n);l&&l.length&&d.removeClass(g,l)}}m=na(a)}var m;f.$watch(h[a],l,!0);h.$observe("class",function(b){l(f.$eval(h[a]))});"ngClass"!==a&&f.$watch("$index",function(c,d){var g=c&1;if(g!==(d&1)){var l=e(f.$eval(h[a]));g===b?(g=k(l,1),h.$addClass(g)):(g=k(l,-1),h.$removeClass(g))}})}}}]}function Ld(a){function b(a,
b){b&&!f[a]?(k.addClass(e,a),f[a]=!0):!b&&f[a]&&(k.removeClass(e,a),f[a]=!1)}function d(a,c){a=a?"-"+Bc(a,"-"):"";b(ob+a,!0===c);b(Od+a,!1===c)}var c=a.ctrl,e=a.$element,f={},g=a.set,h=a.unset,k=a.$animate;f[Od]=!(f[ob]=e.hasClass(ob));c.$setValidity=function(a,e,f){x(e)?(c.$pending||(c.$pending={}),g(c.$pending,a,f)):(c.$pending&&h(c.$pending,a,f),Pd(c.$pending)&&(c.$pending=v));Na(e)?e?(h(c.$error,a,f),g(c.$$success,a,f)):(g(c.$error,a,f),h(c.$$success,a,f)):(h(c.$error,a,f),h(c.$$success,a,f));
c.$pending?(b(Qd,!0),c.$valid=c.$invalid=v,d("",null)):(b(Qd,!1),c.$valid=Pd(c.$error),c.$invalid=!c.$valid,d("",c.$valid));e=c.$pending&&c.$pending[a]?v:c.$error[a]?!1:c.$$success[a]?!0:null;d(a,e);c.$$parentForm.$setValidity(a,e,c)}}function Pd(a){if(a)for(var b in a)if(a.hasOwnProperty(b))return!1;return!0}var Ag=/^\/(.+)\/([a-z]*)$/,sa=Object.prototype.hasOwnProperty,G=function(a){return F(a)?a.toLowerCase():a},ub=function(a){return F(a)?a.toUpperCase():a},xa,C,ua,wa=[].slice,ag=[].splice,Bg=
[].push,ga=Object.prototype.toString,uc=Object.getPrototypeOf,Da=H("ng"),ia=O.angular||(O.angular={}),Vb,pb=0;xa=W.documentMode;B.$inject=[];ab.$inject=[];var L=Array.isArray,ae=/^\[object (?:Uint8|Uint8Clamped|Uint16|Uint32|Int8|Int16|Int32|Float32|Float64)Array\]$/,X=function(a){return F(a)?a.trim():a},xd=function(a){return a.replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g,"\\$1").replace(/\x08/g,"\\x08")},Ea=function(){if(!y(Ea.rules)){var a=W.querySelector("[ng-csp]")||W.querySelector("[data-ng-csp]");
if(a){var b=a.getAttribute("ng-csp")||a.getAttribute("data-ng-csp");Ea.rules={noUnsafeEval:!b||-1!==b.indexOf("no-unsafe-eval"),noInlineStyle:!b||-1!==b.indexOf("no-inline-style")}}else{a=Ea;try{new Function(""),b=!1}catch(d){b=!0}a.rules={noUnsafeEval:b,noInlineStyle:!1}}}return Ea.rules},rb=function(){if(y(rb.name_))return rb.name_;var a,b,d=Qa.length,c,e;for(b=0;b<d;++b)if(c=Qa[b],a=W.querySelector("["+c.replace(":","\\:")+"jq]")){e=a.getAttribute(c+"jq");break}return rb.name_=e},de=/:/g,Qa=["ng-",
"data-ng-","ng:","x-ng-"],ie=/[A-Z]/g,Cc=!1,Pa=3,me={full:"1.5.0",major:1,minor:5,dot:0,codeName:"ennoblement-facilitation"};U.expando="ng339";var ib=U.cache={},Of=1;U._data=function(a){return this.cache[a[this.expando]]||{}};var Jf=/([\:\-\_]+(.))/g,Kf=/^moz([A-Z])/,yb={mouseleave:"mouseout",mouseenter:"mouseover"},Xb=H("jqLite"),Nf=/^<([\w-]+)\s*\/?>(?:<\/\1>|)$/,Wb=/<|&#?\w+;/,Lf=/<([\w:-]+)/,Mf=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:-]+)[^>]*)\/>/gi,da={option:[1,'<select multiple="multiple">',
"</select>"],thead:[1,"<table>","</table>"],col:[2,"<table><colgroup>","</colgroup></table>"],tr:[2,"<table><tbody>","</tbody></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],_default:[0,"",""]};da.optgroup=da.option;da.tbody=da.tfoot=da.colgroup=da.caption=da.thead;da.th=da.td;var Tf=Node.prototype.contains||function(a){return!!(this.compareDocumentPosition(a)&16)},Ra=U.prototype={ready:function(a){function b(){d||(d=!0,a())}var d=!1;"complete"===W.readyState?setTimeout(b):(this.on("DOMContentLoaded",
b),U(O).on("load",b))},toString:function(){var a=[];n(this,function(b){a.push(""+b)});return"["+a.join(", ")+"]"},eq:function(a){return 0<=a?C(this[a]):C(this[this.length+a])},length:0,push:Bg,sort:[].sort,splice:[].splice},Db={};n("multiple selected checked disabled readOnly required open".split(" "),function(a){Db[G(a)]=a});var Uc={};n("input select option textarea button form details".split(" "),function(a){Uc[a]=!0});var cd={ngMinlength:"minlength",ngMaxlength:"maxlength",ngMin:"min",ngMax:"max",
ngPattern:"pattern"};n({data:Zb,removeData:hb,hasData:function(a){for(var b in ib[a.ng339])return!0;return!1},cleanData:function(a){for(var b=0,d=a.length;b<d;b++)hb(a[b])}},function(a,b){U[b]=a});n({data:Zb,inheritedData:Cb,scope:function(a){return C.data(a,"$scope")||Cb(a.parentNode||a,["$isolateScope","$scope"])},isolateScope:function(a){return C.data(a,"$isolateScope")||C.data(a,"$isolateScopeNoTemplate")},controller:Rc,injector:function(a){return Cb(a,"$injector")},removeAttr:function(a,b){a.removeAttribute(b)},
hasClass:zb,css:function(a,b,d){b=gb(b);if(y(d))a.style[b]=d;else return a.style[b]},attr:function(a,b,d){var c=a.nodeType;if(c!==Pa&&2!==c&&8!==c)if(c=G(b),Db[c])if(y(d))d?(a[b]=!0,a.setAttribute(b,c)):(a[b]=!1,a.removeAttribute(c));else return a[b]||(a.attributes.getNamedItem(b)||B).specified?c:v;else if(y(d))a.setAttribute(b,d);else if(a.getAttribute)return a=a.getAttribute(b,2),null===a?v:a},prop:function(a,b,d){if(y(d))a[b]=d;else return a[b]},text:function(){function a(a,d){if(x(d)){var c=a.nodeType;
return 1===c||c===Pa?a.textContent:""}a.textContent=d}a.$dv="";return a}(),val:function(a,b){if(x(b)){if(a.multiple&&"select"===ra(a)){var d=[];n(a.options,function(a){a.selected&&d.push(a.value||a.text)});return 0===d.length?null:d}return a.value}a.value=b},html:function(a,b){if(x(b))return a.innerHTML;wb(a,!0);a.innerHTML=b},empty:Sc},function(a,b){U.prototype[b]=function(b,c){var e,f,g=this.length;if(a!==Sc&&x(2==a.length&&a!==zb&&a!==Rc?b:c)){if(E(b)){for(e=0;e<g;e++)if(a===Zb)a(this[e],b);else for(f in b)a(this[e],
f,b[f]);return this}e=a.$dv;g=x(e)?Math.min(g,1):g;for(f=0;f<g;f++){var h=a(this[f],b,c);e=e?e+h:h}return e}for(e=0;e<g;e++)a(this[e],b,c);return this}});n({removeData:hb,on:function(a,b,d,c){if(y(c))throw Xb("onargs");if(Mc(a)){c=xb(a,!0);var e=c.events,f=c.handle;f||(f=c.handle=Qf(a,e));c=0<=b.indexOf(" ")?b.split(" "):[b];for(var g=c.length,h=function(b,c,g){var h=e[b];h||(h=e[b]=[],h.specialHandlerWrapper=c,"$destroy"===b||g||a.addEventListener(b,f,!1));h.push(d)};g--;)b=c[g],yb[b]?(h(yb[b],Sf),
h(b,v,!0)):h(b)}},off:Qc,one:function(a,b,d){a=C(a);a.on(b,function e(){a.off(b,d);a.off(b,e)});a.on(b,d)},replaceWith:function(a,b){var d,c=a.parentNode;wb(a);n(new U(b),function(b){d?c.insertBefore(b,d.nextSibling):c.replaceChild(b,a);d=b})},children:function(a){var b=[];n(a.childNodes,function(a){1===a.nodeType&&b.push(a)});return b},contents:function(a){return a.contentDocument||a.childNodes||[]},append:function(a,b){var d=a.nodeType;if(1===d||11===d){b=new U(b);for(var d=0,c=b.length;d<c;d++)a.appendChild(b[d])}},
prepend:function(a,b){if(1===a.nodeType){var d=a.firstChild;n(new U(b),function(b){a.insertBefore(b,d)})}},wrap:function(a,b){Oc(a,C(b).eq(0).clone()[0])},remove:$b,detach:function(a){$b(a,!0)},after:function(a,b){var d=a,c=a.parentNode;b=new U(b);for(var e=0,f=b.length;e<f;e++){var g=b[e];c.insertBefore(g,d.nextSibling);d=g}},addClass:Bb,removeClass:Ab,toggleClass:function(a,b,d){b&&n(b.split(" "),function(b){var e=d;x(e)&&(e=!zb(a,b));(e?Bb:Ab)(a,b)})},parent:function(a){return(a=a.parentNode)&&
11!==a.nodeType?a:null},next:function(a){return a.nextElementSibling},find:function(a,b){return a.getElementsByTagName?a.getElementsByTagName(b):[]},clone:Yb,triggerHandler:function(a,b,d){var c,e,f=b.type||b,g=xb(a);if(g=(g=g&&g.events)&&g[f])c={preventDefault:function(){this.defaultPrevented=!0},isDefaultPrevented:function(){return!0===this.defaultPrevented},stopImmediatePropagation:function(){this.immediatePropagationStopped=!0},isImmediatePropagationStopped:function(){return!0===this.immediatePropagationStopped},
stopPropagation:B,type:f,target:a},b.type&&(c=T(c,b)),b=na(g),e=d?[c].concat(d):[c],n(b,function(b){c.isImmediatePropagationStopped()||b.apply(a,e)})}},function(a,b){U.prototype[b]=function(b,c,e){for(var f,g=0,h=this.length;g<h;g++)x(f)?(f=a(this[g],b,c,e),y(f)&&(f=C(f))):Pc(f,a(this[g],b,c,e));return y(f)?f:this};U.prototype.bind=U.prototype.on;U.prototype.unbind=U.prototype.off});Ua.prototype={put:function(a,b){this[Fa(a,this.nextUid)]=b},get:function(a){return this[Fa(a,this.nextUid)]},remove:function(a){var b=
this[a=Fa(a,this.nextUid)];delete this[a];return b}};var Hf=[function(){this.$get=[function(){return Ua}]}],Vf=/^([^\(]+?)=>/,Wf=/^[^\(]*\(\s*([^\)]*)\)/m,Cg=/,/,Dg=/^\s*(_?)(\S+?)\1\s*$/,Uf=/((\/\/.*$)|(\/\*[\s\S]*?\*\/))/mg,Ga=H("$injector");fb.$$annotate=function(a,b,d){var c;if("function"===typeof a){if(!(c=a.$inject)){c=[];if(a.length){if(b)throw F(d)&&d||(d=a.name||Xf(a)),Ga("strictdi",d);b=Vc(a);n(b[1].split(Cg),function(a){a.replace(Dg,function(a,b,d){c.push(d)})})}a.$inject=c}}else L(a)?
(b=a.length-1,Sa(a[b],"fn"),c=a.slice(0,b)):Sa(a,"fn",!0);return c};var Rd=H("$animate"),$e=function(){this.$get=function(){}},af=function(){var a=new Ua,b=[];this.$get=["$$AnimateRunner","$rootScope",function(d,c){function e(a,b,c){var d=!1;b&&(b=F(b)?b.split(" "):L(b)?b:[],n(b,function(b){b&&(d=!0,a[b]=c)}));return d}function f(){n(b,function(b){var c=a.get(b);if(c){var d=Yf(b.attr("class")),e="",f="";n(c,function(a,b){a!==!!d[b]&&(a?e+=(e.length?" ":"")+b:f+=(f.length?" ":"")+b)});n(b,function(a){e&&
Bb(a,e);f&&Ab(a,f)});a.remove(b)}});b.length=0}return{enabled:B,on:B,off:B,pin:B,push:function(g,h,k,l){l&&l();k=k||{};k.from&&g.css(k.from);k.to&&g.css(k.to);if(k.addClass||k.removeClass)if(h=k.addClass,l=k.removeClass,k=a.get(g)||{},h=e(k,h,!0),l=e(k,l,!1),h||l)a.put(g,k),b.push(g),1===b.length&&c.$$postDigest(f);g=new d;g.complete();return g}}}]},Ye=["$provide",function(a){var b=this;this.$$registeredAnimations=Object.create(null);this.register=function(d,c){if(d&&"."!==d.charAt(0))throw Rd("notcsel",
d);var e=d+"-animation";b.$$registeredAnimations[d.substr(1)]=e;a.factory(e,c)};this.classNameFilter=function(a){if(1===arguments.length&&(this.$$classNameFilter=a instanceof RegExp?a:null)&&/(\s+|\/)ng-animate(\s+|\/)/.test(this.$$classNameFilter.toString()))throw Rd("nongcls","ng-animate");return this.$$classNameFilter};this.$get=["$$animateQueue",function(a){function b(a,c,d){if(d){var h;a:{for(h=0;h<d.length;h++){var k=d[h];if(1===k.nodeType){h=k;break a}}h=void 0}!h||h.parentNode||h.previousElementSibling||
(d=null)}d?d.after(a):c.prepend(a)}return{on:a.on,off:a.off,pin:a.pin,enabled:a.enabled,cancel:function(a){a.end&&a.end()},enter:function(e,f,g,h){f=f&&C(f);g=g&&C(g);f=f||g.parent();b(e,f,g);return a.push(e,"enter",Ha(h))},move:function(e,f,g,h){f=f&&C(f);g=g&&C(g);f=f||g.parent();b(e,f,g);return a.push(e,"move",Ha(h))},leave:function(b,c){return a.push(b,"leave",Ha(c),function(){b.remove()})},addClass:function(b,c,g){g=Ha(g);g.addClass=jb(g.addclass,c);return a.push(b,"addClass",g)},removeClass:function(b,
c,g){g=Ha(g);g.removeClass=jb(g.removeClass,c);return a.push(b,"removeClass",g)},setClass:function(b,c,g,h){h=Ha(h);h.addClass=jb(h.addClass,c);h.removeClass=jb(h.removeClass,g);return a.push(b,"setClass",h)},animate:function(b,c,g,h,k){k=Ha(k);k.from=k.from?T(k.from,c):c;k.to=k.to?T(k.to,g):g;k.tempClasses=jb(k.tempClasses,h||"ng-inline-animate");return a.push(b,"animate",k)}}}]}],cf=function(){this.$get=["$$rAF",function(a){function b(b){d.push(b);1<d.length||a(function(){for(var a=0;a<d.length;a++)d[a]();
d=[]})}var d=[];return function(){var a=!1;b(function(){a=!0});return function(d){a?d():b(d)}}}]},bf=function(){this.$get=["$q","$sniffer","$$animateAsyncRun","$document","$timeout",function(a,b,d,c,e){function f(a){this.setHost(a);var b=d();this._doneCallbacks=[];this._tick=function(a){var d=c[0];d&&d.hidden?e(a,0,!1):b(a)};this._state=0}f.chain=function(a,b){function c(){if(d===a.length)b(!0);else a[d](function(a){!1===a?b(!1):(d++,c())})}var d=0;c()};f.all=function(a,b){function c(f){e=e&&f;++d===
a.length&&b(e)}var d=0,e=!0;n(a,function(a){a.done(c)})};f.prototype={setHost:function(a){this.host=a||{}},done:function(a){2===this._state?a():this._doneCallbacks.push(a)},progress:B,getPromise:function(){if(!this.promise){var b=this;this.promise=a(function(a,c){b.done(function(b){!1===b?c():a()})})}return this.promise},then:function(a,b){return this.getPromise().then(a,b)},"catch":function(a){return this.getPromise()["catch"](a)},"finally":function(a){return this.getPromise()["finally"](a)},pause:function(){this.host.pause&&
this.host.pause()},resume:function(){this.host.resume&&this.host.resume()},end:function(){this.host.end&&this.host.end();this._resolve(!0)},cancel:function(){this.host.cancel&&this.host.cancel();this._resolve(!1)},complete:function(a){var b=this;0===b._state&&(b._state=1,b._tick(function(){b._resolve(a)}))},_resolve:function(a){2!==this._state&&(n(this._doneCallbacks,function(b){b(a)}),this._doneCallbacks.length=0,this._state=2)}};return f}]},Ze=function(){this.$get=["$$rAF","$q","$$AnimateRunner",
function(a,b,d){return function(b,e){function f(){a(function(){g.addClass&&(b.addClass(g.addClass),g.addClass=null);g.removeClass&&(b.removeClass(g.removeClass),g.removeClass=null);g.to&&(b.css(g.to),g.to=null);h||k.complete();h=!0});return k}var g=e||{};g.$$prepared||(g=Oa(g));g.cleanupStyles&&(g.from=g.to=null);g.from&&(b.css(g.from),g.from=null);var h,k=new d;return{start:f,end:f}}}]},ja=H("$compile");Ec.$inject=["$provide","$$sanitizeUriProvider"];var Xc=/^((?:x|data)[\:\-_])/i,bg=H("$controller"),
dd=/^(\S+)(\s+as\s+([\w$]+))?$/,jf=function(){this.$get=["$document",function(a){return function(b){b?!b.nodeType&&b instanceof C&&(b=b[0]):b=a[0].body;return b.offsetWidth+1}}]},ed="application/json",dc={"Content-Type":ed+";charset=utf-8"},dg=/^\[|^\{(?!\{)/,eg={"[":/]$/,"{":/}$/},cg=/^\)\]\}',?\n/,Eg=H("$http"),id=function(a){return function(){throw Eg("legacy",a);}},Ka=ia.$interpolateMinErr=H("$interpolate");Ka.throwNoconcat=function(a){throw Ka("noconcat",a);};Ka.interr=function(a,b){return Ka("interr",
a,b.toString())};var Fg=/^([^\?#]*)(\?([^#]*))?(#(.*))?$/,gg={http:80,https:443,ftp:21},Gb=H("$location"),Gg={$$html5:!1,$$replace:!1,absUrl:Hb("$$absUrl"),url:function(a){if(x(a))return this.$$url;var b=Fg.exec(a);(b[1]||""===a)&&this.path(decodeURIComponent(b[1]));(b[2]||b[1]||""===a)&&this.search(b[3]||"");this.hash(b[5]||"");return this},protocol:Hb("$$protocol"),host:Hb("$$host"),port:Hb("$$port"),path:nd("$$path",function(a){a=null!==a?a.toString():"";return"/"==a.charAt(0)?a:"/"+a}),search:function(a,
b){switch(arguments.length){case 0:return this.$$search;case 1:if(F(a)||N(a))a=a.toString(),this.$$search=zc(a);else if(E(a))a=Oa(a,{}),n(a,function(b,c){null==b&&delete a[c]}),this.$$search=a;else throw Gb("isrcharg");break;default:x(b)||null===b?delete this.$$search[a]:this.$$search[a]=b}this.$$compose();return this},hash:nd("$$hash",function(a){return null!==a?a.toString():""}),replace:function(){this.$$replace=!0;return this}};n([md,gc,fc],function(a){a.prototype=Object.create(Gg);a.prototype.state=
function(b){if(!arguments.length)return this.$$state;if(a!==fc||!this.$$html5)throw Gb("nostate");this.$$state=x(b)?null:b;return this}});var ka=H("$parse"),ig=Function.prototype.call,jg=Function.prototype.apply,kg=Function.prototype.bind,Pb=Z();n("+ - * / % === !== == != < > <= >= && || ! = |".split(" "),function(a){Pb[a]=!0});var Hg={n:"\n",f:"\f",r:"\r",t:"\t",v:"\v","'":"'",'"':'"'},ic=function(a){this.options=a};ic.prototype={constructor:ic,lex:function(a){this.text=a;this.index=0;for(this.tokens=
[];this.index<this.text.length;)if(a=this.text.charAt(this.index),'"'===a||"'"===a)this.readString(a);else if(this.isNumber(a)||"."===a&&this.isNumber(this.peek()))this.readNumber();else if(this.isIdent(a))this.readIdent();else if(this.is(a,"(){}[].,;:?"))this.tokens.push({index:this.index,text:a}),this.index++;else if(this.isWhitespace(a))this.index++;else{var b=a+this.peek(),d=b+this.peek(2),c=Pb[b],e=Pb[d];Pb[a]||c||e?(a=e?d:c?b:a,this.tokens.push({index:this.index,text:a,operator:!0}),this.index+=
a.length):this.throwError("Unexpected next character ",this.index,this.index+1)}return this.tokens},is:function(a,b){return-1!==b.indexOf(a)},peek:function(a){a=a||1;return this.index+a<this.text.length?this.text.charAt(this.index+a):!1},isNumber:function(a){return"0"<=a&&"9">=a&&"string"===typeof a},isWhitespace:function(a){return" "===a||"\r"===a||"\t"===a||"\n"===a||"\v"===a||"\u00a0"===a},isIdent:function(a){return"a"<=a&&"z">=a||"A"<=a&&"Z">=a||"_"===a||"$"===a},isExpOperator:function(a){return"-"===
a||"+"===a||this.isNumber(a)},throwError:function(a,b,d){d=d||this.index;b=y(b)?"s "+b+"-"+this.index+" ["+this.text.substring(b,d)+"]":" "+d;throw ka("lexerr",a,b,this.text);},readNumber:function(){for(var a="",b=this.index;this.index<this.text.length;){var d=G(this.text.charAt(this.index));if("."==d||this.isNumber(d))a+=d;else{var c=this.peek();if("e"==d&&this.isExpOperator(c))a+=d;else if(this.isExpOperator(d)&&c&&this.isNumber(c)&&"e"==a.charAt(a.length-1))a+=d;else if(!this.isExpOperator(d)||
c&&this.isNumber(c)||"e"!=a.charAt(a.length-1))break;else this.throwError("Invalid exponent")}this.index++}this.tokens.push({index:b,text:a,constant:!0,value:Number(a)})},readIdent:function(){for(var a=this.index;this.index<this.text.length;){var b=this.text.charAt(this.index);if(!this.isIdent(b)&&!this.isNumber(b))break;this.index++}this.tokens.push({index:a,text:this.text.slice(a,this.index),identifier:!0})},readString:function(a){var b=this.index;this.index++;for(var d="",c=a,e=!1;this.index<this.text.length;){var f=
this.text.charAt(this.index),c=c+f;if(e)"u"===f?(e=this.text.substring(this.index+1,this.index+5),e.match(/[\da-f]{4}/i)||this.throwError("Invalid unicode escape [\\u"+e+"]"),this.index+=4,d+=String.fromCharCode(parseInt(e,16))):d+=Hg[f]||f,e=!1;else if("\\"===f)e=!0;else{if(f===a){this.index++;this.tokens.push({index:b,text:c,constant:!0,value:d});return}d+=f}this.index++}this.throwError("Unterminated quote",b)}};var q=function(a,b){this.lexer=a;this.options=b};q.Program="Program";q.ExpressionStatement=
"ExpressionStatement";q.AssignmentExpression="AssignmentExpression";q.ConditionalExpression="ConditionalExpression";q.LogicalExpression="LogicalExpression";q.BinaryExpression="BinaryExpression";q.UnaryExpression="UnaryExpression";q.CallExpression="CallExpression";q.MemberExpression="MemberExpression";q.Identifier="Identifier";q.Literal="Literal";q.ArrayExpression="ArrayExpression";q.Property="Property";q.ObjectExpression="ObjectExpression";q.ThisExpression="ThisExpression";q.LocalsExpression="LocalsExpression";
q.NGValueParameter="NGValueParameter";q.prototype={ast:function(a){this.text=a;this.tokens=this.lexer.lex(a);a=this.program();0!==this.tokens.length&&this.throwError("is an unexpected token",this.tokens[0]);return a},program:function(){for(var a=[];;)if(0<this.tokens.length&&!this.peek("}",")",";","]")&&a.push(this.expressionStatement()),!this.expect(";"))return{type:q.Program,body:a}},expressionStatement:function(){return{type:q.ExpressionStatement,expression:this.filterChain()}},filterChain:function(){for(var a=
this.expression();this.expect("|");)a=this.filter(a);return a},expression:function(){return this.assignment()},assignment:function(){var a=this.ternary();this.expect("=")&&(a={type:q.AssignmentExpression,left:a,right:this.assignment(),operator:"="});return a},ternary:function(){var a=this.logicalOR(),b,d;return this.expect("?")&&(b=this.expression(),this.consume(":"))?(d=this.expression(),{type:q.ConditionalExpression,test:a,alternate:b,consequent:d}):a},logicalOR:function(){for(var a=this.logicalAND();this.expect("||");)a=
{type:q.LogicalExpression,operator:"||",left:a,right:this.logicalAND()};return a},logicalAND:function(){for(var a=this.equality();this.expect("&&");)a={type:q.LogicalExpression,operator:"&&",left:a,right:this.equality()};return a},equality:function(){for(var a=this.relational(),b;b=this.expect("==","!=","===","!==");)a={type:q.BinaryExpression,operator:b.text,left:a,right:this.relational()};return a},relational:function(){for(var a=this.additive(),b;b=this.expect("<",">","<=",">=");)a={type:q.BinaryExpression,
operator:b.text,left:a,right:this.additive()};return a},additive:function(){for(var a=this.multiplicative(),b;b=this.expect("+","-");)a={type:q.BinaryExpression,operator:b.text,left:a,right:this.multiplicative()};return a},multiplicative:function(){for(var a=this.unary(),b;b=this.expect("*","/","%");)a={type:q.BinaryExpression,operator:b.text,left:a,right:this.unary()};return a},unary:function(){var a;return(a=this.expect("+","-","!"))?{type:q.UnaryExpression,operator:a.text,prefix:!0,argument:this.unary()}:
this.primary()},primary:function(){var a;this.expect("(")?(a=this.filterChain(),this.consume(")")):this.expect("[")?a=this.arrayDeclaration():this.expect("{")?a=this.object():this.constants.hasOwnProperty(this.peek().text)?a=Oa(this.constants[this.consume().text]):this.peek().identifier?a=this.identifier():this.peek().constant?a=this.constant():this.throwError("not a primary expression",this.peek());for(var b;b=this.expect("(","[",".");)"("===b.text?(a={type:q.CallExpression,callee:a,arguments:this.parseArguments()},
this.consume(")")):"["===b.text?(a={type:q.MemberExpression,object:a,property:this.expression(),computed:!0},this.consume("]")):"."===b.text?a={type:q.MemberExpression,object:a,property:this.identifier(),computed:!1}:this.throwError("IMPOSSIBLE");return a},filter:function(a){a=[a];for(var b={type:q.CallExpression,callee:this.identifier(),arguments:a,filter:!0};this.expect(":");)a.push(this.expression());return b},parseArguments:function(){var a=[];if(")"!==this.peekToken().text){do a.push(this.expression());
while(this.expect(","))}return a},identifier:function(){var a=this.consume();a.identifier||this.throwError("is not a valid identifier",a);return{type:q.Identifier,name:a.text}},constant:function(){return{type:q.Literal,value:this.consume().value}},arrayDeclaration:function(){var a=[];if("]"!==this.peekToken().text){do{if(this.peek("]"))break;a.push(this.expression())}while(this.expect(","))}this.consume("]");return{type:q.ArrayExpression,elements:a}},object:function(){var a=[],b;if("}"!==this.peekToken().text){do{if(this.peek("}"))break;
b={type:q.Property,kind:"init"};this.peek().constant?b.key=this.constant():this.peek().identifier?b.key=this.identifier():this.throwError("invalid key",this.peek());this.consume(":");b.value=this.expression();a.push(b)}while(this.expect(","))}this.consume("}");return{type:q.ObjectExpression,properties:a}},throwError:function(a,b){throw ka("syntax",b.text,a,b.index+1,this.text,this.text.substring(b.index));},consume:function(a){if(0===this.tokens.length)throw ka("ueoe",this.text);var b=this.expect(a);
b||this.throwError("is unexpected, expecting ["+a+"]",this.peek());return b},peekToken:function(){if(0===this.tokens.length)throw ka("ueoe",this.text);return this.tokens[0]},peek:function(a,b,d,c){return this.peekAhead(0,a,b,d,c)},peekAhead:function(a,b,d,c,e){if(this.tokens.length>a){a=this.tokens[a];var f=a.text;if(f===b||f===d||f===c||f===e||!(b||d||c||e))return a}return!1},expect:function(a,b,d,c){return(a=this.peek(a,b,d,c))?(this.tokens.shift(),a):!1},constants:{"true":{type:q.Literal,value:!0},
"false":{type:q.Literal,value:!1},"null":{type:q.Literal,value:null},undefined:{type:q.Literal,value:v},"this":{type:q.ThisExpression},$locals:{type:q.LocalsExpression}}};ud.prototype={compile:function(a,b){var d=this,c=this.astBuilder.ast(a);this.state={nextId:0,filters:{},expensiveChecks:b,fn:{vars:[],body:[],own:{}},assign:{vars:[],body:[],own:{}},inputs:[]};R(c,d.$filter);var e="",f;this.stage="assign";if(f=sd(c))this.state.computing="assign",e=this.nextId(),this.recurse(f,e),this.return_(e),
e="fn.assign="+this.generateFunction("assign","s,v,l");f=qd(c.body);d.stage="inputs";n(f,function(a,b){var c="fn"+b;d.state[c]={vars:[],body:[],own:{}};d.state.computing=c;var e=d.nextId();d.recurse(a,e);d.return_(e);d.state.inputs.push(c);a.watchId=b});this.state.computing="fn";this.stage="main";this.recurse(c);e='"'+this.USE+" "+this.STRICT+'";\n'+this.filterPrefix()+"var fn="+this.generateFunction("fn","s,l,a,i")+e+this.watchFns()+"return fn;";e=(new Function("$filter","ensureSafeMemberName","ensureSafeObject",
"ensureSafeFunction","getStringValue","ensureSafeAssignContext","ifDefined","plus","text",e))(this.$filter,Xa,Aa,od,hg,Ib,lg,pd,a);this.state=this.stage=v;e.literal=td(c);e.constant=c.constant;return e},USE:"use",STRICT:"strict",watchFns:function(){var a=[],b=this.state.inputs,d=this;n(b,function(b){a.push("var "+b+"="+d.generateFunction(b,"s"))});b.length&&a.push("fn.inputs=["+b.join(",")+"];");return a.join("")},generateFunction:function(a,b){return"function("+b+"){"+this.varsPrefix(a)+this.body(a)+
"};"},filterPrefix:function(){var a=[],b=this;n(this.state.filters,function(d,c){a.push(d+"=$filter("+b.escape(c)+")")});return a.length?"var "+a.join(",")+";":""},varsPrefix:function(a){return this.state[a].vars.length?"var "+this.state[a].vars.join(",")+";":""},body:function(a){return this.state[a].body.join("")},recurse:function(a,b,d,c,e,f){var g,h,k=this,l,m;c=c||B;if(!f&&y(a.watchId))b=b||this.nextId(),this.if_("i",this.lazyAssign(b,this.computedMember("i",a.watchId)),this.lazyRecurse(a,b,d,
c,e,!0));else switch(a.type){case q.Program:n(a.body,function(b,c){k.recurse(b.expression,v,v,function(a){h=a});c!==a.body.length-1?k.current().body.push(h,";"):k.return_(h)});break;case q.Literal:m=this.escape(a.value);this.assign(b,m);c(m);break;case q.UnaryExpression:this.recurse(a.argument,v,v,function(a){h=a});m=a.operator+"("+this.ifDefined(h,0)+")";this.assign(b,m);c(m);break;case q.BinaryExpression:this.recurse(a.left,v,v,function(a){g=a});this.recurse(a.right,v,v,function(a){h=a});m="+"===
a.operator?this.plus(g,h):"-"===a.operator?this.ifDefined(g,0)+a.operator+this.ifDefined(h,0):"("+g+")"+a.operator+"("+h+")";this.assign(b,m);c(m);break;case q.LogicalExpression:b=b||this.nextId();k.recurse(a.left,b);k.if_("&&"===a.operator?b:k.not(b),k.lazyRecurse(a.right,b));c(b);break;case q.ConditionalExpression:b=b||this.nextId();k.recurse(a.test,b);k.if_(b,k.lazyRecurse(a.alternate,b),k.lazyRecurse(a.consequent,b));c(b);break;case q.Identifier:b=b||this.nextId();d&&(d.context="inputs"===k.stage?
"s":this.assign(this.nextId(),this.getHasOwnProperty("l",a.name)+"?l:s"),d.computed=!1,d.name=a.name);Xa(a.name);k.if_("inputs"===k.stage||k.not(k.getHasOwnProperty("l",a.name)),function(){k.if_("inputs"===k.stage||"s",function(){e&&1!==e&&k.if_(k.not(k.nonComputedMember("s",a.name)),k.lazyAssign(k.nonComputedMember("s",a.name),"{}"));k.assign(b,k.nonComputedMember("s",a.name))})},b&&k.lazyAssign(b,k.nonComputedMember("l",a.name)));(k.state.expensiveChecks||Jb(a.name))&&k.addEnsureSafeObject(b);c(b);
break;case q.MemberExpression:g=d&&(d.context=this.nextId())||this.nextId();b=b||this.nextId();k.recurse(a.object,g,v,function(){k.if_(k.notNull(g),function(){e&&1!==e&&k.addEnsureSafeAssignContext(g);if(a.computed)h=k.nextId(),k.recurse(a.property,h),k.getStringValue(h),k.addEnsureSafeMemberName(h),e&&1!==e&&k.if_(k.not(k.computedMember(g,h)),k.lazyAssign(k.computedMember(g,h),"{}")),m=k.ensureSafeObject(k.computedMember(g,h)),k.assign(b,m),d&&(d.computed=!0,d.name=h);else{Xa(a.property.name);e&&
1!==e&&k.if_(k.not(k.nonComputedMember(g,a.property.name)),k.lazyAssign(k.nonComputedMember(g,a.property.name),"{}"));m=k.nonComputedMember(g,a.property.name);if(k.state.expensiveChecks||Jb(a.property.name))m=k.ensureSafeObject(m);k.assign(b,m);d&&(d.computed=!1,d.name=a.property.name)}},function(){k.assign(b,"undefined")});c(b)},!!e);break;case q.CallExpression:b=b||this.nextId();a.filter?(h=k.filter(a.callee.name),l=[],n(a.arguments,function(a){var b=k.nextId();k.recurse(a,b);l.push(b)}),m=h+"("+
l.join(",")+")",k.assign(b,m),c(b)):(h=k.nextId(),g={},l=[],k.recurse(a.callee,h,g,function(){k.if_(k.notNull(h),function(){k.addEnsureSafeFunction(h);n(a.arguments,function(a){k.recurse(a,k.nextId(),v,function(a){l.push(k.ensureSafeObject(a))})});g.name?(k.state.expensiveChecks||k.addEnsureSafeObject(g.context),m=k.member(g.context,g.name,g.computed)+"("+l.join(",")+")"):m=h+"("+l.join(",")+")";m=k.ensureSafeObject(m);k.assign(b,m)},function(){k.assign(b,"undefined")});c(b)}));break;case q.AssignmentExpression:h=
this.nextId();g={};if(!rd(a.left))throw ka("lval");this.recurse(a.left,v,g,function(){k.if_(k.notNull(g.context),function(){k.recurse(a.right,h);k.addEnsureSafeObject(k.member(g.context,g.name,g.computed));k.addEnsureSafeAssignContext(g.context);m=k.member(g.context,g.name,g.computed)+a.operator+h;k.assign(b,m);c(b||m)})},1);break;case q.ArrayExpression:l=[];n(a.elements,function(a){k.recurse(a,k.nextId(),v,function(a){l.push(a)})});m="["+l.join(",")+"]";this.assign(b,m);c(m);break;case q.ObjectExpression:l=
[];n(a.properties,function(a){k.recurse(a.value,k.nextId(),v,function(b){l.push(k.escape(a.key.type===q.Identifier?a.key.name:""+a.key.value)+":"+b)})});m="{"+l.join(",")+"}";this.assign(b,m);c(m);break;case q.ThisExpression:this.assign(b,"s");c("s");break;case q.LocalsExpression:this.assign(b,"l");c("l");break;case q.NGValueParameter:this.assign(b,"v"),c("v")}},getHasOwnProperty:function(a,b){var d=a+"."+b,c=this.current().own;c.hasOwnProperty(d)||(c[d]=this.nextId(!1,a+"&&("+this.escape(b)+" in "+
a+")"));return c[d]},assign:function(a,b){if(a)return this.current().body.push(a,"=",b,";"),a},filter:function(a){this.state.filters.hasOwnProperty(a)||(this.state.filters[a]=this.nextId(!0));return this.state.filters[a]},ifDefined:function(a,b){return"ifDefined("+a+","+this.escape(b)+")"},plus:function(a,b){return"plus("+a+","+b+")"},return_:function(a){this.current().body.push("return ",a,";")},if_:function(a,b,d){if(!0===a)b();else{var c=this.current().body;c.push("if(",a,"){");b();c.push("}");
d&&(c.push("else{"),d(),c.push("}"))}},not:function(a){return"!("+a+")"},notNull:function(a){return a+"!=null"},nonComputedMember:function(a,b){return a+"."+b},computedMember:function(a,b){return a+"["+b+"]"},member:function(a,b,d){return d?this.computedMember(a,b):this.nonComputedMember(a,b)},addEnsureSafeObject:function(a){this.current().body.push(this.ensureSafeObject(a),";")},addEnsureSafeMemberName:function(a){this.current().body.push(this.ensureSafeMemberName(a),";")},addEnsureSafeFunction:function(a){this.current().body.push(this.ensureSafeFunction(a),
";")},addEnsureSafeAssignContext:function(a){this.current().body.push(this.ensureSafeAssignContext(a),";")},ensureSafeObject:function(a){return"ensureSafeObject("+a+",text)"},ensureSafeMemberName:function(a){return"ensureSafeMemberName("+a+",text)"},ensureSafeFunction:function(a){return"ensureSafeFunction("+a+",text)"},getStringValue:function(a){this.assign(a,"getStringValue("+a+")")},ensureSafeAssignContext:function(a){return"ensureSafeAssignContext("+a+",text)"},lazyRecurse:function(a,b,d,c,e,f){var g=
this;return function(){g.recurse(a,b,d,c,e,f)}},lazyAssign:function(a,b){var d=this;return function(){d.assign(a,b)}},stringEscapeRegex:/[^ a-zA-Z0-9]/g,stringEscapeFn:function(a){return"\\u"+("0000"+a.charCodeAt(0).toString(16)).slice(-4)},escape:function(a){if(F(a))return"'"+a.replace(this.stringEscapeRegex,this.stringEscapeFn)+"'";if(N(a))return a.toString();if(!0===a)return"true";if(!1===a)return"false";if(null===a)return"null";if("undefined"===typeof a)return"undefined";throw ka("esc");},nextId:function(a,
b){var d="v"+this.state.nextId++;a||this.current().vars.push(d+(b?"="+b:""));return d},current:function(){return this.state[this.state.computing]}};vd.prototype={compile:function(a,b){var d=this,c=this.astBuilder.ast(a);this.expression=a;this.expensiveChecks=b;R(c,d.$filter);var e,f;if(e=sd(c))f=this.recurse(e);e=qd(c.body);var g;e&&(g=[],n(e,function(a,b){var c=d.recurse(a);a.input=c;g.push(c);a.watchId=b}));var h=[];n(c.body,function(a){h.push(d.recurse(a.expression))});e=0===c.body.length?function(){}:
1===c.body.length?h[0]:function(a,b){var c;n(h,function(d){c=d(a,b)});return c};f&&(e.assign=function(a,b,c){return f(a,c,b)});g&&(e.inputs=g);e.literal=td(c);e.constant=c.constant;return e},recurse:function(a,b,d){var c,e,f=this,g;if(a.input)return this.inputs(a.input,a.watchId);switch(a.type){case q.Literal:return this.value(a.value,b);case q.UnaryExpression:return e=this.recurse(a.argument),this["unary"+a.operator](e,b);case q.BinaryExpression:return c=this.recurse(a.left),e=this.recurse(a.right),
this["binary"+a.operator](c,e,b);case q.LogicalExpression:return c=this.recurse(a.left),e=this.recurse(a.right),this["binary"+a.operator](c,e,b);case q.ConditionalExpression:return this["ternary?:"](this.recurse(a.test),this.recurse(a.alternate),this.recurse(a.consequent),b);case q.Identifier:return Xa(a.name,f.expression),f.identifier(a.name,f.expensiveChecks||Jb(a.name),b,d,f.expression);case q.MemberExpression:return c=this.recurse(a.object,!1,!!d),a.computed||(Xa(a.property.name,f.expression),
e=a.property.name),a.computed&&(e=this.recurse(a.property)),a.computed?this.computedMember(c,e,b,d,f.expression):this.nonComputedMember(c,e,f.expensiveChecks,b,d,f.expression);case q.CallExpression:return g=[],n(a.arguments,function(a){g.push(f.recurse(a))}),a.filter&&(e=this.$filter(a.callee.name)),a.filter||(e=this.recurse(a.callee,!0)),a.filter?function(a,c,d,f){for(var r=[],n=0;n<g.length;++n)r.push(g[n](a,c,d,f));a=e.apply(v,r,f);return b?{context:v,name:v,value:a}:a}:function(a,c,d,m){var r=
e(a,c,d,m),n;if(null!=r.value){Aa(r.context,f.expression);od(r.value,f.expression);n=[];for(var q=0;q<g.length;++q)n.push(Aa(g[q](a,c,d,m),f.expression));n=Aa(r.value.apply(r.context,n),f.expression)}return b?{value:n}:n};case q.AssignmentExpression:return c=this.recurse(a.left,!0,1),e=this.recurse(a.right),function(a,d,g,m){var r=c(a,d,g,m);a=e(a,d,g,m);Aa(r.value,f.expression);Ib(r.context);r.context[r.name]=a;return b?{value:a}:a};case q.ArrayExpression:return g=[],n(a.elements,function(a){g.push(f.recurse(a))}),
function(a,c,d,e){for(var f=[],n=0;n<g.length;++n)f.push(g[n](a,c,d,e));return b?{value:f}:f};case q.ObjectExpression:return g=[],n(a.properties,function(a){g.push({key:a.key.type===q.Identifier?a.key.name:""+a.key.value,value:f.recurse(a.value)})}),function(a,c,d,e){for(var f={},n=0;n<g.length;++n)f[g[n].key]=g[n].value(a,c,d,e);return b?{value:f}:f};case q.ThisExpression:return function(a){return b?{value:a}:a};case q.LocalsExpression:return function(a,c){return b?{value:c}:c};case q.NGValueParameter:return function(a,
c,d,e){return b?{value:d}:d}}},"unary+":function(a,b){return function(d,c,e,f){d=a(d,c,e,f);d=y(d)?+d:0;return b?{value:d}:d}},"unary-":function(a,b){return function(d,c,e,f){d=a(d,c,e,f);d=y(d)?-d:0;return b?{value:d}:d}},"unary!":function(a,b){return function(d,c,e,f){d=!a(d,c,e,f);return b?{value:d}:d}},"binary+":function(a,b,d){return function(c,e,f,g){var h=a(c,e,f,g);c=b(c,e,f,g);h=pd(h,c);return d?{value:h}:h}},"binary-":function(a,b,d){return function(c,e,f,g){var h=a(c,e,f,g);c=b(c,e,f,g);
h=(y(h)?h:0)-(y(c)?c:0);return d?{value:h}:h}},"binary*":function(a,b,d){return function(c,e,f,g){c=a(c,e,f,g)*b(c,e,f,g);return d?{value:c}:c}},"binary/":function(a,b,d){return function(c,e,f,g){c=a(c,e,f,g)/b(c,e,f,g);return d?{value:c}:c}},"binary%":function(a,b,d){return function(c,e,f,g){c=a(c,e,f,g)%b(c,e,f,g);return d?{value:c}:c}},"binary===":function(a,b,d){return function(c,e,f,g){c=a(c,e,f,g)===b(c,e,f,g);return d?{value:c}:c}},"binary!==":function(a,b,d){return function(c,e,f,g){c=a(c,
e,f,g)!==b(c,e,f,g);return d?{value:c}:c}},"binary==":function(a,b,d){return function(c,e,f,g){c=a(c,e,f,g)==b(c,e,f,g);return d?{value:c}:c}},"binary!=":function(a,b,d){return function(c,e,f,g){c=a(c,e,f,g)!=b(c,e,f,g);return d?{value:c}:c}},"binary<":function(a,b,d){return function(c,e,f,g){c=a(c,e,f,g)<b(c,e,f,g);return d?{value:c}:c}},"binary>":function(a,b,d){return function(c,e,f,g){c=a(c,e,f,g)>b(c,e,f,g);return d?{value:c}:c}},"binary<=":function(a,b,d){return function(c,e,f,g){c=a(c,e,f,
g)<=b(c,e,f,g);return d?{value:c}:c}},"binary>=":function(a,b,d){return function(c,e,f,g){c=a(c,e,f,g)>=b(c,e,f,g);return d?{value:c}:c}},"binary&&":function(a,b,d){return function(c,e,f,g){c=a(c,e,f,g)&&b(c,e,f,g);return d?{value:c}:c}},"binary||":function(a,b,d){return function(c,e,f,g){c=a(c,e,f,g)||b(c,e,f,g);return d?{value:c}:c}},"ternary?:":function(a,b,d,c){return function(e,f,g,h){e=a(e,f,g,h)?b(e,f,g,h):d(e,f,g,h);return c?{value:e}:e}},value:function(a,b){return function(){return b?{context:v,
name:v,value:a}:a}},identifier:function(a,b,d,c,e){return function(f,g,h,k){f=g&&a in g?g:f;c&&1!==c&&f&&!f[a]&&(f[a]={});g=f?f[a]:v;b&&Aa(g,e);return d?{context:f,name:a,value:g}:g}},computedMember:function(a,b,d,c,e){return function(f,g,h,k){var l=a(f,g,h,k),m,n;null!=l&&(m=b(f,g,h,k),m+="",Xa(m,e),c&&1!==c&&(Ib(l),l&&!l[m]&&(l[m]={})),n=l[m],Aa(n,e));return d?{context:l,name:m,value:n}:n}},nonComputedMember:function(a,b,d,c,e,f){return function(g,h,k,l){g=a(g,h,k,l);e&&1!==e&&(Ib(g),g&&!g[b]&&
(g[b]={}));h=null!=g?g[b]:v;(d||Jb(b))&&Aa(h,f);return c?{context:g,name:b,value:h}:h}},inputs:function(a,b){return function(d,c,e,f){return f?f[b]:a(d,c,e)}}};var jc=function(a,b,d){this.lexer=a;this.$filter=b;this.options=d;this.ast=new q(this.lexer);this.astCompiler=d.csp?new vd(this.ast,b):new ud(this.ast,b)};jc.prototype={constructor:jc,parse:function(a){return this.astCompiler.compile(a,this.options.expensiveChecks)}};var mg=Object.prototype.valueOf,Ba=H("$sce"),qa={HTML:"html",CSS:"css",URL:"url",
RESOURCE_URL:"resourceUrl",JS:"js"},ja=H("$compile"),Y=W.createElement("a"),zd=za(O.location.href);Ad.$inject=["$document"];Lc.$inject=["$provide"];var Hd=22,Gd=".",lc="0";Bd.$inject=["$locale"];Dd.$inject=["$locale"];var yg={yyyy:aa("FullYear",4),yy:aa("FullYear",2,0,!0),y:aa("FullYear",1),MMMM:Lb("Month"),MMM:Lb("Month",!0),MM:aa("Month",2,1),M:aa("Month",1,1),dd:aa("Date",2),d:aa("Date",1),HH:aa("Hours",2),H:aa("Hours",1),hh:aa("Hours",2,-12),h:aa("Hours",1,-12),mm:aa("Minutes",2),m:aa("Minutes",
1),ss:aa("Seconds",2),s:aa("Seconds",1),sss:aa("Milliseconds",3),EEEE:Lb("Day"),EEE:Lb("Day",!0),a:function(a,b){return 12>a.getHours()?b.AMPMS[0]:b.AMPMS[1]},Z:function(a,b,d){a=-1*d;return a=(0<=a?"+":"")+(Kb(Math[0<a?"floor":"ceil"](a/60),2)+Kb(Math.abs(a%60),2))},ww:Jd(2),w:Jd(1),G:mc,GG:mc,GGG:mc,GGGG:function(a,b){return 0>=a.getFullYear()?b.ERANAMES[0]:b.ERANAMES[1]}},xg=/((?:[^yMdHhmsaZEwG']+)|(?:'(?:[^']|'')*')|(?:E+|y+|M+|d+|H+|h+|m+|s+|a|Z|G+|w+))(.*)/,wg=/^\-?\d+$/;Cd.$inject=["$locale"];
var rg=ba(G),sg=ba(ub);Ed.$inject=["$parse"];var oe=ba({restrict:"E",compile:function(a,b){if(!b.href&&!b.xlinkHref)return function(a,b){if("a"===b[0].nodeName.toLowerCase()){var e="[object SVGAnimatedString]"===ga.call(b.prop("href"))?"xlink:href":"href";b.on("click",function(a){b.attr(e)||a.preventDefault()})}}}}),vb={};n(Db,function(a,b){function d(a,d,e){a.$watch(e[c],function(a){e.$set(b,!!a)})}if("multiple"!=a){var c=va("ng-"+b),e=d;"checked"===a&&(e=function(a,b,e){e.ngModel!==e[c]&&d(a,b,
e)});vb[c]=function(){return{restrict:"A",priority:100,link:e}}}});n(cd,function(a,b){vb[b]=function(){return{priority:100,link:function(a,c,e){if("ngPattern"===b&&"/"==e.ngPattern.charAt(0)&&(c=e.ngPattern.match(Ag))){e.$set("ngPattern",new RegExp(c[1],c[2]));return}a.$watch(e[b],function(a){e.$set(b,a)})}}}});n(["src","srcset","href"],function(a){var b=va("ng-"+a);vb[b]=function(){return{priority:99,link:function(d,c,e){var f=a,g=a;"href"===a&&"[object SVGAnimatedString]"===ga.call(c.prop("href"))&&
(g="xlinkHref",e.$attr[g]="xlink:href",f=null);e.$observe(b,function(b){b?(e.$set(g,b),xa&&f&&c.prop(f,e[g])):"href"===a&&e.$set(g,null)})}}}});var Mb={$addControl:B,$$renameControl:function(a,b){a.$name=b},$removeControl:B,$setValidity:B,$setDirty:B,$setPristine:B,$setSubmitted:B};Kd.$inject=["$element","$attrs","$scope","$animate","$interpolate"];var Sd=function(a){return["$timeout","$parse",function(b,d){function c(a){return""===a?d('this[""]').assign:d(a).assign||B}return{name:"form",restrict:a?
"EAC":"E",require:["form","^^?form"],controller:Kd,compile:function(d,f){d.addClass(Ya).addClass(ob);var g=f.name?"name":a&&f.ngForm?"ngForm":!1;return{pre:function(a,d,e,f){var n=f[0];if(!("action"in e)){var s=function(b){a.$apply(function(){n.$commitViewValue();n.$setSubmitted()});b.preventDefault()};d[0].addEventListener("submit",s,!1);d.on("$destroy",function(){b(function(){d[0].removeEventListener("submit",s,!1)},0,!1)})}(f[1]||n.$$parentForm).$addControl(n);var q=g?c(n.$name):B;g&&(q(a,n),e.$observe(g,
function(b){n.$name!==b&&(q(a,v),n.$$parentForm.$$renameControl(n,b),q=c(n.$name),q(a,n))}));d.on("$destroy",function(){n.$$parentForm.$removeControl(n);q(a,v);T(n,Mb)})}}}}}]},pe=Sd(),Ce=Sd(!0),zg=/\d{4}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d\.\d+([+-][0-2]\d:[0-5]\d|Z)/,Ig=/^[a-z][a-z\d.+-]*:\/*(?:[^:@]+(?::[^@]+)?@)?(?:[^\s:/?#]+|\[[a-f\d:]+\])(?::\d+)?(?:\/[^?#]*)?(?:\?[^#]*)?(?:#.*)?$/i,Jg=/^[a-z0-9!#$%&'*+\/=?^_`{|}~.-]+@[a-z0-9]([a-z0-9-]*[a-z0-9])?(\.[a-z0-9]([a-z0-9-]*[a-z0-9])?)*$/i,Kg=
/^\s*(\-|\+)?(\d+|(\d*(\.\d*)))([eE][+-]?\d+)?\s*$/,Td=/^(\d{4})-(\d{2})-(\d{2})$/,Ud=/^(\d{4})-(\d\d)-(\d\d)T(\d\d):(\d\d)(?::(\d\d)(\.\d{1,3})?)?$/,pc=/^(\d{4})-W(\d\d)$/,Vd=/^(\d{4})-(\d\d)$/,Wd=/^(\d\d):(\d\d)(?::(\d\d)(\.\d{1,3})?)?$/,Xd={text:function(a,b,d,c,e,f){lb(a,b,d,c,e,f);nc(c)},date:mb("date",Td,Ob(Td,["yyyy","MM","dd"]),"yyyy-MM-dd"),"datetime-local":mb("datetimelocal",Ud,Ob(Ud,"yyyy MM dd HH mm ss sss".split(" ")),"yyyy-MM-ddTHH:mm:ss.sss"),time:mb("time",Wd,Ob(Wd,["HH","mm","ss",
"sss"]),"HH:mm:ss.sss"),week:mb("week",pc,function(a,b){if(V(a))return a;if(F(a)){pc.lastIndex=0;var d=pc.exec(a);if(d){var c=+d[1],e=+d[2],f=d=0,g=0,h=0,k=Id(c),e=7*(e-1);b&&(d=b.getHours(),f=b.getMinutes(),g=b.getSeconds(),h=b.getMilliseconds());return new Date(c,0,k.getDate()+e,d,f,g,h)}}return NaN},"yyyy-Www"),month:mb("month",Vd,Ob(Vd,["yyyy","MM"]),"yyyy-MM"),number:function(a,b,d,c,e,f){Md(a,b,d,c);lb(a,b,d,c,e,f);c.$$parserName="number";c.$parsers.push(function(a){return c.$isEmpty(a)?null:
Kg.test(a)?parseFloat(a):v});c.$formatters.push(function(a){if(!c.$isEmpty(a)){if(!N(a))throw nb("numfmt",a);a=a.toString()}return a});if(y(d.min)||d.ngMin){var g;c.$validators.min=function(a){return c.$isEmpty(a)||x(g)||a>=g};d.$observe("min",function(a){y(a)&&!N(a)&&(a=parseFloat(a,10));g=N(a)&&!isNaN(a)?a:v;c.$validate()})}if(y(d.max)||d.ngMax){var h;c.$validators.max=function(a){return c.$isEmpty(a)||x(h)||a<=h};d.$observe("max",function(a){y(a)&&!N(a)&&(a=parseFloat(a,10));h=N(a)&&!isNaN(a)?
a:v;c.$validate()})}},url:function(a,b,d,c,e,f){lb(a,b,d,c,e,f);nc(c);c.$$parserName="url";c.$validators.url=function(a,b){var d=a||b;return c.$isEmpty(d)||Ig.test(d)}},email:function(a,b,d,c,e,f){lb(a,b,d,c,e,f);nc(c);c.$$parserName="email";c.$validators.email=function(a,b){var d=a||b;return c.$isEmpty(d)||Jg.test(d)}},radio:function(a,b,d,c){x(d.name)&&b.attr("name",++pb);b.on("click",function(a){b[0].checked&&c.$setViewValue(d.value,a&&a.type)});c.$render=function(){b[0].checked=d.value==c.$viewValue};
d.$observe("value",c.$render)},checkbox:function(a,b,d,c,e,f,g,h){var k=Nd(h,a,"ngTrueValue",d.ngTrueValue,!0),l=Nd(h,a,"ngFalseValue",d.ngFalseValue,!1);b.on("click",function(a){c.$setViewValue(b[0].checked,a&&a.type)});c.$render=function(){b[0].checked=c.$viewValue};c.$isEmpty=function(a){return!1===a};c.$formatters.push(function(a){return oa(a,k)});c.$parsers.push(function(a){return a?k:l})},hidden:B,button:B,submit:B,reset:B,file:B},Fc=["$browser","$sniffer","$filter","$parse",function(a,b,d,
c){return{restrict:"E",require:["?ngModel"],link:{pre:function(e,f,g,h){h[0]&&(Xd[G(g.type)]||Xd.text)(e,f,g,h[0],b,a,d,c)}}}}],Lg=/^(true|false|\d+)$/,Ue=function(){return{restrict:"A",priority:100,compile:function(a,b){return Lg.test(b.ngValue)?function(a,b,e){e.$set("value",a.$eval(e.ngValue))}:function(a,b,e){a.$watch(e.ngValue,function(a){e.$set("value",a)})}}}},ue=["$compile",function(a){return{restrict:"AC",compile:function(b){a.$$addBindingClass(b);return function(b,c,e){a.$$addBindingInfo(c,
e.ngBind);c=c[0];b.$watch(e.ngBind,function(a){c.textContent=x(a)?"":a})}}}}],we=["$interpolate","$compile",function(a,b){return{compile:function(d){b.$$addBindingClass(d);return function(c,d,f){c=a(d.attr(f.$attr.ngBindTemplate));b.$$addBindingInfo(d,c.expressions);d=d[0];f.$observe("ngBindTemplate",function(a){d.textContent=x(a)?"":a})}}}}],ve=["$sce","$parse","$compile",function(a,b,d){return{restrict:"A",compile:function(c,e){var f=b(e.ngBindHtml),g=b(e.ngBindHtml,function(a){return(a||"").toString()});
d.$$addBindingClass(c);return function(b,c,e){d.$$addBindingInfo(c,e.ngBindHtml);b.$watch(g,function(){c.html(a.getTrustedHtml(f(b))||"")})}}}}],Te=ba({restrict:"A",require:"ngModel",link:function(a,b,d,c){c.$viewChangeListeners.push(function(){a.$eval(d.ngChange)})}}),xe=oc("",!0),ze=oc("Odd",0),ye=oc("Even",1),Ae=Ma({compile:function(a,b){b.$set("ngCloak",v);a.removeClass("ng-cloak")}}),Be=[function(){return{restrict:"A",scope:!0,controller:"@",priority:500}}],Kc={},Mg={blur:!0,focus:!0};n("click dblclick mousedown mouseup mouseover mouseout mousemove mouseenter mouseleave keydown keyup keypress submit focus blur copy cut paste".split(" "),
function(a){var b=va("ng-"+a);Kc[b]=["$parse","$rootScope",function(d,c){return{restrict:"A",compile:function(e,f){var g=d(f[b],null,!0);return function(b,d){d.on(a,function(d){var e=function(){g(b,{$event:d})};Mg[a]&&c.$$phase?b.$evalAsync(e):b.$apply(e)})}}}}]});var Ee=["$animate",function(a){return{multiElement:!0,transclude:"element",priority:600,terminal:!0,restrict:"A",$$tlb:!0,link:function(b,d,c,e,f){var g,h,k;b.$watch(c.ngIf,function(b){b?h||f(function(b,e){h=e;b[b.length++]=W.createComment(" end ngIf: "+
c.ngIf+" ");g={clone:b};a.enter(b,d.parent(),d)}):(k&&(k.remove(),k=null),h&&(h.$destroy(),h=null),g&&(k=tb(g.clone),a.leave(k).then(function(){k=null}),g=null))})}}}],Fe=["$templateRequest","$anchorScroll","$animate",function(a,b,d){return{restrict:"ECA",priority:400,terminal:!0,transclude:"element",controller:ia.noop,compile:function(c,e){var f=e.ngInclude||e.src,g=e.onload||"",h=e.autoscroll;return function(c,e,m,n,s){var q=0,v,t,p,w=function(){t&&(t.remove(),t=null);v&&(v.$destroy(),v=null);p&&
(d.leave(p).then(function(){t=null}),t=p,p=null)};c.$watch(f,function(f){var m=function(){!y(h)||h&&!c.$eval(h)||b()},z=++q;f?(a(f,!0).then(function(a){if(!c.$$destroyed&&z===q){var b=c.$new();n.template=a;a=s(b,function(a){w();d.enter(a,null,e).then(m)});v=b;p=a;v.$emit("$includeContentLoaded",f);c.$eval(g)}},function(){c.$$destroyed||z!==q||(w(),c.$emit("$includeContentError",f))}),c.$emit("$includeContentRequested",f)):(w(),n.template=null)})}}}}],We=["$compile",function(a){return{restrict:"ECA",
priority:-400,require:"ngInclude",link:function(b,d,c,e){ga.call(d[0]).match(/SVG/)?(d.empty(),a(Nc(e.template,W).childNodes)(b,function(a){d.append(a)},{futureParentElement:d})):(d.html(e.template),a(d.contents())(b))}}}],Ge=Ma({priority:450,compile:function(){return{pre:function(a,b,d){a.$eval(d.ngInit)}}}}),Se=function(){return{restrict:"A",priority:100,require:"ngModel",link:function(a,b,d,c){var e=b.attr(d.$attr.ngList)||", ",f="false"!==d.ngTrim,g=f?X(e):e;c.$parsers.push(function(a){if(!x(a)){var b=
[];a&&n(a.split(g),function(a){a&&b.push(f?X(a):a)});return b}});c.$formatters.push(function(a){return L(a)?a.join(e):v});c.$isEmpty=function(a){return!a||!a.length}}}},ob="ng-valid",Od="ng-invalid",Ya="ng-pristine",Nb="ng-dirty",Qd="ng-pending",nb=H("ngModel"),Ng=["$scope","$exceptionHandler","$attrs","$element","$parse","$animate","$timeout","$rootScope","$q","$interpolate",function(a,b,d,c,e,f,g,h,k,l){this.$modelValue=this.$viewValue=Number.NaN;this.$$rawModelValue=v;this.$validators={};this.$asyncValidators=
{};this.$parsers=[];this.$formatters=[];this.$viewChangeListeners=[];this.$untouched=!0;this.$touched=!1;this.$pristine=!0;this.$dirty=!1;this.$valid=!0;this.$invalid=!1;this.$error={};this.$$success={};this.$pending=v;this.$name=l(d.name||"",!1)(a);this.$$parentForm=Mb;var m=e(d.ngModel),r=m.assign,q=m,I=r,K=null,t,p=this;this.$$setOptions=function(a){if((p.$options=a)&&a.getterSetter){var b=e(d.ngModel+"()"),f=e(d.ngModel+"($$$p)");q=function(a){var c=m(a);D(c)&&(c=b(a));return c};I=function(a,
b){D(m(a))?f(a,{$$$p:p.$modelValue}):r(a,p.$modelValue)}}else if(!m.assign)throw nb("nonassign",d.ngModel,ta(c));};this.$render=B;this.$isEmpty=function(a){return x(a)||""===a||null===a||a!==a};this.$$updateEmptyClasses=function(a){p.$isEmpty(a)?(f.removeClass(c,"ng-not-empty"),f.addClass(c,"ng-empty")):(f.removeClass(c,"ng-empty"),f.addClass(c,"ng-not-empty"))};var w=0;Ld({ctrl:this,$element:c,set:function(a,b){a[b]=!0},unset:function(a,b){delete a[b]},$animate:f});this.$setPristine=function(){p.$dirty=
!1;p.$pristine=!0;f.removeClass(c,Nb);f.addClass(c,Ya)};this.$setDirty=function(){p.$dirty=!0;p.$pristine=!1;f.removeClass(c,Ya);f.addClass(c,Nb);p.$$parentForm.$setDirty()};this.$setUntouched=function(){p.$touched=!1;p.$untouched=!0;f.setClass(c,"ng-untouched","ng-touched")};this.$setTouched=function(){p.$touched=!0;p.$untouched=!1;f.setClass(c,"ng-touched","ng-untouched")};this.$rollbackViewValue=function(){g.cancel(K);p.$viewValue=p.$$lastCommittedViewValue;p.$render()};this.$validate=function(){if(!N(p.$modelValue)||
!isNaN(p.$modelValue)){var a=p.$$rawModelValue,b=p.$valid,c=p.$modelValue,d=p.$options&&p.$options.allowInvalid;p.$$runValidators(a,p.$$lastCommittedViewValue,function(e){d||b===e||(p.$modelValue=e?a:v,p.$modelValue!==c&&p.$$writeModelToScope())})}};this.$$runValidators=function(a,b,c){function d(){var c=!0;n(p.$validators,function(d,e){var g=d(a,b);c=c&&g;f(e,g)});return c?!0:(n(p.$asyncValidators,function(a,b){f(b,null)}),!1)}function e(){var c=[],d=!0;n(p.$asyncValidators,function(e,g){var h=e(a,
b);if(!h||!D(h.then))throw nb("nopromise",h);f(g,v);c.push(h.then(function(){f(g,!0)},function(a){d=!1;f(g,!1)}))});c.length?k.all(c).then(function(){g(d)},B):g(!0)}function f(a,b){h===w&&p.$setValidity(a,b)}function g(a){h===w&&c(a)}w++;var h=w;(function(){var a=p.$$parserName||"parse";if(x(t))f(a,null);else return t||(n(p.$validators,function(a,b){f(b,null)}),n(p.$asyncValidators,function(a,b){f(b,null)})),f(a,t),t;return!0})()?d()?e():g(!1):g(!1)};this.$commitViewValue=function(){var a=p.$viewValue;
g.cancel(K);if(p.$$lastCommittedViewValue!==a||""===a&&p.$$hasNativeValidators)p.$$updateEmptyClasses(a),p.$$lastCommittedViewValue=a,p.$pristine&&this.$setDirty(),this.$$parseAndValidate()};this.$$parseAndValidate=function(){var b=p.$$lastCommittedViewValue;if(t=x(b)?v:!0)for(var c=0;c<p.$parsers.length;c++)if(b=p.$parsers[c](b),x(b)){t=!1;break}N(p.$modelValue)&&isNaN(p.$modelValue)&&(p.$modelValue=q(a));var d=p.$modelValue,e=p.$options&&p.$options.allowInvalid;p.$$rawModelValue=b;e&&(p.$modelValue=
b,p.$modelValue!==d&&p.$$writeModelToScope());p.$$runValidators(b,p.$$lastCommittedViewValue,function(a){e||(p.$modelValue=a?b:v,p.$modelValue!==d&&p.$$writeModelToScope())})};this.$$writeModelToScope=function(){I(a,p.$modelValue);n(p.$viewChangeListeners,function(a){try{a()}catch(c){b(c)}})};this.$setViewValue=function(a,b){p.$viewValue=a;p.$options&&!p.$options.updateOnDefault||p.$$debounceViewValueCommit(b)};this.$$debounceViewValueCommit=function(b){var c=0,d=p.$options;d&&y(d.debounce)&&(d=d.debounce,
N(d)?c=d:N(d[b])?c=d[b]:N(d["default"])&&(c=d["default"]));g.cancel(K);c?K=g(function(){p.$commitViewValue()},c):h.$$phase?p.$commitViewValue():a.$apply(function(){p.$commitViewValue()})};a.$watch(function(){var b=q(a);if(b!==p.$modelValue&&(p.$modelValue===p.$modelValue||b===b)){p.$modelValue=p.$$rawModelValue=b;t=v;for(var c=p.$formatters,d=c.length,e=b;d--;)e=c[d](e);p.$viewValue!==e&&(p.$$updateEmptyClasses(e),p.$viewValue=p.$$lastCommittedViewValue=e,p.$render(),p.$$runValidators(b,e,B))}return b})}],
Re=["$rootScope",function(a){return{restrict:"A",require:["ngModel","^?form","^?ngModelOptions"],controller:Ng,priority:1,compile:function(b){b.addClass(Ya).addClass("ng-untouched").addClass(ob);return{pre:function(a,b,e,f){var g=f[0];b=f[1]||g.$$parentForm;g.$$setOptions(f[2]&&f[2].$options);b.$addControl(g);e.$observe("name",function(a){g.$name!==a&&g.$$parentForm.$$renameControl(g,a)});a.$on("$destroy",function(){g.$$parentForm.$removeControl(g)})},post:function(b,c,e,f){var g=f[0];if(g.$options&&
g.$options.updateOn)c.on(g.$options.updateOn,function(a){g.$$debounceViewValueCommit(a&&a.type)});c.on("blur",function(c){g.$touched||(a.$$phase?b.$evalAsync(g.$setTouched):b.$apply(g.$setTouched))})}}}}}],Og=/(\s+|^)default(\s+|$)/,Ve=function(){return{restrict:"A",controller:["$scope","$attrs",function(a,b){var d=this;this.$options=Oa(a.$eval(b.ngModelOptions));y(this.$options.updateOn)?(this.$options.updateOnDefault=!1,this.$options.updateOn=X(this.$options.updateOn.replace(Og,function(){d.$options.updateOnDefault=
!0;return" "}))):this.$options.updateOnDefault=!0}]}},He=Ma({terminal:!0,priority:1E3}),Pg=H("ngOptions"),Qg=/^\s*([\s\S]+?)(?:\s+as\s+([\s\S]+?))?(?:\s+group\s+by\s+([\s\S]+?))?(?:\s+disable\s+when\s+([\s\S]+?))?\s+for\s+(?:([\$\w][\$\w]*)|(?:\(\s*([\$\w][\$\w]*)\s*,\s*([\$\w][\$\w]*)\s*\)))\s+in\s+([\s\S]+?)(?:\s+track\s+by\s+([\s\S]+?))?$/,Pe=["$compile","$parse",function(a,b){function d(a,c,d){function e(a,b,c,d,f){this.selectValue=a;this.viewValue=b;this.label=c;this.group=d;this.disabled=f}
function l(a){var b;if(!q&&Ca(a))b=a;else{b=[];for(var c in a)a.hasOwnProperty(c)&&"$"!==c.charAt(0)&&b.push(c)}return b}var m=a.match(Qg);if(!m)throw Pg("iexp",a,ta(c));var n=m[5]||m[7],q=m[6];a=/ as /.test(m[0])&&m[1];var v=m[9];c=b(m[2]?m[1]:n);var y=a&&b(a)||c,t=v&&b(v),p=v?function(a,b){return t(d,b)}:function(a){return Fa(a)},w=function(a,b){return p(a,B(a,b))},u=b(m[2]||m[1]),x=b(m[3]||""),z=b(m[4]||""),A=b(m[8]),C={},B=q?function(a,b){C[q]=b;C[n]=a;return C}:function(a){C[n]=a;return C};return{trackBy:v,
getTrackByValue:w,getWatchables:b(A,function(a){var b=[];a=a||[];for(var c=l(a),e=c.length,f=0;f<e;f++){var g=a===c?f:c[f],k=B(a[g],g),g=p(a[g],k);b.push(g);if(m[2]||m[1])g=u(d,k),b.push(g);m[4]&&(k=z(d,k),b.push(k))}return b}),getOptions:function(){for(var a=[],b={},c=A(d)||[],f=l(c),g=f.length,m=0;m<g;m++){var n=c===f?m:f[m],r=B(c[n],n),q=y(d,r),n=p(q,r),s=u(d,r),t=x(d,r),r=z(d,r),q=new e(n,q,s,t,r);a.push(q);b[n]=q}return{items:a,selectValueMap:b,getOptionFromViewValue:function(a){return b[w(a)]},
getViewValueFromOption:function(a){return v?ia.copy(a.viewValue):a.viewValue}}}}}var c=W.createElement("option"),e=W.createElement("optgroup");return{restrict:"A",terminal:!0,require:["select","ngModel"],link:{pre:function(a,b,c,d){d[0].registerOption=B},post:function(b,g,h,k){function l(a,b){a.element=b;b.disabled=a.disabled;a.label!==b.label&&(b.label=a.label,b.textContent=a.label);a.value!==b.value&&(b.value=a.selectValue)}function m(a,b,c,d){b&&G(b.nodeName)===c?c=b:(c=d.cloneNode(!1),b?a.insertBefore(c,
b):a.appendChild(c));return c}function r(a){for(var b;a;)b=a.nextSibling,$b(a),a=b}function q(a){var b=w&&w[0],c=A&&A[0];if(b||c)for(;a&&(a===b||a===c||8===a.nodeType||"option"===ra(a)&&""===a.value);)a=a.nextSibling;return a}function v(){var a=D&&x.readValue();D=E.getOptions();var b={},d=g[0].firstChild;z&&g.prepend(w);d=q(d);D.items.forEach(function(a){var f,h;y(a.group)?(f=b[a.group],f||(f=m(g[0],d,"optgroup",e),d=f.nextSibling,f.label=a.group,f=b[a.group]={groupElement:f,currentOptionElement:f.firstChild}),
h=m(f.groupElement,f.currentOptionElement,"option",c),l(a,h),f.currentOptionElement=h.nextSibling):(h=m(g[0],d,"option",c),l(a,h),d=h.nextSibling)});Object.keys(b).forEach(function(a){r(b[a].currentOptionElement)});r(d);t.$render();if(!t.$isEmpty(a)){var f=x.readValue();(E.trackBy||p?oa(a,f):a===f)||(t.$setViewValue(f),t.$render())}}var x=k[0],t=k[1],p=h.multiple,w;k=0;for(var u=g.children(),B=u.length;k<B;k++)if(""===u[k].value){w=u.eq(k);break}var z=!!w,A=C(c.cloneNode(!1));A.val("?");var D,E=d(h.ngOptions,
g,b);p?(t.$isEmpty=function(a){return!a||0===a.length},x.writeValue=function(a){D.items.forEach(function(a){a.element.selected=!1});a&&a.forEach(function(a){(a=D.getOptionFromViewValue(a))&&!a.disabled&&(a.element.selected=!0)})},x.readValue=function(){var a=g.val()||[],b=[];n(a,function(a){(a=D.selectValueMap[a])&&!a.disabled&&b.push(D.getViewValueFromOption(a))});return b},E.trackBy&&b.$watchCollection(function(){if(L(t.$viewValue))return t.$viewValue.map(function(a){return E.getTrackByValue(a)})},
function(){t.$render()})):(x.writeValue=function(a){var b=D.getOptionFromViewValue(a);b&&!b.disabled?g[0].value!==b.selectValue&&(A.remove(),z||w.remove(),g[0].value=b.selectValue,b.element.selected=!0,b.element.setAttribute("selected","selected")):null===a||z?(A.remove(),z||g.prepend(w),g.val(""),w.prop("selected",!0),w.attr("selected",!0)):(z||w.remove(),g.prepend(A),g.val("?"),A.prop("selected",!0),A.attr("selected",!0))},x.readValue=function(){var a=D.selectValueMap[g.val()];return a&&!a.disabled?
(z||w.remove(),A.remove(),D.getViewValueFromOption(a)):null},E.trackBy&&b.$watch(function(){return E.getTrackByValue(t.$viewValue)},function(){t.$render()}));z?(w.remove(),a(w)(b),w.removeClass("ng-scope")):w=C(c.cloneNode(!1));v();b.$watchCollection(E.getWatchables,v)}}}}],Ie=["$locale","$interpolate","$log",function(a,b,d){var c=/{}/g,e=/^when(Minus)?(.+)$/;return{link:function(f,g,h){function k(a){g.text(a||"")}var l=h.count,m=h.$attr.when&&g.attr(h.$attr.when),r=h.offset||0,q=f.$eval(m)||{},v=
{},y=b.startSymbol(),t=b.endSymbol(),p=y+l+"-"+r+t,w=ia.noop,u;n(h,function(a,b){var c=e.exec(b);c&&(c=(c[1]?"-":"")+G(c[2]),q[c]=g.attr(h.$attr[b]))});n(q,function(a,d){v[d]=b(a.replace(c,p))});f.$watch(l,function(b){var c=parseFloat(b),e=isNaN(c);e||c in q||(c=a.pluralCat(c-r));c===u||e&&N(u)&&isNaN(u)||(w(),e=v[c],x(e)?(null!=b&&d.debug("ngPluralize: no rule defined for '"+c+"' in "+m),w=B,k()):w=f.$watch(e,k),u=c)})}}}],Je=["$parse","$animate",function(a,b){var d=H("ngRepeat"),c=function(a,b,
c,d,k,l,m){a[c]=d;k&&(a[k]=l);a.$index=b;a.$first=0===b;a.$last=b===m-1;a.$middle=!(a.$first||a.$last);a.$odd=!(a.$even=0===(b&1))};return{restrict:"A",multiElement:!0,transclude:"element",priority:1E3,terminal:!0,$$tlb:!0,compile:function(e,f){var g=f.ngRepeat,h=W.createComment(" end ngRepeat: "+g+" "),k=g.match(/^\s*([\s\S]+?)\s+in\s+([\s\S]+?)(?:\s+as\s+([\s\S]+?))?(?:\s+track\s+by\s+([\s\S]+?))?\s*$/);if(!k)throw d("iexp",g);var l=k[1],m=k[2],r=k[3],q=k[4],k=l.match(/^(?:(\s*[\$\w]+)|\(\s*([\$\w]+)\s*,\s*([\$\w]+)\s*\))$/);
if(!k)throw d("iidexp",l);var x=k[3]||k[1],y=k[2];if(r&&(!/^[$a-zA-Z_][$a-zA-Z0-9_]*$/.test(r)||/^(null|undefined|this|\$index|\$first|\$middle|\$last|\$even|\$odd|\$parent|\$root|\$id)$/.test(r)))throw d("badident",r);var t,p,w,u,B={$id:Fa};q?t=a(q):(w=function(a,b){return Fa(b)},u=function(a){return a});return function(a,e,f,k,l){t&&(p=function(b,c,d){y&&(B[y]=b);B[x]=c;B.$index=d;return t(a,B)});var q=Z();a.$watchCollection(m,function(f){var k,m,s=e[0],t,B=Z(),D,E,H,F,L,G,N;r&&(a[r]=f);if(Ca(f))L=
f,m=p||w;else for(N in m=p||u,L=[],f)sa.call(f,N)&&"$"!==N.charAt(0)&&L.push(N);D=L.length;N=Array(D);for(k=0;k<D;k++)if(E=f===L?k:L[k],H=f[E],F=m(E,H,k),q[F])G=q[F],delete q[F],B[F]=G,N[k]=G;else{if(B[F])throw n(N,function(a){a&&a.scope&&(q[a.id]=a)}),d("dupes",g,F,H);N[k]={id:F,scope:v,clone:v};B[F]=!0}for(t in q){G=q[t];F=tb(G.clone);b.leave(F);if(F[0].parentNode)for(k=0,m=F.length;k<m;k++)F[k].$$NG_REMOVED=!0;G.scope.$destroy()}for(k=0;k<D;k++)if(E=f===L?k:L[k],H=f[E],G=N[k],G.scope){t=s;do t=
t.nextSibling;while(t&&t.$$NG_REMOVED);G.clone[0]!=t&&b.move(tb(G.clone),null,C(s));s=G.clone[G.clone.length-1];c(G.scope,k,x,H,y,E,D)}else l(function(a,d){G.scope=d;var e=h.cloneNode(!1);a[a.length++]=e;b.enter(a,null,C(s));s=e;G.clone=a;B[G.id]=G;c(G.scope,k,x,H,y,E,D)});q=B})}}}}],Ke=["$animate",function(a){return{restrict:"A",multiElement:!0,link:function(b,d,c){b.$watch(c.ngShow,function(b){a[b?"removeClass":"addClass"](d,"ng-hide",{tempClasses:"ng-hide-animate"})})}}}],De=["$animate",function(a){return{restrict:"A",
multiElement:!0,link:function(b,d,c){b.$watch(c.ngHide,function(b){a[b?"addClass":"removeClass"](d,"ng-hide",{tempClasses:"ng-hide-animate"})})}}}],Le=Ma(function(a,b,d){a.$watch(d.ngStyle,function(a,d){d&&a!==d&&n(d,function(a,c){b.css(c,"")});a&&b.css(a)},!0)}),Me=["$animate",function(a){return{require:"ngSwitch",controller:["$scope",function(){this.cases={}}],link:function(b,d,c,e){var f=[],g=[],h=[],k=[],l=function(a,b){return function(){a.splice(b,1)}};b.$watch(c.ngSwitch||c.on,function(b){var c,
d;c=0;for(d=h.length;c<d;++c)a.cancel(h[c]);c=h.length=0;for(d=k.length;c<d;++c){var q=tb(g[c].clone);k[c].$destroy();(h[c]=a.leave(q)).then(l(h,c))}g.length=0;k.length=0;(f=e.cases["!"+b]||e.cases["?"])&&n(f,function(b){b.transclude(function(c,d){k.push(d);var e=b.element;c[c.length++]=W.createComment(" end ngSwitchWhen: ");g.push({clone:c});a.enter(c,e.parent(),e)})})})}}}],Ne=Ma({transclude:"element",priority:1200,require:"^ngSwitch",multiElement:!0,link:function(a,b,d,c,e){c.cases["!"+d.ngSwitchWhen]=
c.cases["!"+d.ngSwitchWhen]||[];c.cases["!"+d.ngSwitchWhen].push({transclude:e,element:b})}}),Oe=Ma({transclude:"element",priority:1200,require:"^ngSwitch",multiElement:!0,link:function(a,b,d,c,e){c.cases["?"]=c.cases["?"]||[];c.cases["?"].push({transclude:e,element:b})}}),Rg=H("ngTransclude"),Qe=Ma({restrict:"EAC",link:function(a,b,d,c,e){d.ngTransclude===d.$attr.ngTransclude&&(d.ngTransclude="");if(!e)throw Rg("orphan",ta(b));e(function(a){a.length&&(b.empty(),b.append(a))},null,d.ngTransclude||
d.ngTranscludeSlot)}}),qe=["$templateCache",function(a){return{restrict:"E",terminal:!0,compile:function(b,d){"text/ng-template"==d.type&&a.put(d.id,b[0].text)}}}],Sg={$setViewValue:B,$render:B},Tg=["$element","$scope","$attrs",function(a,b,d){var c=this,e=new Ua;c.ngModelCtrl=Sg;c.unknownOption=C(W.createElement("option"));c.renderUnknownOption=function(b){b="? "+Fa(b)+" ?";c.unknownOption.val(b);a.prepend(c.unknownOption);a.val(b)};b.$on("$destroy",function(){c.renderUnknownOption=B});c.removeUnknownOption=
function(){c.unknownOption.parent()&&c.unknownOption.remove()};c.readValue=function(){c.removeUnknownOption();return a.val()};c.writeValue=function(b){c.hasOption(b)?(c.removeUnknownOption(),a.val(b),""===b&&c.emptyOption.prop("selected",!0)):null==b&&c.emptyOption?(c.removeUnknownOption(),a.val("")):c.renderUnknownOption(b)};c.addOption=function(a,b){if(8!==b[0].nodeType){Ta(a,'"option value"');""===a&&(c.emptyOption=b);var d=e.get(a)||0;e.put(a,d+1);c.ngModelCtrl.$render();b[0].hasAttribute("selected")&&
(b[0].selected=!0)}};c.removeOption=function(a){var b=e.get(a);b&&(1===b?(e.remove(a),""===a&&(c.emptyOption=v)):e.put(a,b-1))};c.hasOption=function(a){return!!e.get(a)};c.registerOption=function(a,b,d,e,l){if(e){var m;d.$observe("value",function(a){y(m)&&c.removeOption(m);m=a;c.addOption(a,b)})}else l?a.$watch(l,function(a,e){d.$set("value",a);e!==a&&c.removeOption(e);c.addOption(a,b)}):c.addOption(d.value,b);b.on("$destroy",function(){c.removeOption(d.value);c.ngModelCtrl.$render()})}}],re=function(){return{restrict:"E",
require:["select","?ngModel"],controller:Tg,priority:1,link:{pre:function(a,b,d,c){var e=c[1];if(e){var f=c[0];f.ngModelCtrl=e;b.on("change",function(){a.$apply(function(){e.$setViewValue(f.readValue())})});if(d.multiple){f.readValue=function(){var a=[];n(b.find("option"),function(b){b.selected&&a.push(b.value)});return a};f.writeValue=function(a){var c=new Ua(a);n(b.find("option"),function(a){a.selected=y(c.get(a.value))})};var g,h=NaN;a.$watch(function(){h!==e.$viewValue||oa(g,e.$viewValue)||(g=
na(e.$viewValue),e.$render());h=e.$viewValue});e.$isEmpty=function(a){return!a||0===a.length}}}},post:function(a,b,d,c){var e=c[1];if(e){var f=c[0];e.$render=function(){f.writeValue(e.$viewValue)}}}}}},te=["$interpolate",function(a){return{restrict:"E",priority:100,compile:function(b,d){if(y(d.value))var c=a(d.value,!0);else{var e=a(b.text(),!0);e||d.$set("value",b.text())}return function(a,b,d){var k=b.parent();(k=k.data("$selectController")||k.parent().data("$selectController"))&&k.registerOption(a,
b,d,c,e)}}}}],se=ba({restrict:"E",terminal:!1}),Hc=function(){return{restrict:"A",require:"?ngModel",link:function(a,b,d,c){c&&(d.required=!0,c.$validators.required=function(a,b){return!d.required||!c.$isEmpty(b)},d.$observe("required",function(){c.$validate()}))}}},Gc=function(){return{restrict:"A",require:"?ngModel",link:function(a,b,d,c){if(c){var e,f=d.ngPattern||d.pattern;d.$observe("pattern",function(a){F(a)&&0<a.length&&(a=new RegExp("^"+a+"$"));if(a&&!a.test)throw H("ngPattern")("noregexp",
f,a,ta(b));e=a||v;c.$validate()});c.$validators.pattern=function(a,b){return c.$isEmpty(b)||x(e)||e.test(b)}}}}},Jc=function(){return{restrict:"A",require:"?ngModel",link:function(a,b,d,c){if(c){var e=-1;d.$observe("maxlength",function(a){a=ca(a);e=isNaN(a)?-1:a;c.$validate()});c.$validators.maxlength=function(a,b){return 0>e||c.$isEmpty(b)||b.length<=e}}}}},Ic=function(){return{restrict:"A",require:"?ngModel",link:function(a,b,d,c){if(c){var e=0;d.$observe("minlength",function(a){e=ca(a)||0;c.$validate()});
c.$validators.minlength=function(a,b){return c.$isEmpty(b)||b.length>=e}}}}};O.angular.bootstrap?console.log("WARNING: Tried to load angular more than once."):(je(),le(ia),ia.module("ngLocale",[],["$provide",function(a){function b(a){a+="";var b=a.indexOf(".");return-1==b?0:a.length-b-1}a.value("$locale",{DATETIME_FORMATS:{AMPMS:["AM","PM"],DAY:"Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),ERANAMES:["Before Christ","Anno Domini"],ERAS:["BC","AD"],FIRSTDAYOFWEEK:6,MONTH:"January February March April May June July August September October November December".split(" "),
SHORTDAY:"Sun Mon Tue Wed Thu Fri Sat".split(" "),SHORTMONTH:"Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec".split(" "),STANDALONEMONTH:"January February March April May June July August September October November December".split(" "),WEEKENDRANGE:[5,6],fullDate:"EEEE, MMMM d, y",longDate:"MMMM d, y",medium:"MMM d, y h:mm:ss a",mediumDate:"MMM d, y",mediumTime:"h:mm:ss a","short":"M/d/yy h:mm a",shortDate:"M/d/yy",shortTime:"h:mm a"},NUMBER_FORMATS:{CURRENCY_SYM:"$",DECIMAL_SEP:".",GROUP_SEP:",",
PATTERNS:[{gSize:3,lgSize:3,maxFrac:3,minFrac:0,minInt:1,negPre:"-",negSuf:"",posPre:"",posSuf:""},{gSize:3,lgSize:3,maxFrac:2,minFrac:2,minInt:1,negPre:"-\u00a4",negSuf:"",posPre:"\u00a4",posSuf:""}]},id:"en-us",localeID:"en_US",pluralCat:function(a,c){var e=a|0,f=c;v===f&&(f=Math.min(b(a),3));Math.pow(10,f);return 1==e&&0==f?"one":"other"}})}]),C(W).ready(function(){fe(W,Ac)}))})(window,document);!window.angular.$$csp().noInlineStyle&&window.angular.element(document.head).prepend('<style type="text/css">@charset "UTF-8";[ng\\:cloak],[ng-cloak],[data-ng-cloak],[x-ng-cloak],.ng-cloak,.x-ng-cloak,.ng-hide:not(.ng-hide-animate){display:none !important;}ng\\:form{display:block;}.ng-animate-shim{visibility:hidden;}.ng-anchor{position:absolute;}</style>');
//# sourceMappingURL=angular.min.js.map
;
// rzModule is a 3rd party slider used in bt-residential-price-slider and others
var application = angular.module('barfootWeb', ['ngTouch', 'ui.bootstrap', 'rzModule', 'ngMessages']);
application.config(['$locationProvider', function ($locationProvider) {
    $locationProvider.html5Mode(true);
}]);;
// static keys for global events.
// these are global events. please write a good description of each event you add. 
var btEventType = {

    // Will ask the search panel to take focus and put it on the quicksearch input.
    onSearchRequest: 'onSearchRequest',

    //bt-search-footer
    onFilterReset: 'onFilterReset',

    // tiggered when google api JavaScript is loaded.
    googleMapsApiLoaded: 'googleMapsApiLoaded',

    //triggered when school is clicked on the property details page. 
    OnSchoolSelect: 'OnSchoolSelect',

    // if there is a google map diective on the page, if the marker id is present on the map, 
    // the map will load and navigate to the marker location. 
    onMarkerSelect: 'onMarkerSelect',

    // will fire when the filter count changes on the search panels. Returning the int count
    onFilterCountChange: "onFilterCountChange",

    // Will fire when the user changes the line of business. The selected line of business will be sent through as the second parameter of the event.
    onLineOfBusinessChange: 'onLineOfBusinessChange',

    //The name of the dialog will be passed via the event. If the dialog with that name is on the page. It will become active.
    dialogRequest: 'dialogRequest',

    //The name of the dialog will be passed via the event. If the dialog with that name is on the page. It will become deactivated.
    dialogCancel: 'dialogCancel',

    // triggered when a new saved search has been saved. 
    searchHasBeenSaved: 'searchHasBeenSaved',

    //This event is the increment or decrement the saved property count in the header on Save and Unsave
    onPropertySaveOrUnsave: 'onPropertySaveOrUnsave',

    //Will set focus on the enquiry form on the listing details page
    AskQuestionBtnClick: 'AskQuestionBtnClick',

    //Email confirmation modal closed
    EmailConfirmationModalClosed: 'EmailConfirmationModalClosed',

    // Google recpatcha script loaded
    RecaptchaLoaded: 'RecaptchaLoaded',

    // Google recpatcha reset trigger event
    RecaptchaTriggerReset: 'RecaptchaTriggerReset',

    // Search panel show more filters
    SearchPanelMoreFiltersShow: 'moreFiltersShow',

    // Search panel hide more filters
    SearchPanelMoreFiltersHide: 'moreFiltersHide',

    searchHasBeenDelete: 'searchHasBeenDelete',

    ClearAutoCompleteTags: 'clearAutocompleteTags',

    AutoCompleteTagsChanged: 'autoCompleteTagsChanged',

    SelectedListItemChanged: 'selectedListItemChanged',

    AddAutoCompleteTags: 'addAutoCompleteTags',
    
    HideAutoScrollY: 'hideAutoScrollY',

    ClearAutoComplete: 'clearAutoComplete',

    ShowRegionSuburbsFilter: 'showRegionSuburbsFilter',

    OpenRegionSuburbsFilter: 'openRegionSuburbsFilter',

    ToggleMoreFilter: 'toggleMoreFilter',

    ToggleSearchResultsSave: 'toggleSearchResultsSave',

    ResetSummary: 'resetSummary',

    ProfilePropertiesTabChange: 'profilePropertiesTabChange',

    BranchTeamTabChange: 'branchTeamTabChange',

    TelLinkClick: 'telLinkClick',

    HideAutocompleteLoader: 'hideAutocompleteLoader'
};

// global event controller. 
var btEvents = {

    trigger: function(stringKey, obj) {
        angular.element('body').trigger(stringKey, obj);
    },

    addListener: function(stringKey, delegateFunction) {
        angular.element('body').on(stringKey, delegateFunction);
    },

    removeListener: function(stringKey, delegateFunction) {
        angular.element('body').off(stringKey, delegateFunction);
    }
};

$('[bt-event]').on('click',
    function(e) {
        e.preventDefault();
        if ($(this).attr('bt-event').indexOf(',') > 0) {
            angular.forEach($(this).attr('bt-event').split(','),
                function(eventName) {
                    btEvents.trigger(eventName);
                });
        } else {
            btEvents.trigger($(this).attr('bt-event'));
        }

    });
;
/** @license
 *
 *  Copyright (C) 2012 K. Arthur Endsley (kaendsle@mtu.edu)
 *  Michigan Tech Research Institute (MTRI)
 *  3600 Green Court, Suite 100, Ann Arbor, MI, 48105
 *
 *  This program is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 */

(function (root, factory) {

    if (typeof define === "function" && define.amd) {
        // AMD (+ global for extensions)
        define(function () {
            return factory();
        });
    } else if (typeof module !== 'undefined' && typeof exports === "object") {
        // CommonJS
        module.exports = factory();
    } else {
        // Browser
        root.Wkt = factory();
    }
}(this, function () {


    var beginsWith, endsWith, root, Wkt;

    // Establish the root object, window in the browser, or exports on the server
    root = this;

    /**
     * @desc The Wkt namespace.
     * @property    {String}    delimiter   - The default delimiter for separating components of atomic geometry (coordinates)
     * @namespace
     * @global
     */
    Wkt = function (obj) {
        if (obj instanceof Wkt) return obj;
        if (!(this instanceof Wkt)) return new Wkt(obj);
        this._wrapped = obj;
    };



    /**
     * Returns true if the substring is found at the beginning of the string.
     * @param   str {String}    The String to search
     * @param   sub {String}    The substring of interest
     * @return      {Boolean}
     * @private
     */
    beginsWith = function (str, sub) {
        return str.substring(0, sub.length) === sub;
    };

    /**
     * Returns true if the substring is found at the end of the string.
     * @param   str {String}    The String to search
     * @param   sub {String}    The substring of interest
     * @return      {Boolean}
     * @private
     */
    endsWith = function (str, sub) {
        return str.substring(str.length - sub.length) === sub;
    };

    /**
     * The default delimiter for separating components of atomic geometry (coordinates)
     * @ignore
     */
    Wkt.delimiter = ' ';

    /**
     * Determines whether or not the passed Object is an Array.
     * @param   obj {Object}    The Object in question
     * @return      {Boolean}
     * @member Wkt.isArray
     * @method
     */
    Wkt.isArray = function (obj) {
        return !!(obj && obj.constructor === Array);
    };

    /**
     * Removes given character String(s) from a String.
     * @param   str {String}    The String to search
     * @param   sub {String}    The String character(s) to trim
     * @return      {String}    The trimmed string
     * @member Wkt.trim
     * @method
     */
    Wkt.trim = function (str, sub) {
        sub = sub || ' '; // Defaults to trimming spaces
        // Trim beginning spaces
        while (beginsWith(str, sub)) {
            str = str.substring(1);
        }
        // Trim ending spaces
        while (endsWith(str, sub)) {
            str = str.substring(0, str.length - 1);
        }
        return str;
    };

    /**
     * An object for reading WKT strings and writing geographic features
     * @constructor this.Wkt.Wkt
     * @param   initializer {String}    An optional WKT string for immediate read
     * @property            {Array}     components      - Holder for atomic geometry objects (internal representation of geometric components)
     * @property            {String}    delimiter       - The default delimiter for separating components of atomic geometry (coordinates)
     * @property            {Object}    regExes         - Some regular expressions copied from OpenLayers.Format.WKT.js
     * @property            {String}    type            - The Well-Known Text name (e.g. 'point') of the geometry
     * @property            {Boolean}   wrapVerticies   - True to wrap vertices in MULTIPOINT geometries; If true: MULTIPOINT((30 10),(10 30),(40 40)); If false: MULTIPOINT(30 10,10 30,40 40)
     * @return              {this.Wkt.Wkt}
     * @memberof Wkt
     */
    Wkt.Wkt = function (initializer) {

        /**
         * The default delimiter between X and Y coordinates.
         * @ignore
         */
        this.delimiter = Wkt.delimiter || ' ';

        /**
         * Configuration parameter for controlling how Wicket seralizes
         * MULTIPOINT strings. Examples; both are valid WKT:
         * If true: MULTIPOINT((30 10),(10 30),(40 40))
         * If false: MULTIPOINT(30 10,10 30,40 40)
         * @ignore
         */
        this.wrapVertices = true;

        /**
         * Some regular expressions copied from OpenLayers.Format.WKT.js
         * @ignore
         */
        this.regExes = {
            'typeStr': /^\s*(\w+)\s*\(\s*(.*)\s*\)\s*$/,
            'spaces': /\s+|\+/, // Matches the '+' or the empty space
            'numeric': /-*\d+(\.*\d+)?/,
            'comma': /\s*,\s*/,
            'parenComma': /\)\s*,\s*\(/,
            'coord': /-*\d+\.*\d+ -*\d+\.*\d+/, // e.g. "24 -14"
            'doubleParenComma': /\)\s*\)\s*,\s*\(\s*\(/,
            'trimParens': /^\s*\(?(.*?)\)?\s*$/,
            'ogcTypes': /^(multi)?(point|line|polygon|box)?(string)?$/i, // Captures e.g. "Multi","Line","String"
            'crudeJson': /^{.*"(type|coordinates|geometries|features)":.*}$/ // Attempts to recognize JSON strings
        };

        /**
         * The internal representation of geometry--the "components" of geometry.
         * @ignore
         */
        this.components = undefined;

        // An initial WKT string may be provided
        if (initializer && typeof initializer === 'string') {
            this.read(initializer);
        } else if (initializer && typeof initializer !== undefined) {
            this.fromObject(initializer);
        }

    };



    /**
     * Returns true if the internal geometry is a collection of geometries.
     * @return  {Boolean}   Returns true when it is a collection
     * @memberof this.Wkt.Wkt
     * @method
     */
    Wkt.Wkt.prototype.isCollection = function () {
        switch (this.type.slice(0, 5)) {
            case 'multi':
                // Trivial; any multi-geometry is a collection
                return true;
            case 'polyg':
                // Polygons with holes are "collections" of rings
                return true;
            default:
                // Any other geometry is not a collection
                return false;
        }
    };

    /**
     * Compares two x,y coordinates for equality.
     * @param   a   {Object}    An object with x and y properties
     * @param   b   {Object}    An object with x and y properties
     * @return      {Boolean}
     * @memberof this.Wkt.Wkt
     * @method
     */
    Wkt.Wkt.prototype.sameCoords = function (a, b) {
        return (a.x === b.x && a.y === b.y);
    };

    /**
     * Sets internal geometry (components) from framework geometry (e.g.
     * Google Polygon objects or google.maps.Polygon).
     * @param   obj {Object}    The framework-dependent geometry representation
     * @return      {this.Wkt.Wkt}   The object itself
     * @memberof this.Wkt.Wkt
     * @method
     */
    Wkt.Wkt.prototype.fromObject = function (obj) {
        var result;

        if (obj.hasOwnProperty('type') && obj.hasOwnProperty('coordinates')) {
            result = this.fromJson(obj);
        } else {
            result = this.deconstruct.call(this, obj);
        }

        this.components = result.components;
        this.isRectangle = result.isRectangle || false;
        this.type = result.type;
        return this;
    };

    /**
     * Creates external geometry objects based on a plug-in framework's
     * construction methods and available geometry classes.
     * @param   config  {Object}    An optional framework-dependent properties specification
     * @return          {Object}    The framework-dependent geometry representation
     * @memberof this.Wkt.Wkt
     * @method
     */
    Wkt.Wkt.prototype.toObject = function (config) {
        var obj = this.construct[this.type].call(this, config);
        // Don't assign the "properties" property to an Array
        if (typeof obj === 'object' && !Wkt.isArray(obj)) {
            obj.properties = this.properties;
        }
        return obj;
    };

    /**
     * Returns the WKT string representation; the same as the write() method.
     * @memberof this.Wkt.Wkt
     * @method
     */
    Wkt.Wkt.prototype.toString = function (config) {
        return this.write();
    };

    /**
     * Parses a JSON representation as an Object.
     * @param	obj	{Object}	An Object with the GeoJSON schema
     * @return	{this.Wkt.Wkt}	The object itself
     * @memberof this.Wkt.Wkt
     * @method
     */
    Wkt.Wkt.prototype.fromJson = function (obj) {
        var i, j, k, coords, iring, oring;

        this.type = obj.type.toLowerCase();
        this.components = [];
        if (obj.hasOwnProperty('geometry')) { //Feature
            this.fromJson(obj.geometry);
            this.properties = obj.properties;
            return this;
        }
        coords = obj.coordinates;

        if (!Wkt.isArray(coords[0])) { // Point
            this.components.push({
                x: coords[0],
                y: coords[1]
            });

        } else {

            for (i in coords) {
                if (coords.hasOwnProperty(i)) {

                    if (!Wkt.isArray(coords[i][0])) { // LineString

                        if (this.type === 'multipoint') { // MultiPoint
                            this.components.push([{
                                x: coords[i][0],
                                y: coords[i][1]
                            }]);

                        } else {
                            this.components.push({
                                x: coords[i][0],
                                y: coords[i][1]
                            });

                        }

                    } else {

                        oring = [];
                        for (j in coords[i]) {
                            if (coords[i].hasOwnProperty(j)) {

                                if (!Wkt.isArray(coords[i][j][0])) {
                                    oring.push({
                                        x: coords[i][j][0],
                                        y: coords[i][j][1]
                                    });

                                } else {

                                    iring = [];
                                    for (k in coords[i][j]) {
                                        if (coords[i][j].hasOwnProperty(k)) {

                                            iring.push({
                                                x: coords[i][j][k][0],
                                                y: coords[i][j][k][1]
                                            });

                                        }
                                    }

                                    oring.push(iring);

                                }

                            }
                        }

                        this.components.push(oring);
                    }
                }
            }

        }

        return this;
    };

    /**
     * Creates a JSON representation, with the GeoJSON schema, of the geometry.
     * @return    {Object}    The corresponding GeoJSON representation
     * @memberof this.Wkt.Wkt
     * @method
     */
    Wkt.Wkt.prototype.toJson = function () {
        var cs, json, i, j, k, ring, rings;

        cs = this.components;
        json = {
            coordinates: [],
            type: (function () {
                var i, type, s;

                type = this.regExes.ogcTypes.exec(this.type).slice(1);
                s = [];

                for (i in type) {
                    if (type.hasOwnProperty(i)) {
                        if (type[i] !== undefined) {
                            s.push(type[i].toLowerCase().slice(0, 1).toUpperCase() + type[i].toLowerCase().slice(1));
                        }
                    }
                }

                return s;
            }.call(this)).join('')
        }

        // Wkt BOX type gets a special bbox property in GeoJSON
        if (this.type.toLowerCase() === 'box') {
            json.type = 'Polygon';
            json.bbox = [];

            for (i in cs) {
                if (cs.hasOwnProperty(i)) {
                    json.bbox = json.bbox.concat([cs[i].x, cs[i].y]);
                }
            }

            json.coordinates = [
                [
                    [cs[0].x, cs[0].y],
                    [cs[0].x, cs[1].y],
                    [cs[1].x, cs[1].y],
                    [cs[1].x, cs[0].y],
                    [cs[0].x, cs[0].y]
                ]
            ];

            return json;
        }

        // For the coordinates of most simple features
        for (i in cs) {
            if (cs.hasOwnProperty(i)) {

                // For those nested structures
                if (Wkt.isArray(cs[i])) {
                    rings = [];

                    for (j in cs[i]) {
                        if (cs[i].hasOwnProperty(j)) {

                            if (Wkt.isArray(cs[i][j])) { // MULTIPOLYGONS
                                ring = [];

                                for (k in cs[i][j]) {
                                    if (cs[i][j].hasOwnProperty(k)) {
                                        ring.push([cs[i][j][k].x, cs[i][j][k].y]);
                                    }
                                }

                                rings.push(ring);

                            } else { // POLYGONS and MULTILINESTRINGS

                                if (cs[i].length > 1) {
                                    rings.push([cs[i][j].x, cs[i][j].y]);

                                } else { // MULTIPOINTS
                                    rings = rings.concat([cs[i][j].x, cs[i][j].y]);
                                }
                            }
                        }
                    }

                    json.coordinates.push(rings);

                } else {
                    if (cs.length > 1) { // For LINESTRING type
                        json.coordinates.push([cs[i].x, cs[i].y]);

                    } else { // For POINT type
                        json.coordinates = json.coordinates.concat([cs[i].x, cs[i].y]);
                    }
                }

            }
        }

        return json;
    };

    /**
     * Absorbs the geometry of another this.Wkt.Wkt instance, merging it with its own,
     * creating a collection (MULTI-geometry) based on their types, which must agree.
     * For example, creates a MULTIPOLYGON from a POLYGON type merged with another
     * POLYGON type, or adds a POLYGON instance to a MULTIPOLYGON instance.
     * @param   wkt {String}    A Wkt.Wkt object
     * @return	{this.Wkt.Wkt}	The object itself
     * @memberof this.Wkt.Wkt
     * @method
     */
    Wkt.Wkt.prototype.merge = function (wkt) {
        var prefix = this.type.slice(0, 5);

        if (this.type !== wkt.type) {
            if (this.type.slice(5, this.type.length) !== wkt.type) {
                throw TypeError('The input geometry types must agree or the calling this.Wkt.Wkt instance must be a multigeometry of the other');
            }
        }

        switch (prefix) {

            case 'point':
                this.components = [this.components.concat(wkt.components)];
                break;

            case 'multi':
                this.components = this.components.concat((wkt.type.slice(0, 5) === 'multi') ? wkt.components : [wkt.components]);
                break;

            default:
                this.components = [
                    this.components,
                    wkt.components
                ];
                break;

        }

        if (prefix !== 'multi') {
            this.type = 'multi' + this.type;
        }
        return this;
    };

    /**
     * Reads a WKT string, validating and incorporating it.
     * @param   str {String}    A WKT or GeoJSON string
     * @return	{this.Wkt.Wkt}	The object itself
     * @memberof this.Wkt.Wkt
     * @method
     */
    Wkt.Wkt.prototype.read = function (str) {
        var matches;
        matches = this.regExes.typeStr.exec(str);
        if (matches) {
            this.type = matches[1].toLowerCase();
            this.base = matches[2];
            if (this.ingest[this.type]) {
                this.components = this.ingest[this.type].apply(this, [this.base]);
            }

        } else {
            if (this.regExes.crudeJson.test(str)) {
                if (typeof JSON === 'object' && typeof JSON.parse === 'function') {
                    this.fromJson(JSON.parse(str));

                } else {
                    console.log('JSON.parse() is not available; cannot parse GeoJSON strings');
                    throw {
                        name: 'JSONError',
                        message: 'JSON.parse() is not available; cannot parse GeoJSON strings'
                    };
                }

            } else {
                console.log('Invalid WKT string provided to read()');
                throw {
                    name: 'WKTError',
                    message: 'Invalid WKT string provided to read()'
                };
            }
        }

        return this;
    }; // eo readWkt

    /**
     * Writes a WKT string.
     * @param   components  {Array}     An Array of internal geometry objects
     * @return              {String}    The corresponding WKT representation
     * @memberof this.Wkt.Wkt
     * @method
     */
    Wkt.Wkt.prototype.write = function (components) {
        var i, pieces, data;

        components = components || this.components;

        pieces = [];

        pieces.push(this.type.toUpperCase() + '(');

        for (i = 0; i < components.length; i += 1) {
            if (this.isCollection() && i > 0) {
                pieces.push(',');
            }

            // There should be an extract function for the named type
            if (!this.extract[this.type]) {
                return null;
            }

            data = this.extract[this.type].apply(this, [components[i]]);
            if (this.isCollection() && this.type !== 'multipoint') {
                pieces.push('(' + data + ')');

            } else {
                pieces.push(data);

                // If not at the end of the components, add a comma
                if (i !== (components.length - 1) && this.type !== 'multipoint') {
                    pieces.push(',');
                }

            }
        }

        pieces.push(')');

        return pieces.join('');
    };

    /**
     * This object contains functions as property names that extract WKT
     * strings from the internal representation.
     * @memberof this.Wkt.Wkt
     * @namespace this.Wkt.Wkt.extract
     * @instance
     */
    Wkt.Wkt.prototype.extract = {
        /**
         * Return a WKT string representing atomic (point) geometry
         * @param   point   {Object}    An object with x and y properties
         * @return          {String}    The WKT representation
         * @memberof this.Wkt.Wkt.extract
         * @instance
         */
        point: function (point) {
            return String(point.x) + this.delimiter + String(point.y);
        },

        /**
         * Return a WKT string representing multiple atoms (points)
         * @param   multipoint  {Array}     Multiple x-and-y objects
         * @return              {String}    The WKT representation
         * @memberof this.Wkt.Wkt.extract
         * @instance
         */
        multipoint: function (multipoint) {
            var i, parts = [],
                s;

            for (i = 0; i < multipoint.length; i += 1) {
                s = this.extract.point.apply(this, [multipoint[i]]);

                if (this.wrapVertices) {
                    s = '(' + s + ')';
                }

                parts.push(s);
            }

            return parts.join(',');
        },

        /**
         * Return a WKT string representing a chain (linestring) of atoms
         * @param   linestring  {Array}     Multiple x-and-y objects
         * @return              {String}    The WKT representation
         * @memberof this.Wkt.Wkt.extract
         * @instance
         */
        linestring: function (linestring) {
            // Extraction of linestrings is the same as for points
            return this.extract.point.apply(this, [linestring]);
        },

        /**
         * Return a WKT string representing multiple chains (multilinestring) of atoms
         * @param   multilinestring {Array}     Multiple of multiple x-and-y objects
         * @return                  {String}    The WKT representation
         * @memberof this.Wkt.Wkt.extract
         * @instance
         */
        multilinestring: function (multilinestring) {
            var i, parts = [];

            if (multilinestring.length) {
                for (i = 0; i < multilinestring.length; i += 1) {
                    parts.push(this.extract.linestring.apply(this, [multilinestring[i]]));
                }
            } else {
                parts.push(this.extract.point.apply(this, [multilinestring]));
            }

            return parts.join(',');
        },

        /**
         * Return a WKT string representing multiple atoms in closed series (polygon)
         * @param   polygon {Array}     Collection of ordered x-and-y objects
         * @return          {String}    The WKT representation
         * @memberof this.Wkt.Wkt.extract
         * @instance
         */
        polygon: function (polygon) {
            // Extraction of polygons is the same as for multilinestrings
            return this.extract.multilinestring.apply(this, [polygon]);
        },

        /**
         * Return a WKT string representing multiple closed series (multipolygons) of multiple atoms
         * @param   multipolygon    {Array}     Collection of ordered x-and-y objects
         * @return                  {String}    The WKT representation
         * @memberof this.Wkt.Wkt.extract
         * @instance
         */
        multipolygon: function (multipolygon) {
            var i, parts = [];
            for (i = 0; i < multipolygon.length; i += 1) {
                parts.push('(' + this.extract.polygon.apply(this, [multipolygon[i]]) + ')');
            }
            return parts.join(',');
        },

        /**
         * Return a WKT string representing a 2DBox
         * @param   multipolygon    {Array}     Collection of ordered x-and-y objects
         * @return                  {String}    The WKT representation
         * @memberof this.Wkt.Wkt.extract
         * @instance
         */
        box: function (box) {
            return this.extract.linestring.apply(this, [box]);
        },

        geometrycollection: function (str) {
            console.log('The geometrycollection WKT type is not yet supported.');
        }
    };

    /**
     * This object contains functions as property names that ingest WKT
     * strings into the internal representation.
     * @memberof this.Wkt.Wkt
     * @namespace this.Wkt.Wkt.ingest
     * @instance
     */
    Wkt.Wkt.prototype.ingest = {

        /**
         * Return point feature given a point WKT fragment.
         * @param   str {String}    A WKT fragment representing the point
         * @memberof this.Wkt.Wkt.ingest
         * @instance
         */
        point: function (str) {
            var coords = Wkt.trim(str).split(this.regExes.spaces);
            // In case a parenthetical group of coordinates is passed...
            return [{ // ...Search for numeric substrings
                x: parseFloat(this.regExes.numeric.exec(coords[0])[0]),
                y: parseFloat(this.regExes.numeric.exec(coords[1])[0])
            }];
        },

        /**
         * Return a multipoint feature given a multipoint WKT fragment.
         * @param   str {String}    A WKT fragment representing the multipoint
         * @memberof this.Wkt.Wkt.ingest
         * @instance
         */
        multipoint: function (str) {
            var i, components, points;
            components = [];
            points = Wkt.trim(str).split(this.regExes.comma);
            for (i = 0; i < points.length; i += 1) {
                components.push(this.ingest.point.apply(this, [points[i]]));
            }
            return components;
        },

        /**
         * Return a linestring feature given a linestring WKT fragment.
         * @param   str {String}    A WKT fragment representing the linestring
         * @memberof this.Wkt.Wkt.ingest
         * @instance
         */
        linestring: function (str) {
            var i, multipoints, components;

            // In our x-and-y representation of components, parsing
            //  multipoints is the same as parsing linestrings
            multipoints = this.ingest.multipoint.apply(this, [str]);

            // However, the points need to be joined
            components = [];
            for (i = 0; i < multipoints.length; i += 1) {
                components = components.concat(multipoints[i]);
            }
            return components;
        },

        /**
         * Return a multilinestring feature given a multilinestring WKT fragment.
         * @param   str {String}    A WKT fragment representing the multilinestring
         * @memberof this.Wkt.Wkt.ingest
         * @instance
         */
        multilinestring: function (str) {
            var i, components, line, lines;
            components = [];

            lines = Wkt.trim(str).split(this.regExes.doubleParenComma);
            if (lines.length === 1) { // If that didn't work...
                lines = Wkt.trim(str).split(this.regExes.parenComma);
            }

            for (i = 0; i < lines.length; i += 1) {
                line = lines[i].replace(this.regExes.trimParens, '$1');
                components.push(this.ingest.linestring.apply(this, [line]));
            }

            return components;
        },

        /**
         * Return a polygon feature given a polygon WKT fragment.
         * @param   str {String}    A WKT fragment representing the polygon
         * @memberof this.Wkt.Wkt.ingest
         * @instance
         */
        polygon: function (str) {
            var i, j, components, subcomponents, ring, rings;
            rings = Wkt.trim(str).split(this.regExes.parenComma);
            components = []; // Holds one or more rings
            for (i = 0; i < rings.length; i += 1) {
                ring = rings[i].replace(this.regExes.trimParens, '$1').split(this.regExes.comma);
                subcomponents = []; // Holds the outer ring and any inner rings (holes)
                for (j = 0; j < ring.length; j += 1) {
                    // Split on the empty space or '+' character (between coordinates)
                    var split = ring[j].split(this.regExes.spaces);
                    if (split.length > 2) {
                        //remove the elements which are blanks
                        split = split.filter(function (n) {
                            return n != ""
                        });
                    }
                    if (split.length === 2) {
                        var x_cord = split[0];
                        var y_cord = split[1];

                        //now push
                        subcomponents.push({
                            x: parseFloat(x_cord),
                            y: parseFloat(y_cord)
                        });
                    }
                }
                components.push(subcomponents);
            }
            return components;
        },

        /**
         * Return box vertices (which would become the Rectangle bounds) given a Box WKT fragment.
         * @param   str {String}    A WKT fragment representing the box
         * @memberof this.Wkt.Wkt.ingest
         * @instance
         */
        box: function (str) {
            var i, multipoints, components;

            // In our x-and-y representation of components, parsing
            //  multipoints is the same as parsing linestrings
            multipoints = this.ingest.multipoint.apply(this, [str]);

            // However, the points need to be joined
            components = [];
            for (i = 0; i < multipoints.length; i += 1) {
                components = components.concat(multipoints[i]);
            }

            return components;
        },

        /**
         * Return a multipolygon feature given a multipolygon WKT fragment.
         * @param   str {String}    A WKT fragment representing the multipolygon
         * @memberof this.Wkt.Wkt.ingest
         * @instance
         */
        multipolygon: function (str) {
            var i, components, polygon, polygons;
            components = [];
            polygons = Wkt.trim(str).split(this.regExes.doubleParenComma);
            for (i = 0; i < polygons.length; i += 1) {
                polygon = polygons[i].replace(this.regExes.trimParens, '$1');
                components.push(this.ingest.polygon.apply(this, [polygon]));
            }
            return components;
        },

        /**
         * Return an array of features given a geometrycollection WKT fragment.
         * @param   str {String}    A WKT fragment representing the geometry collection
         * @memberof this.Wkt.Wkt.ingest
         * @instance
         */
        geometrycollection: function (str) {
            console.log('The geometrycollection WKT type is not yet supported.');
        }

    }; // eo ingest

    return Wkt;
}));;
/** @license
 *
 *  Copyright (C) 2012 K. Arthur Endsley (kaendsle@mtu.edu)
 *  Michigan Tech Research Institute (MTRI)
 *  3600 Green Court, Suite 100, Ann Arbor, MI, 48105
 *
 *  This program is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 */
(function (Wkt) {

    /**
     * @augments Wkt.Wkt
     * A framework-dependent flag, set for each Wkt.Wkt() instance, that indicates
     * whether or not a closed polygon geometry should be interpreted as a rectangle.
     */
    Wkt.Wkt.prototype.isRectangle = false;

    /**
     * @augments Wkt.Wkt
     * An object of framework-dependent construction methods used to generate
     * objects belonging to the various geometry classes of the framework.
     */
    Wkt.Wkt.prototype.construct = {
        /**
         * Creates the framework's equivalent point geometry object.
         * @param   config      {Object}    An optional properties hash the object should use
         * @param   component   {Object}    An optional component to build from
         * @return              {google.maps.Marker}
         */
        point: function (config, component) {
            var c = component || this.components;

            config = config || {};

            config.position = new google.maps.LatLng(c[0].y, c[0].x);

            return new google.maps.Marker(config);
        },

        /**
         * Creates the framework's equivalent multipoint geometry object.
         * @param   config  {Object}    An optional properties hash the object should use
         * @return          {Array}     Array containing multiple google.maps.Marker
         */
        multipoint: function (config) {
            var i, c, arr;

            c = this.components;

            config = config || {};

            arr = [];

            for (i = 0; i < c.length; i += 1) {
                arr.push(this.construct.point(config, c[i]));
            }

            return arr;
        },

        /**
         * Creates the framework's equivalent linestring geometry object.
         * @param   config      {Object}    An optional properties hash the object should use
         * @param   component   {Object}    An optional component to build from
         * @return              {google.maps.Polyline}
         */
        linestring: function (config, component) {
            var i, c;

            c = component || this.components;

            config = config || {
                editable: false
            };

            config.path = [];

            for (i = 0; i < c.length; i += 1) {
                config.path.push(new google.maps.LatLng(c[i].y, c[i].x));
            }

            return new google.maps.Polyline(config);
        },

        /**
         * Creates the framework's equivalent multilinestring geometry object.
         * @param   config  {Object}    An optional properties hash the object should use
         * @return          {Array}     Array containing multiple google.maps.Polyline instances
         */
        multilinestring: function (config) {
            var i, c, arr;

            c = this.components;

            config = config || {
                editable: false
            };

            config.path = [];

            arr = [];

            for (i = 0; i < c.length; i += 1) {
                arr.push(this.construct.linestring(config, c[i]));
            }

            return arr;
        },

        /**
         * Creates the framework's equivalent Box or Rectangle geometry object.
         * @param   config      {Object}    An optional properties hash the object should use
         * @param   component   {Object}    An optional component to build from
         * @return              {google.maps.Rectangle}
         */
        box: function (config, component) {
            var c = component || this.components;

            config = config || {};

            config.bounds = new google.maps.LatLngBounds(
                new google.maps.LatLng(c[0].y, c[0].x),
                new google.maps.LatLng(c[1].y, c[1].x));

            return new google.maps.Rectangle(config);
        },

        /**
         * Creates the framework's equivalent polygon geometry object.
         * @param   config      {Object}    An optional properties hash the object should use
         * @param   component   {Object}    An optional component to build from
         * @return              {google.maps.Polygon}
         */
        polygon: function (config, component) {
            var j, k, c, rings, verts;

            var polygonIsClockwise = function (coords) {
				var area = 0,
					j = null,
					i = 0;

				for (i = 0; i < coords.length; i++) {
					j = (i + 1) % coords.length;
					area += coords[i].x * coords[j].x;
					area -= coords[j].y * coords[i].y;
				}

				return area > 0;
			};

            c = component || this.components;

            config = config || {
                editable: false // Editable geometry off by default
            };

            config.paths = [];

            rings = [];
            for (j = 0; j < c.length; j += 1) { // For each ring...

                verts = [];
                // NOTE: We iterate to one (1) less than the Array length to skip the last vertex
                for (k = 0; k < c[j].length - 1; k += 1) { // For each vertex...
                    verts.push(new google.maps.LatLng(c[j][k].y, c[j][k].x));

                } // eo for each vertex

                if (j !== 0) {
                   // Orient inner rings correctly
					if (polygonIsClockwise(c[j]) && this.type == 'polygon') {
						verts.reverse();
					}
                }

                rings.push(verts);
            } // eo for each ring

            config.paths = config.paths.concat(rings);

            if (this.isRectangle) {
                return (function () {
                    var bounds, v;

                    bounds = new google.maps.LatLngBounds();

                    for (v in rings[0]) { // Ought to be only 1 ring in a Rectangle
                        if (rings[0].hasOwnProperty(v)) {
                            bounds.extend(rings[0][v]);
                        }
                    }

                    return new google.maps.Rectangle({
                        bounds: bounds
                    });
                }());
            } else {
                return new google.maps.Polygon(config);
            }
        },

        /**
         * Creates the framework's equivalent multipolygon geometry object.
         * @param   config  {Object}    An optional properties hash the object should use
         * @return          {Array}     Array containing multiple google.maps.Polygon
         */
        multipolygon: function (config) {
            var i, c, arr;

            c = this.components;

            config = config || {
                editable: false
            };

            config.path = [];

            arr = [];

            for (i = 0; i < c.length; i += 1) {
                arr.push(this.construct.polygon(config, c[i]));
            }

            return arr;
        }

    };

    /**
     * @augments Wkt.Wkt
     * A framework-dependent deconstruction method used to generate internal
     * geometric representations from instances of framework geometry. This method
     * uses object detection to attempt to classify members of framework geometry
     * classes into the standard WKT types.
     * @param obj       {Object}    An instance of one of the framework's geometry classes
     * @param multiFlag {Boolean} If true, then the deconstructor will be forced to return a MultiGeometry (multipoint, multilinestring or multipolygon)
     * @return          {Object}    A hash of the 'type' and 'components' thus derived, plus the WKT string of the feature.
     */
    Wkt.Wkt.prototype.deconstruct = function (obj, multiFlag) {
        var features, i, j, multiFlag, verts, rings, sign, tmp, response, lat, lng;

        // Shortcut to signed area function (determines clockwise vs counter-clock)
        if (google.maps.geometry) {
          sign = google.maps.geometry.spherical.computeSignedArea;
        };

        // google.maps.LatLng //////////////////////////////////////////////////////
        if (obj.constructor === google.maps.LatLng) {

            response = {
                type: 'point',
                components: [{
                    x: obj.lng(),
                    y: obj.lat()
                }]
            };
            return response;
        }

        // google.maps.Point //////////////////////////////////////////////////////
        if (obj.constructor === google.maps.Point) {
            response = {
                type: 'point',
                components: [{
                    x: obj.x,
                    y: obj.y
                }]
            };
            return response;
        }

        // google.maps.Marker //////////////////////////////////////////////////////
        if (obj.constructor === google.maps.Marker) {
            response = {
                type: 'point',
                components: [{
                    x: obj.getPosition().lng(),
                    y: obj.getPosition().lat()
                }]
            };
            return response;
        }

        // google.maps.Polyline ////////////////////////////////////////////////////
        if (obj.constructor === google.maps.Polyline) {

            verts = [];
            for (i = 0; i < obj.getPath().length; i += 1) {
                tmp = obj.getPath().getAt(i);
                verts.push({
                    x: tmp.lng(),
                    y: tmp.lat()
                });
            }
            response = {
                type: 'linestring',
                components: verts
            };
            return response;

        }

        // google.maps.Polygon /////////////////////////////////////////////////////
        if (obj.constructor === google.maps.Polygon) {

            rings = [];

            if (multiFlag === undefined) {
                multiFlag = (function () {
                    var areas, i, l;

                    l = obj.getPaths().length;
                    if (l <= 1) { // Trivial; this is a single polygon
                        return false;
                    }

                    if (l === 2) {
                        // If clockwise*clockwise or counter*counter, i.e.
                        //  (-1)*(-1) or (1)*(1), then result would be positive
                        if (sign(obj.getPaths().getAt(0)) * sign(obj.getPaths().getAt(1)) < 0) {
                            return false; // Most likely single polygon with 1 hole
                        }

                        return true;
                    }

                    // Must be longer than 3 polygons at this point...
                    areas = obj.getPaths().getArray().map(function (k) {
                        return sign(k) / Math.abs(sign(k)); // Unit normalization (outputs 1 or -1)
                    });

                    // If two clockwise or two counter-clockwise rings are found
                    //  (at different indices)...
                    if (areas.indexOf(areas[0]) !== areas.lastIndexOf(areas[0])) {
                        multiFlag = true; // Flag for holes in one or more polygons
                        return true;
                    }

                    return false;

                }());
            }

            for (i = 0; i < obj.getPaths().length; i += 1) { // For each polygon (ring)...
                tmp = obj.getPaths().getAt(i);
                verts = [];
                for (j = 0; j < obj.getPaths().getAt(i).length; j += 1) { // For each vertex...
                    verts.push({
                        x: tmp.getAt(j).lng(),
                        y: tmp.getAt(j).lat()
                    });

                }

                if (!tmp.getAt(tmp.length - 1).equals(tmp.getAt(0))) {
                    if (i % 2 !== 0) { // In inner rings, coordinates are reversed...
                        verts.unshift({ // Add the first coordinate again for closure
                            x: tmp.getAt(tmp.length - 1).lng(),
                            y: tmp.getAt(tmp.length - 1).lat()
                        });

                    } else {
                        verts.push({ // Add the first coordinate again for closure
                            x: tmp.getAt(0).lng(),
                            y: tmp.getAt(0).lat()
                        });

                    }

                }

                if (obj.getPaths().length > 1 && i > 0) {
                    // If this and the last ring have the same signs...
                    if (sign(obj.getPaths().getAt(i)) > 0 && sign(obj.getPaths().getAt(i - 1)) > 0 ||
                        sign(obj.getPaths().getAt(i)) < 0 && sign(obj.getPaths().getAt(i - 1)) < 0 && !multiFlag) {
                        // ...They must both be inner rings (or both be outer rings, in a multipolygon)
                        verts = [verts]; // Wrap multipolygons once more (collection)
                    }

                }

                //TODO This makes mistakes when a second polygon has holes; it sees them all as individual polygons
                if (i % 2 !== 0) { // In inner rings, coordinates are reversed...
                    verts.reverse();
                }
                rings.push(verts);
            }

            response = {
                type: (multiFlag) ? 'multipolygon' : 'polygon',
                components: rings
            };
            return response;

        }

        // google.maps.Circle //////////////////////////////////////////////////////
        if (obj.constructor === google.maps.Circle) {
            var point = obj.getCenter();
            var radius = obj.getRadius();
            verts = [];
            var d2r = Math.PI / 180; // degrees to radians
            var r2d = 180 / Math.PI; // radians to degrees
            radius = radius / 1609; // meters to miles
            var earthsradius = 3963; // 3963 is the radius of the earth in miles
            var num_seg = 32; // number of segments used to approximate a circle
            var rlat = (radius / earthsradius) * r2d;
            var rlng = rlat / Math.cos(point.lat() * d2r);

            for (var n = 0; n <= num_seg; n++) {
                var theta = Math.PI * (n / (num_seg / 2));
                lng = point.lng() + (rlng * Math.cos(theta)); // center a + radius x * cos(theta)
                lat = point.lat() + (rlat * Math.sin(theta)); // center b + radius y * sin(theta)
                verts.push({
                    x: lng,
                    y: lat
                });
            }

            response = {
                type: 'polygon',
                components: [verts]
            };

            return response;

        }

        // google.maps.LatLngBounds ///////////////////////////////////////////////////
        if (obj.constructor === google.maps.LatLngBounds) {

            tmp = obj;
            verts = [];
            verts.push({ // NW corner
                x: tmp.getSouthWest().lng(),
                y: tmp.getNorthEast().lat()
            });

            verts.push({ // NE corner
                x: tmp.getNorthEast().lng(),
                y: tmp.getNorthEast().lat()
            });

            verts.push({ // SE corner
                x: tmp.getNorthEast().lng(),
                y: tmp.getSouthWest().lat()
            });

            verts.push({ // SW corner
                x: tmp.getSouthWest().lng(),
                y: tmp.getSouthWest().lat()
            });

            verts.push({ // NW corner (again, for closure)
                x: tmp.getSouthWest().lng(),
                y: tmp.getNorthEast().lat()
            });


            response = {
                type: 'polygon',
                isRectangle: true,
                components: [verts]
            };

            return response;

        }

        // google.maps.Rectangle ///////////////////////////////////////////////////
        if (obj.constructor === google.maps.Rectangle) {

            tmp = obj.getBounds();
            verts = [];
            verts.push({ // NW corner
                x: tmp.getSouthWest().lng(),
                y: tmp.getNorthEast().lat()
            });

            verts.push({ // NE corner
                x: tmp.getNorthEast().lng(),
                y: tmp.getNorthEast().lat()
            });

            verts.push({ // SE corner
                x: tmp.getNorthEast().lng(),
                y: tmp.getSouthWest().lat()
            });

            verts.push({ // SW corner
                x: tmp.getSouthWest().lng(),
                y: tmp.getSouthWest().lat()
            });

            verts.push({ // NW corner (again, for closure)
                x: tmp.getSouthWest().lng(),
                y: tmp.getNorthEast().lat()
            });


            response = {
                type: 'polygon',
                isRectangle: true,
                components: [verts]
            };

            return response;

        }

        // google.maps.Data Geometry Types /////////////////////////////////////////////////////

        // google.maps.Data.Feature /////////////////////////////////////////////////////
        if (obj.constructor === google.maps.Data.Feature) {
            return this.deconstruct.call(this, obj.getGeometry());
        }

        // google.maps.Data.Point /////////////////////////////////////////////////////
        if (obj.constructor === google.maps.Data.Point) {
            //console.log('It is a google.maps.Data.Point');
            response = {
                type: 'point',
                components: [{
                    x: obj.get().lng(),
                    y: obj.get().lat()
                }]
            };
            return response;
        }

        // google.maps.Data.LineString /////////////////////////////////////////////////////
        if (obj.constructor === google.maps.Data.LineString) {
            verts = [];
            //console.log('It is a google.maps.Data.LineString');
            for (i = 0; i < obj.getLength(); i += 1) {
                vertex = obj.getAt(i);
                verts.push({
                    x: vertex.lng(),
                    y: vertex.lat()
                });
            }
            response = {
                type: 'linestring',
                components: verts
            };
            return response;
        }




        // google.maps.Data.Polygon /////////////////////////////////////////////////////
        if (obj.constructor === google.maps.Data.Polygon) {
            var rings = [];
            //console.log('It is a google.maps.Data.Polygon');
            for (i = 0; i < obj.getLength(); i += 1) { // For each ring...
                ring = obj.getAt(i);
                var verts = [];
                for (j = 0; j < ring.getLength(); j += 1) { // For each vertex...
                    vertex = ring.getAt(j);
                    verts.push({
                        x: vertex.lng(),
                        y: vertex.lat()
                    });
                }
                verts.push({
                    x: ring.getAt(0).lng(),
                    y: ring.getAt(0).lat()
                });

                rings.push(verts);
            }
            response = {
                type: 'polygon',
                components: rings
            };

            return response;
        }


        // google.maps.Data.MultiPoint /////////////////////////////////////////////////////
        if (obj.constructor === google.maps.Data.MultiPoint) {
            verts = [];
            for (i = 0; i < obj.getLength(); i += 1) {
                vertex = obj.getAt(i);
                verts.push([{
                    x: vertex.lng(),
                    y: vertex.lat()
                }]);
            }
            response = {
                type: 'multipoint',
                components: verts
            };
            return response;
        }

        // google.maps.Data.MultiLineString /////////////////////////////////////////////////////
        if (obj.constructor === google.maps.Data.MultiLineString) {
            linestrings = []
            for (i = 0; i < obj.getLength(); i += 1) {
                verts = [];
                var linestring = obj.getAt(i);
                for (j = 0; j < linestring.getLength(); j += 1) {
                    vertex = linestring.getAt(j);
                    verts.push({
                        x: vertex.lng(),
                        y: vertex.lat()
                    });
                }
                linestrings.push(verts);
            }
            response = {
                type: 'multilinestring',
                components: linestrings
            };
            return response;
        }

        // google.maps.Data.MultiPolygon /////////////////////////////////////////////////////
        if (obj.constructor === google.maps.Data.MultiPolygon) {

            var polygons = [];

            //console.log('It is a google.maps.Data.MultiPolygon');
            for (k = 0; k < obj.getLength(); k += 1) { // For each multipolygon
                var polygon = obj.getAt(k);
                var rings = [];
                for (i = 0; i < polygon.getLength(); i += 1) { // For each ring...
                    ring = polygon.getAt(i);
                    var verts = [];
                    for (j = 0; j < ring.getLength(); j += 1) { // For each vertex...
                        vertex = ring.getAt(j);
                        verts.push({
                            x: vertex.lng(),
                            y: vertex.lat()
                        });
                    }
                    verts.push({
                        x: ring.getAt(0).lng(),
                        y: ring.getAt(0).lat()
                    });

                    rings.push(verts);
                }
                polygons.push(rings);
            }

            response = {
                type: 'multipolygon',
                components: polygons
            };
            return response;
        }

        // google.maps.Data.GeometryCollection /////////////////////////////////////////////////////
        if (obj.constructor === google.maps.Data.GeometryCollection) {

            var objects = [];
            for (k = 0; k < obj.getLength(); k += 1) { // For each multipolygon
                var object = obj.getAt(k);
                objects.push(this.deconstruct.call(this, object));
            }
            //console.log('It is a google.maps.Data.GeometryCollection', objects);
            response = {
                type: 'geometrycollection',
                components: objects
            };
            return response;
        }


        // Array ///////////////////////////////////////////////////////////////////
        if (Wkt.isArray(obj)) {
            features = [];

            for (i = 0; i < obj.length; i += 1) {
                features.push(this.deconstruct.call(this, obj[i], true));
            }

            response = {

                type: (function () {
                    var k, type = obj[0].constructor;

                    for (k = 0; k < obj.length; k += 1) {
                        // Check that all items have the same constructor as the first item
                        if (obj[k].constructor !== type) {
                            // If they don't, type is heterogeneous geometry collection
                            return 'geometrycollection';
                        }
                    }

                    switch (type) {
                    case google.maps.Marker:
                        return 'multipoint';
                    case google.maps.Polyline:
                        return 'multilinestring';
                    case google.maps.Polygon:
                        return 'multipolygon';
                    default:
                        return 'geometrycollection';
                    }

                }()),
                components: (function () {
                    // Pluck the components from each Wkt
                    var i, comps;

                    comps = [];
                    for (i = 0; i < features.length; i += 1) {
                        if (features[i].components) {
                            comps.push(features[i].components);
                        }
                    }

                    return {
                        comps: comps
                    };
                }())

            };
            response.components = response.components.comps;
            return response;

        }

        console.log('The passed object does not have any recognizable properties.');

    };
}(Wkt || require('./wicket')));;
/*!
 * clipboard.js v1.7.1
 * https://zenorocha.github.io/clipboard.js
 *
 * Licensed MIT © Zeno Rocha
 */
!function(t){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=t();else if("function"==typeof define&&define.amd)define([],t);else{var e;e="undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:this,e.Clipboard=t()}}(function(){var t,e,n;return function t(e,n,o){function i(a,c){if(!n[a]){if(!e[a]){var l="function"==typeof require&&require;if(!c&&l)return l(a,!0);if(r)return r(a,!0);var s=new Error("Cannot find module '"+a+"'");throw s.code="MODULE_NOT_FOUND",s}var u=n[a]={exports:{}};e[a][0].call(u.exports,function(t){var n=e[a][1][t];return i(n||t)},u,u.exports,t,e,n,o)}return n[a].exports}for(var r="function"==typeof require&&require,a=0;a<o.length;a++)i(o[a]);return i}({1:[function(t,e,n){function o(t,e){for(;t&&t.nodeType!==i;){if("function"==typeof t.matches&&t.matches(e))return t;t=t.parentNode}}var i=9;if("undefined"!=typeof Element&&!Element.prototype.matches){var r=Element.prototype;r.matches=r.matchesSelector||r.mozMatchesSelector||r.msMatchesSelector||r.oMatchesSelector||r.webkitMatchesSelector}e.exports=o},{}],2:[function(t,e,n){function o(t,e,n,o,r){var a=i.apply(this,arguments);return t.addEventListener(n,a,r),{destroy:function(){t.removeEventListener(n,a,r)}}}function i(t,e,n,o){return function(n){n.delegateTarget=r(n.target,e),n.delegateTarget&&o.call(t,n)}}var r=t("./closest");e.exports=o},{"./closest":1}],3:[function(t,e,n){n.node=function(t){return void 0!==t&&t instanceof HTMLElement&&1===t.nodeType},n.nodeList=function(t){var e=Object.prototype.toString.call(t);return void 0!==t&&("[object NodeList]"===e||"[object HTMLCollection]"===e)&&"length"in t&&(0===t.length||n.node(t[0]))},n.string=function(t){return"string"==typeof t||t instanceof String},n.fn=function(t){return"[object Function]"===Object.prototype.toString.call(t)}},{}],4:[function(t,e,n){function o(t,e,n){if(!t&&!e&&!n)throw new Error("Missing required arguments");if(!c.string(e))throw new TypeError("Second argument must be a String");if(!c.fn(n))throw new TypeError("Third argument must be a Function");if(c.node(t))return i(t,e,n);if(c.nodeList(t))return r(t,e,n);if(c.string(t))return a(t,e,n);throw new TypeError("First argument must be a String, HTMLElement, HTMLCollection, or NodeList")}function i(t,e,n){return t.addEventListener(e,n),{destroy:function(){t.removeEventListener(e,n)}}}function r(t,e,n){return Array.prototype.forEach.call(t,function(t){t.addEventListener(e,n)}),{destroy:function(){Array.prototype.forEach.call(t,function(t){t.removeEventListener(e,n)})}}}function a(t,e,n){return l(document.body,t,e,n)}var c=t("./is"),l=t("delegate");e.exports=o},{"./is":3,delegate:2}],5:[function(t,e,n){function o(t){var e;if("SELECT"===t.nodeName)t.focus(),e=t.value;else if("INPUT"===t.nodeName||"TEXTAREA"===t.nodeName){var n=t.hasAttribute("readonly");n||t.setAttribute("readonly",""),t.select(),t.setSelectionRange(0,t.value.length),n||t.removeAttribute("readonly"),e=t.value}else{t.hasAttribute("contenteditable")&&t.focus();var o=window.getSelection(),i=document.createRange();i.selectNodeContents(t),o.removeAllRanges(),o.addRange(i),e=o.toString()}return e}e.exports=o},{}],6:[function(t,e,n){function o(){}o.prototype={on:function(t,e,n){var o=this.e||(this.e={});return(o[t]||(o[t]=[])).push({fn:e,ctx:n}),this},once:function(t,e,n){function o(){i.off(t,o),e.apply(n,arguments)}var i=this;return o._=e,this.on(t,o,n)},emit:function(t){var e=[].slice.call(arguments,1),n=((this.e||(this.e={}))[t]||[]).slice(),o=0,i=n.length;for(o;o<i;o++)n[o].fn.apply(n[o].ctx,e);return this},off:function(t,e){var n=this.e||(this.e={}),o=n[t],i=[];if(o&&e)for(var r=0,a=o.length;r<a;r++)o[r].fn!==e&&o[r].fn._!==e&&i.push(o[r]);return i.length?n[t]=i:delete n[t],this}},e.exports=o},{}],7:[function(e,n,o){!function(i,r){if("function"==typeof t&&t.amd)t(["module","select"],r);else if(void 0!==o)r(n,e("select"));else{var a={exports:{}};r(a,i.select),i.clipboardAction=a.exports}}(this,function(t,e){"use strict";function n(t){return t&&t.__esModule?t:{default:t}}function o(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}var i=n(e),r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},a=function(){function t(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}return function(e,n,o){return n&&t(e.prototype,n),o&&t(e,o),e}}(),c=function(){function t(e){o(this,t),this.resolveOptions(e),this.initSelection()}return a(t,[{key:"resolveOptions",value:function t(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};this.action=e.action,this.container=e.container,this.emitter=e.emitter,this.target=e.target,this.text=e.text,this.trigger=e.trigger,this.selectedText=""}},{key:"initSelection",value:function t(){this.text?this.selectFake():this.target&&this.selectTarget()}},{key:"selectFake",value:function t(){var e=this,n="rtl"==document.documentElement.getAttribute("dir");this.removeFake(),this.fakeHandlerCallback=function(){return e.removeFake()},this.fakeHandler=this.container.addEventListener("click",this.fakeHandlerCallback)||!0,this.fakeElem=document.createElement("textarea"),this.fakeElem.style.fontSize="12pt",this.fakeElem.style.border="0",this.fakeElem.style.padding="0",this.fakeElem.style.margin="0",this.fakeElem.style.position="absolute",this.fakeElem.style[n?"right":"left"]="-9999px";var o=window.pageYOffset||document.documentElement.scrollTop;this.fakeElem.style.top=o+"px",this.fakeElem.setAttribute("readonly",""),this.fakeElem.value=this.text,this.container.appendChild(this.fakeElem),this.selectedText=(0,i.default)(this.fakeElem),this.copyText()}},{key:"removeFake",value:function t(){this.fakeHandler&&(this.container.removeEventListener("click",this.fakeHandlerCallback),this.fakeHandler=null,this.fakeHandlerCallback=null),this.fakeElem&&(this.container.removeChild(this.fakeElem),this.fakeElem=null)}},{key:"selectTarget",value:function t(){this.selectedText=(0,i.default)(this.target),this.copyText()}},{key:"copyText",value:function t(){var e=void 0;try{e=document.execCommand(this.action)}catch(t){e=!1}this.handleResult(e)}},{key:"handleResult",value:function t(e){this.emitter.emit(e?"success":"error",{action:this.action,text:this.selectedText,trigger:this.trigger,clearSelection:this.clearSelection.bind(this)})}},{key:"clearSelection",value:function t(){this.trigger&&this.trigger.focus(),window.getSelection().removeAllRanges()}},{key:"destroy",value:function t(){this.removeFake()}},{key:"action",set:function t(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"copy";if(this._action=e,"copy"!==this._action&&"cut"!==this._action)throw new Error('Invalid "action" value, use either "copy" or "cut"')},get:function t(){return this._action}},{key:"target",set:function t(e){if(void 0!==e){if(!e||"object"!==(void 0===e?"undefined":r(e))||1!==e.nodeType)throw new Error('Invalid "target" value, use a valid Element');if("copy"===this.action&&e.hasAttribute("disabled"))throw new Error('Invalid "target" attribute. Please use "readonly" instead of "disabled" attribute');if("cut"===this.action&&(e.hasAttribute("readonly")||e.hasAttribute("disabled")))throw new Error('Invalid "target" attribute. You can\'t cut text from elements with "readonly" or "disabled" attributes');this._target=e}},get:function t(){return this._target}}]),t}();t.exports=c})},{select:5}],8:[function(e,n,o){!function(i,r){if("function"==typeof t&&t.amd)t(["module","./clipboard-action","tiny-emitter","good-listener"],r);else if(void 0!==o)r(n,e("./clipboard-action"),e("tiny-emitter"),e("good-listener"));else{var a={exports:{}};r(a,i.clipboardAction,i.tinyEmitter,i.goodListener),i.clipboard=a.exports}}(this,function(t,e,n,o){"use strict";function i(t){return t&&t.__esModule?t:{default:t}}function r(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function a(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}function c(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}function l(t,e){var n="data-clipboard-"+t;if(e.hasAttribute(n))return e.getAttribute(n)}var s=i(e),u=i(n),f=i(o),d="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},h=function(){function t(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}return function(e,n,o){return n&&t(e.prototype,n),o&&t(e,o),e}}(),p=function(t){function e(t,n){r(this,e);var o=a(this,(e.__proto__||Object.getPrototypeOf(e)).call(this));return o.resolveOptions(n),o.listenClick(t),o}return c(e,t),h(e,[{key:"resolveOptions",value:function t(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};this.action="function"==typeof e.action?e.action:this.defaultAction,this.target="function"==typeof e.target?e.target:this.defaultTarget,this.text="function"==typeof e.text?e.text:this.defaultText,this.container="object"===d(e.container)?e.container:document.body}},{key:"listenClick",value:function t(e){var n=this;this.listener=(0,f.default)(e,"click",function(t){return n.onClick(t)})}},{key:"onClick",value:function t(e){var n=e.delegateTarget||e.currentTarget;this.clipboardAction&&(this.clipboardAction=null),this.clipboardAction=new s.default({action:this.action(n),target:this.target(n),text:this.text(n),container:this.container,trigger:n,emitter:this})}},{key:"defaultAction",value:function t(e){return l("action",e)}},{key:"defaultTarget",value:function t(e){var n=l("target",e);if(n)return document.querySelector(n)}},{key:"defaultText",value:function t(e){return l("text",e)}},{key:"destroy",value:function t(){this.listener.destroy(),this.clipboardAction&&(this.clipboardAction.destroy(),this.clipboardAction=null)}}],[{key:"isSupported",value:function t(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:["copy","cut"],n="string"==typeof e?[e]:e,o=!!document.queryCommandSupported;return n.forEach(function(t){o=o&&!!document.queryCommandSupported(t)}),o}}]),e}(u.default);t.exports=p})},{"./clipboard-action":7,"good-listener":4,"tiny-emitter":6}]},{},[8])(8)});;
var signInComponent = (function ($) {
    var self = {
        loaded: false,
        // Will hide all panels dealing with this component.
        /*cancel: function (e) {

            e.preventDefault();
            $(".sign-in-component").hide();
            $(".sign-in-component .display").hide();

            //Makes sure messages are not shown again
            $("#uxWarning").text(new String());
            $(".signin-warning").hide();

            $("#uxForgottenPasswordMessage").text(new String());
            $("#uxResetPasswordSuccess").text(new String());
            $(".forgotten-password-warning").hide();

            $("#back-drop").off("click");
            $("#back-drop").remove();

            self.loaded = false;

            $("body").trigger("login-status-Update", { status: "cancelled" });

            webproxy.Execute("user-cancel-authentication-request", {}, function (data) {
                //fire and forget.
            }, function (error) { });

        },*/
        // public void
        AddFavouriteProperty: function (name, url) {

            var itemAlreadyExists = false;
            $("[data-profilelist=favourites]").parent().find("li").each(function (e) {
                if ($(this).text() == name) {
                    itemAlreadyExists = true;
                }
            });
            if (itemAlreadyExists == false) {
                $("[data-profilelist=favourites]").after("<li><a href=\"" + url + "\">" + name + "</a></li>");
            }

        },
        //void
        RemoveFavouriteProperty: function (url) {
            $(".sign-in-panel [href=\"" + url + "\"]").remove();
        },
        // public void
        AddSavedSearch: function (name, url) {
            var itemAlreadyExists = false;
            $("[data-profilelist=savedSearches]").parent().find("li").each(function (e) {
                if ($(this).text() == name && name != "more..") {
                    itemAlreadyExists = true;
                }
            });
            if (itemAlreadyExists == false) {
                $("[data-profilelist=savedSearches]").after("<li><a href=\"" + url + "\">" + name + "</a></li>");
            }
        },
        refreshSavedSearches: function () {
            //Call web api and update the quick list for saved searches.
            $.ajax({
                type: 'GET',
                url: 'api/folio/getAll',
                dataType: 'json',
                success: function (response) {
                    if (response.Success) {
                        var returnedObject = JSON.parse(response.Result);
                        if (returnedObject.length > 0) {
                            self.clearSavedSearchList();
                            if (returnedObject.length > 5) {
                                self.AddSavedSearch("more..", "/accounts/saved-searches");
                            }
                            var counter = 0;
                            for (var f in returnedObject) {
                                if (counter < 5) {
                                    self.AddSavedSearch(returnedObject[f].Key, returnedObject[f].Value);
                                } else {
                                    break;
                                }
                                counter++;
                            }
                        }
                    }
                }
            });
        },

        clearSavedSearchList: function () {
            //TODO - Clear all saved searches from quick list. 
            var currentElement = $("[data-profilelist=savedSearches]");
            var listOfRemovedElements = [];
            for (var i = 0; i < 50; i++) {
                currentElement = $($(currentElement).next());
                if (currentElement.hasClass("divider")) {
                    break;
                }
                listOfRemovedElements.push(currentElement);

            }

            for (var i = 0; i < listOfRemovedElements.length; i++) {
                $(listOfRemovedElements)[i].detach();
            }


        }
    };
    return self;
})(window.jQuery);;
var videoEmbed = (function ($) {
    var self = {
        Selector: '[data-videoembed-init=true]',
        _autostart:
            false,
        _controls:
            true,
        _skin:
            "Stormtrooper",
        _aspectratio:
            "16:9",
        init: function () {
            $('[data-videoembed-init=true]').each(function() {
                var model = $(this);
                self._calculateRatio(model);
                self._initEventListeners(model);
            });
        },
        _initEventListeners: function (model) {
            model.parent().on('click',
                function(e) {
                    model.attr('src', model.attr('disabled-src'));
                    var placeholder = $(this).find('img');
                    model.on('load',
                        function() {
                            model.show();
                            placeholder.hide();
                            model.parent().find('.youtube-play-button').hide();
                        });

                });
        },
        _calculateRatio: function (model) {
            var widthRatio = heightRatio = 0;
            var widthOfParent = model.parent().css("width").replace("px", '') * 1;
            if (model.attr('data-aspectratio').split(':').length > 2) {
                //example of what we might have returns in this case "16:9 640 : 360"
                widthRatio = model.attr('data-aspectratio').replace(" : ", ":").split(' ')[0].split(':')[0] * 1;
                heightRatio = model.attr('data-aspectratio').replace(" : ", ":").split(' ')[0].split(':')[1] * 1;

            } else {
                //example of what we might have returns in this case "16:9"
                widthRatio = model.attr('data-aspectratio').split(':')[0] * 1;
                heightRatio = model.attr('data-aspectratio').split(':')[1] * 1;
            }

            if (heightRatio === 0) {
                heightRatio = 9;
            }

            model.css({
                "width": '100%',
                "height": widthOfParent / widthRatio * heightRatio + 'px'
            });
        }



    }
    return self;
})(window.jQuery);

jQuery(document).ready(function () {
    videoEmbed.init();
});
;
/**
 * @license AngularJS v1.5.0
 * (c) 2010-2016 Google, Inc. http://angularjs.org
 * License: MIT
 */
(function (window, angular, undefined) {
    'use strict';

    /* global ngTouchClickDirectiveFactory: false,
     */

    /**
     * @ngdoc module
     * @name ngTouch
     * @description
     *
     * # ngTouch
     *
     * The `ngTouch` module provides touch events and other helpers for touch-enabled devices.
     * The implementation is based on jQuery Mobile touch event handling
     * ([jquerymobile.com](http://jquerymobile.com/)).
     *
     *
     * See {@link ngTouch.$swipe `$swipe`} for usage.
     *
     * <div doc-module-components="ngTouch"></div>
     *
     */

    // define ngTouch module
    /* global -ngTouch */
    var ngTouch = angular.module('ngTouch', []);

    ngTouch.provider('$touch', $TouchProvider);

    function nodeName_(element) {
        return angular.lowercase(element.nodeName || (element[0] && element[0].nodeName));
    }

    /**
     * @ngdoc provider
     * @name $touchProvider
     *
     * @description
     * The `$touchProvider` allows enabling / disabling {@link ngTouch.ngClick ngTouch's ngClick directive}.
     */
    $TouchProvider.$inject = ['$provide', '$compileProvider'];
    function $TouchProvider($provide, $compileProvider) {

        /**
         * @ngdoc method
         * @name  $touchProvider#ngClickOverrideEnabled
         *
         * @param {boolean=} enabled update the ngClickOverrideEnabled state if provided, otherwise just return the
         * current ngClickOverrideEnabled state
         * @returns {*} current value if used as getter or itself (chaining) if used as setter
         *
         * @kind function
         *
         * @description
         * Call this method to enable/disable {@link ngTouch.ngClick ngTouch's ngClick directive}. If enabled,
         * the default ngClick directive will be replaced by a version that eliminates the 300ms delay for
         * click events on browser for touch-devices.
         *
         * The default is `false`.
         *
         */
        var ngClickOverrideEnabled = false;
        var ngClickDirectiveAdded = false;
        this.ngClickOverrideEnabled = function (enabled) {
            if (angular.isDefined(enabled)) {

                if (enabled && !ngClickDirectiveAdded) {
                    ngClickDirectiveAdded = true;

                    // Use this to identify the correct directive in the delegate
                    ngTouchClickDirectiveFactory.$$moduleName = 'ngTouch';
                    $compileProvider.directive('ngClick', ngTouchClickDirectiveFactory);

                    $provide.decorator('ngClickDirective', ['$delegate', function ($delegate) {
                        if (ngClickOverrideEnabled) {
                            // drop the default ngClick directive
                            $delegate.shift();
                        } else {
                            // drop the ngTouch ngClick directive if the override has been re-disabled (because
                            // we cannot de-register added directives)
                            var i = $delegate.length - 1;
                            while (i >= 0) {
                                if ($delegate[i].$$moduleName === 'ngTouch') {
                                    $delegate.splice(i, 1);
                                    break;
                                }
                                i--;
                            }
                        }

                        return $delegate;
                    }]);
                }

                ngClickOverrideEnabled = enabled;
                return this;
            }

            return ngClickOverrideEnabled;
        };

        /**
        * @ngdoc service
        * @name $touch
        * @kind object
        *
        * @description
        * Provides the {@link ngTouch.$touch#ngClickOverrideEnabled `ngClickOverrideEnabled`} method.
        *
        */
        this.$get = function () {
            return {
                /**
                 * @ngdoc method
                 * @name  $touch#ngClickOverrideEnabled
                 *
                 * @returns {*} current value of `ngClickOverrideEnabled` set in the {@link ngTouch.$touchProvider $touchProvider},
                 * i.e. if {@link ngTouch.ngClick ngTouch's ngClick} directive is enabled.
                 *
                 * @kind function
                 */
                ngClickOverrideEnabled: function () {
                    return ngClickOverrideEnabled;
                }
            };
        };

    }

    /* global ngTouch: false */

    /**
     * @ngdoc service
     * @name $swipe
     *
     * @description
     * The `$swipe` service is a service that abstracts the messier details of hold-and-drag swipe
     * behavior, to make implementing swipe-related directives more convenient.
     *
     * Requires the {@link ngTouch `ngTouch`} module to be installed.
     *
     * `$swipe` is used by the `ngSwipeLeft` and `ngSwipeRight` directives in `ngTouch`.
     *
     * # Usage
     * The `$swipe` service is an object with a single method: `bind`. `bind` takes an element
     * which is to be watched for swipes, and an object with four handler functions. See the
     * documentation for `bind` below.
     */

    ngTouch.factory('$swipe', [function () {
        // The total distance in any direction before we make the call on swipe vs. scroll.
        var MOVE_BUFFER_RADIUS = 10;

        var POINTER_EVENTS = {
            'mouse': {
                start: 'mousedown',
                move: 'mousemove',
                end: 'mouseup'
            },
            'touch': {
                start: 'touchstart',
                move: 'touchmove',
                end: 'touchend',
                cancel: 'touchcancel'
            }
        };

        function getCoordinates(event) {
            var originalEvent = event.originalEvent || event;
            var touches = originalEvent.touches && originalEvent.touches.length ? originalEvent.touches : [originalEvent];
            var e = (originalEvent.changedTouches && originalEvent.changedTouches[0]) || touches[0];

            return {
                x: e.clientX,
                y: e.clientY
            };
        }

        function getEvents(pointerTypes, eventType) {
            var res = [];
            angular.forEach(pointerTypes, function (pointerType) {
                var eventName = POINTER_EVENTS[pointerType][eventType];
                if (eventName) {
                    res.push(eventName);
                }
            });
            return res.join(' ');
        }

        return {
            /**
             * @ngdoc method
             * @name $swipe#bind
             *
             * @description
             * The main method of `$swipe`. It takes an element to be watched for swipe motions, and an
             * object containing event handlers.
             * The pointer types that should be used can be specified via the optional
             * third argument, which is an array of strings `'mouse'` and `'touch'`. By default,
             * `$swipe` will listen for `mouse` and `touch` events.
             *
             * The four events are `start`, `move`, `end`, and `cancel`. `start`, `move`, and `end`
             * receive as a parameter a coordinates object of the form `{ x: 150, y: 310 }` and the raw
             * `event`. `cancel` receives the raw `event` as its single parameter.
             *
             * `start` is called on either `mousedown` or `touchstart`. After this event, `$swipe` is
             * watching for `touchmove` or `mousemove` events. These events are ignored until the total
             * distance moved in either dimension exceeds a small threshold.
             *
             * Once this threshold is exceeded, either the horizontal or vertical delta is greater.
             * - If the horizontal distance is greater, this is a swipe and `move` and `end` events follow.
             * - If the vertical distance is greater, this is a scroll, and we let the browser take over.
             *   A `cancel` event is sent.
             *
             * `move` is called on `mousemove` and `touchmove` after the above logic has determined that
             * a swipe is in progress.
             *
             * `end` is called when a swipe is successfully completed with a `touchend` or `mouseup`.
             *
             * `cancel` is called either on a `touchcancel` from the browser, or when we begin scrolling
             * as described above.
             *
             */
            bind: function (element, eventHandlers, pointerTypes) {
                // Absolute total movement, used to control swipe vs. scroll.
                var totalX, totalY;
                // Coordinates of the start position.
                var startCoords;
                // Last event's position.
                var lastPos;
                // Whether a swipe is active.
                var active = false;

                pointerTypes = pointerTypes || ['mouse', 'touch'];
                element.on(getEvents(pointerTypes, 'start'), function (event) {
                    startCoords = getCoordinates(event);
                    active = true;
                    totalX = 0;
                    totalY = 0;
                    lastPos = startCoords;
                    eventHandlers['start'] && eventHandlers['start'](startCoords, event);
                });
                var events = getEvents(pointerTypes, 'cancel');
                if (events) {
                    element.on(events, function (event) {
                        active = false;
                        eventHandlers['cancel'] && eventHandlers['cancel'](event);
                    });
                }

                element.on(getEvents(pointerTypes, 'move'), function (event) {
                    if (!active) return;

                    // Android will send a touchcancel if it thinks we're starting to scroll.
                    // So when the total distance (+ or - or both) exceeds 10px in either direction,
                    // we either:
                    // - On totalX > totalY, we send preventDefault() and treat this as a swipe.
                    // - On totalY > totalX, we let the browser handle it as a scroll.

                    if (!startCoords) return;
                    var coords = getCoordinates(event);

                    totalX += Math.abs(coords.x - lastPos.x);
                    totalY += Math.abs(coords.y - lastPos.y);

                    lastPos = coords;

                    if (totalX < MOVE_BUFFER_RADIUS && totalY < MOVE_BUFFER_RADIUS) {
                        return;
                    }

                    // One of totalX or totalY has exceeded the buffer, so decide on swipe vs. scroll.
                    if (totalY > totalX) {
                        // Allow native scrolling to take over.
                        active = false;
                        eventHandlers['cancel'] && eventHandlers['cancel'](event);
                        return;
                    } else {
                        // Prevent the browser from scrolling.
                        event.preventDefault();
                        eventHandlers['move'] && eventHandlers['move'](coords, event);
                    }
                });

                element.on(getEvents(pointerTypes, 'end'), function (event) {
                    if (!active) return;
                    active = false;
                    eventHandlers['end'] && eventHandlers['end'](getCoordinates(event), event);
                });
            }
        };
    }]);

    /* global ngTouch: false,
      nodeName_: false
    */

    /**
     * @ngdoc directive
     * @name ngClick
     * @deprecated
     *
     * @description
     * <div class="alert alert-danger">
     * **DEPRECATION NOTICE**: Beginning with Angular 1.5, this directive is deprecated and by default **disabled**.
     * The directive will receive no further support and might be removed from future releases.
     * If you need the directive, you can enable it with the {@link ngTouch.$touchProvider $touchProvider#ngClickOverrideEnabled}
     * function. We also recommend that you migrate to [FastClick](https://github.com/ftlabs/fastclick).
     * To learn more about the 300ms delay, this [Telerik article](http://developer.telerik.com/featured/300-ms-click-delay-ios-8/)
     * gives a good overview.
     * </div>
     * A more powerful replacement for the default ngClick designed to be used on touchscreen
     * devices. Most mobile browsers wait about 300ms after a tap-and-release before sending
     * the click event. This version handles them immediately, and then prevents the
     * following click event from propagating.
     *
     * Requires the {@link ngTouch `ngTouch`} module to be installed.
     *
     * This directive can fall back to using an ordinary click event, and so works on desktop
     * browsers as well as mobile.
     *
     * This directive also sets the CSS class `ng-click-active` while the element is being held
     * down (by a mouse click or touch) so you can restyle the depressed element if you wish.
     *
     * @element ANY
     * @param {expression} ngClick {@link guide/expression Expression} to evaluate
     * upon tap. (Event object is available as `$event`)
     *
     * @example
        <example module="ngClickExample" deps="angular-touch.js">
          <file name="index.html">
            <button ng-click="count = count + 1" ng-init="count=0">
              Increment
            </button>
            count: {{ count }}
          </file>
          <file name="script.js">
            angular.module('ngClickExample', ['ngTouch']);
          </file>
        </example>
     */

    var ngTouchClickDirectiveFactory = ['$parse', '$timeout', '$rootElement',
        function ($parse, $timeout, $rootElement) {
            var TAP_DURATION = 750; // Shorter than 750ms is a tap, longer is a taphold or drag.
            var MOVE_TOLERANCE = 12; // 12px seems to work in most mobile browsers.
            var PREVENT_DURATION = 2500; // 2.5 seconds maximum from preventGhostClick call to click
            var CLICKBUSTER_THRESHOLD = 25; // 25 pixels in any dimension is the limit for busting clicks.

            var ACTIVE_CLASS_NAME = 'ng-click-active';
            var lastPreventedTime;
            var touchCoordinates;
            var lastLabelClickCoordinates;


            // TAP EVENTS AND GHOST CLICKS
            //
            // Why tap events?
            // Mobile browsers detect a tap, then wait a moment (usually ~300ms) to see if you're
            // double-tapping, and then fire a click event.
            //
            // This delay sucks and makes mobile apps feel unresponsive.
            // So we detect touchstart, touchcancel and touchend ourselves and determine when
            // the user has tapped on something.
            //
            // What happens when the browser then generates a click event?
            // The browser, of course, also detects the tap and fires a click after a delay. This results in
            // tapping/clicking twice. We do "clickbusting" to prevent it.
            //
            // How does it work?
            // We attach global touchstart and click handlers, that run during the capture (early) phase.
            // So the sequence for a tap is:
            // - global touchstart: Sets an "allowable region" at the point touched.
            // - element's touchstart: Starts a touch
            // (- touchcancel ends the touch, no click follows)
            // - element's touchend: Determines if the tap is valid (didn't move too far away, didn't hold
            //   too long) and fires the user's tap handler. The touchend also calls preventGhostClick().
            // - preventGhostClick() removes the allowable region the global touchstart created.
            // - The browser generates a click event.
            // - The global click handler catches the click, and checks whether it was in an allowable region.
            //     - If preventGhostClick was called, the region will have been removed, the click is busted.
            //     - If the region is still there, the click proceeds normally. Therefore clicks on links and
            //       other elements without ngTap on them work normally.
            //
            // This is an ugly, terrible hack!
            // Yeah, tell me about it. The alternatives are using the slow click events, or making our users
            // deal with the ghost clicks, so I consider this the least of evils. Fortunately Angular
            // encapsulates this ugly logic away from the user.
            //
            // Why not just put click handlers on the element?
            // We do that too, just to be sure. If the tap event caused the DOM to change,
            // it is possible another element is now in that position. To take account for these possibly
            // distinct elements, the handlers are global and care only about coordinates.

            // Checks if the coordinates are close enough to be within the region.
            function hit(x1, y1, x2, y2) {
                return Math.abs(x1 - x2) < CLICKBUSTER_THRESHOLD && Math.abs(y1 - y2) < CLICKBUSTER_THRESHOLD;
            }

            // Checks a list of allowable regions against a click location.
            // Returns true if the click should be allowed.
            // Splices out the allowable region from the list after it has been used.
            function checkAllowableRegions(touchCoordinates, x, y) {
                for (var i = 0; i < touchCoordinates.length; i += 2) {
                    if (hit(touchCoordinates[i], touchCoordinates[i + 1], x, y)) {
                        touchCoordinates.splice(i, i + 2);
                        return true; // allowable region
                    }
                }
                return false; // No allowable region; bust it.
            }

            // Global click handler that prevents the click if it's in a bustable zone and preventGhostClick
            // was called recently.
            function onClick(event) {
                if (Date.now() - lastPreventedTime > PREVENT_DURATION) {
                    return; // Too old.
                }

                var touches = event.touches && event.touches.length ? event.touches : [event];
                var x = touches[0].clientX;
                var y = touches[0].clientY;
                // Work around desktop Webkit quirk where clicking a label will fire two clicks (on the label
                // and on the input element). Depending on the exact browser, this second click we don't want
                // to bust has either (0,0), negative coordinates, or coordinates equal to triggering label
                // click event
                if (x < 1 && y < 1) {
                    return; // offscreen
                }
                if (lastLabelClickCoordinates &&
                    lastLabelClickCoordinates[0] === x && lastLabelClickCoordinates[1] === y) {
                    return; // input click triggered by label click
                }
                // reset label click coordinates on first subsequent click
                if (lastLabelClickCoordinates) {
                    lastLabelClickCoordinates = null;
                }
                // remember label click coordinates to prevent click busting of trigger click event on input
                if (nodeName_(event.target) === 'label') {
                    lastLabelClickCoordinates = [x, y];
                }

                // Look for an allowable region containing this click.
                // If we find one, that means it was created by touchstart and not removed by
                // preventGhostClick, so we don't bust it.
                if (checkAllowableRegions(touchCoordinates, x, y)) {
                    return;
                }

                // If we didn't find an allowable region, bust the click.
                event.stopPropagation();
                event.preventDefault();

                // Blur focused form elements
                event.target && event.target.blur && event.target.blur();
            }


            // Global touchstart handler that creates an allowable region for a click event.
            // This allowable region can be removed by preventGhostClick if we want to bust it.
            function onTouchStart(event) {
                var touches = event.touches && event.touches.length ? event.touches : [event];
                var x = touches[0].clientX;
                var y = touches[0].clientY;
                touchCoordinates.push(x, y);

                $timeout(function () {
                    // Remove the allowable region.
                    for (var i = 0; i < touchCoordinates.length; i += 2) {
                        if (touchCoordinates[i] == x && touchCoordinates[i + 1] == y) {
                            touchCoordinates.splice(i, i + 2);
                            return;
                        }
                    }
                }, PREVENT_DURATION, false);
            }

            // On the first call, attaches some event handlers. Then whenever it gets called, it creates a
            // zone around the touchstart where clicks will get busted.
            function preventGhostClick(x, y) {
                if (!touchCoordinates) {
                    $rootElement[0].addEventListener('click', onClick, true);
                    $rootElement[0].addEventListener('touchstart', onTouchStart, true);
                    touchCoordinates = [];
                }

                lastPreventedTime = Date.now();

                checkAllowableRegions(touchCoordinates, x, y);
            }

            // Actual linking function.
            return function (scope, element, attr) {
                var clickHandler = $parse(attr.ngClick),
                    tapping = false,
                    tapElement,  // Used to blur the element after a tap.
                    startTime,   // Used to check if the tap was held too long.
                    touchStartX,
                    touchStartY;

                function resetState() {
                    tapping = false;
                    element.removeClass(ACTIVE_CLASS_NAME);
                }

                element.on('touchstart', function (event) {
                    tapping = true;
                    tapElement = event.target ? event.target : event.srcElement; // IE uses srcElement.
                    // Hack for Safari, which can target text nodes instead of containers.
                    if (tapElement.nodeType == 3) {
                        tapElement = tapElement.parentNode;
                    }

                    element.addClass(ACTIVE_CLASS_NAME);

                    startTime = Date.now();

                    // Use jQuery originalEvent
                    var originalEvent = event.originalEvent || event;
                    var touches = originalEvent.touches && originalEvent.touches.length ? originalEvent.touches : [originalEvent];
                    var e = touches[0];
                    touchStartX = e.clientX;
                    touchStartY = e.clientY;
                });

                element.on('touchcancel', function (event) {
                    resetState();
                });

                element.on('touchend', function (event) {
                    var diff = Date.now() - startTime;

                    // Use jQuery originalEvent
                    var originalEvent = event.originalEvent || event;
                    var touches = (originalEvent.changedTouches && originalEvent.changedTouches.length) ?
                        originalEvent.changedTouches :
                        ((originalEvent.touches && originalEvent.touches.length) ? originalEvent.touches : [originalEvent]);
                    var e = touches[0];
                    var x = e.clientX;
                    var y = e.clientY;
                    var dist = Math.sqrt(Math.pow(x - touchStartX, 2) + Math.pow(y - touchStartY, 2));

                    if (tapping && diff < TAP_DURATION && dist < MOVE_TOLERANCE) {
                        // Call preventGhostClick so the clickbuster will catch the corresponding click.
                        preventGhostClick(x, y);

                        // Blur the focused element (the button, probably) before firing the callback.
                        // This doesn't work perfectly on Android Chrome, but seems to work elsewhere.
                        // I couldn't get anything to work reliably on Android Chrome.
                        if (tapElement) {
                            tapElement.blur();
                        }

                        if (!angular.isDefined(attr.disabled) || attr.disabled === false) {
                            element.triggerHandler('click', [event]);
                        }
                    }

                    resetState();
                });

                // Hack for iOS Safari's benefit. It goes searching for onclick handlers and is liable to click
                // something else nearby.
                element.onclick = function (event) { };

                // Actual click handler.
                // There are three different kinds of clicks, only two of which reach this point.
                // - On desktop browsers without touch events, their clicks will always come here.
                // - On mobile browsers, the simulated "fast" click will call this.
                // - But the browser's follow-up slow click will be "busted" before it reaches this handler.
                // Therefore it's safe to use this directive on both mobile and desktop.
                element.on('click', function (event, touchend) {
                    scope.$apply(function () {
                        clickHandler(scope, { $event: (touchend || event) });
                    });
                });

                element.on('mousedown', function (event) {
                    element.addClass(ACTIVE_CLASS_NAME);
                });

                element.on('mousemove mouseup', function (event) {
                    element.removeClass(ACTIVE_CLASS_NAME);
                });

            };
        }];

    /* global ngTouch: false */

    /**
     * @ngdoc directive
     * @name ngSwipeLeft
     *
     * @description
     * Specify custom behavior when an element is swiped to the left on a touchscreen device.
     * A leftward swipe is a quick, right-to-left slide of the finger.
     * Though ngSwipeLeft is designed for touch-based devices, it will work with a mouse click and drag
     * too.
     *
     * To disable the mouse click and drag functionality, add `ng-swipe-disable-mouse` to
     * the `ng-swipe-left` or `ng-swipe-right` DOM Element.
     *
     * Requires the {@link ngTouch `ngTouch`} module to be installed.
     *
     * @element ANY
     * @param {expression} ngSwipeLeft {@link guide/expression Expression} to evaluate
     * upon left swipe. (Event object is available as `$event`)
     *
     * @example
        <example module="ngSwipeLeftExample" deps="angular-touch.js">
          <file name="index.html">
            <div ng-show="!showActions" ng-swipe-left="showActions = true">
              Some list content, like an email in the inbox
            </div>
            <div ng-show="showActions" ng-swipe-right="showActions = false">
              <button ng-click="reply()">Reply</button>
              <button ng-click="delete()">Delete</button>
            </div>
          </file>
          <file name="script.js">
            angular.module('ngSwipeLeftExample', ['ngTouch']);
          </file>
        </example>
     */

    /**
     * @ngdoc directive
     * @name ngSwipeRight
     *
     * @description
     * Specify custom behavior when an element is swiped to the right on a touchscreen device.
     * A rightward swipe is a quick, left-to-right slide of the finger.
     * Though ngSwipeRight is designed for touch-based devices, it will work with a mouse click and drag
     * too.
     *
     * Requires the {@link ngTouch `ngTouch`} module to be installed.
     *
     * @element ANY
     * @param {expression} ngSwipeRight {@link guide/expression Expression} to evaluate
     * upon right swipe. (Event object is available as `$event`)
     *
     * @example
        <example module="ngSwipeRightExample" deps="angular-touch.js">
          <file name="index.html">
            <div ng-show="!showActions" ng-swipe-left="showActions = true">
              Some list content, like an email in the inbox
            </div>
            <div ng-show="showActions" ng-swipe-right="showActions = false">
              <button ng-click="reply()">Reply</button>
              <button ng-click="delete()">Delete</button>
            </div>
          </file>
          <file name="script.js">
            angular.module('ngSwipeRightExample', ['ngTouch']);
          </file>
        </example>
     */

    function makeSwipeDirective(directiveName, direction, eventName) {
        ngTouch.directive(directiveName, ['$parse', '$swipe', function ($parse, $swipe) {
            // The maximum vertical delta for a swipe should be less than 75px.
            var MAX_VERTICAL_DISTANCE = 75;
            // Vertical distance should not be more than a fraction of the horizontal distance.
            var MAX_VERTICAL_RATIO = 0.3;
            // At least a 30px lateral motion is necessary for a swipe.
            var MIN_HORIZONTAL_DISTANCE = 30;

            return function (scope, element, attr) {
                var swipeHandler = $parse(attr[directiveName]);

                var startCoords, valid;

                function validSwipe(coords) {
                    // Check that it's within the coordinates.
                    // Absolute vertical distance must be within tolerances.
                    // Horizontal distance, we take the current X - the starting X.
                    // This is negative for leftward swipes and positive for rightward swipes.
                    // After multiplying by the direction (-1 for left, +1 for right), legal swipes
                    // (ie. same direction as the directive wants) will have a positive delta and
                    // illegal ones a negative delta.
                    // Therefore this delta must be positive, and larger than the minimum.
                    if (!startCoords) return false;
                    var deltaY = Math.abs(coords.y - startCoords.y);
                    var deltaX = (coords.x - startCoords.x) * direction;
                    return valid && // Short circuit for already-invalidated swipes.
                        deltaY < MAX_VERTICAL_DISTANCE &&
                        deltaX > 0 &&
                        deltaX > MIN_HORIZONTAL_DISTANCE &&
                        deltaY / deltaX < MAX_VERTICAL_RATIO;
                }

                var pointerTypes = ['touch'];
                if (!angular.isDefined(attr['ngSwipeDisableMouse'])) {
                    pointerTypes.push('mouse');
                }
                $swipe.bind(element, {
                    'start': function (coords, event) {
                        startCoords = coords;
                        valid = true;
                    },
                    'cancel': function (event) {
                        valid = false;
                    },
                    'end': function (coords, event) {
                        if (validSwipe(coords)) {
                            scope.$apply(function () {
                                element.triggerHandler(eventName);
                                swipeHandler(scope, { $event: event });
                            });
                        }
                    }
                }, pointerTypes);
            };
        }]);
    }

    // Left is negative X-coordinate, right is positive.
    makeSwipeDirective('ngSwipeLeft', -1, 'swipeleft');
    makeSwipeDirective('ngSwipeRight', 1, 'swiperight');



})(window, window.angular);;
/*
 * angular-ui-bootstrap
 * http://angular-ui.github.io/bootstrap/

 * Version: 2.2.0 - 2016-10-10
 * License: MIT
 */angular.module("ui.bootstrap", ["ui.bootstrap.modal","ui.bootstrap.stackedMap","ui.bootstrap.position"]);
angular.module('ui.bootstrap.modal', ['ui.bootstrap.stackedMap', 'ui.bootstrap.position'])
/**
 * A helper, internal data structure that stores all references attached to key
 */
  .factory('$$multiMap', function() {
    return {
      createNew: function() {
        var map = {};

        return {
          entries: function() {
            return Object.keys(map).map(function(key) {
              return {
                key: key,
                value: map[key]
              };
            });
          },
          get: function(key) {
            return map[key];
          },
          hasKey: function(key) {
            return !!map[key];
          },
          keys: function() {
            return Object.keys(map);
          },
          put: function(key, value) {
            if (!map[key]) {
              map[key] = [];
            }

            map[key].push(value);
          },
          remove: function(key, value) {
            var values = map[key];

            if (!values) {
              return;
            }

            var idx = values.indexOf(value);

            if (idx !== -1) {
              values.splice(idx, 1);
            }

            if (!values.length) {
              delete map[key];
            }
          }
        };
      }
    };
  })

/**
 * Pluggable resolve mechanism for the modal resolve resolution
 * Supports UI Router's $resolve service
 */
  .provider('$uibResolve', function() {
    var resolve = this;
    this.resolver = null;

    this.setResolver = function(resolver) {
      this.resolver = resolver;
    };

    this.$get = ['$injector', '$q', function($injector, $q) {
      var resolver = resolve.resolver ? $injector.get(resolve.resolver) : null;
      return {
        resolve: function(invocables, locals, parent, self) {
          if (resolver) {
            return resolver.resolve(invocables, locals, parent, self);
          }

          var promises = [];

          angular.forEach(invocables, function(value) {
            if (angular.isFunction(value) || angular.isArray(value)) {
              promises.push($q.resolve($injector.invoke(value)));
            } else if (angular.isString(value)) {
              promises.push($q.resolve($injector.get(value)));
            } else {
              promises.push($q.resolve(value));
            }
          });

          return $q.all(promises).then(function(resolves) {
            var resolveObj = {};
            var resolveIter = 0;
            angular.forEach(invocables, function(value, key) {
              resolveObj[key] = resolves[resolveIter++];
            });

            return resolveObj;
          });
        }
      };
    }];
  })

/**
 * A helper directive for the $modal service. It creates a backdrop element.
 */
  .directive('uibModalBackdrop', ['$animate', '$injector', '$uibModalStack',
  function($animate, $injector, $modalStack) {
    return {
      restrict: 'A',
      compile: function(tElement, tAttrs) {
        tElement.addClass(tAttrs.backdropClass);
        return linkFn;
      }
    };

    function linkFn(scope, element, attrs) {
      if (attrs.modalInClass) {
        $animate.addClass(element, attrs.modalInClass);

        scope.$on($modalStack.NOW_CLOSING_EVENT, function(e, setIsAsync) {
          var done = setIsAsync();
          if (scope.modalOptions.animation) {
            $animate.removeClass(element, attrs.modalInClass).then(done);
          } else {
            done();
          }
        });
      }
    }
  }])

  .directive('uibModalWindow', ['$uibModalStack', '$q', '$animateCss', '$document',
  function($modalStack, $q, $animateCss, $document) {
    return {
      scope: {
        index: '@'
      },
      restrict: 'A',
      transclude: true,
      templateUrl: function(tElement, tAttrs) {
        return tAttrs.templateUrl || 'uib/template/modal/window.html';
      },
      link: function(scope, element, attrs) {
        element.addClass(attrs.windowTopClass || '');
        scope.size = attrs.size;

        scope.close = function(evt) {
          var modal = $modalStack.getTop();
          if (modal && modal.value.backdrop &&
            modal.value.backdrop !== 'static' &&
            evt.target === evt.currentTarget) {
            evt.preventDefault();
            evt.stopPropagation();
            $modalStack.dismiss(modal.key, 'backdrop click');
          }
        };

        // moved from template to fix issue #2280
        element.on('click', scope.close);

        // This property is only added to the scope for the purpose of detecting when this directive is rendered.
        // We can detect that by using this property in the template associated with this directive and then use
        // {@link Attribute#$observe} on it. For more details please see {@link TableColumnResize}.
        scope.$isRendered = true;

        // Deferred object that will be resolved when this modal is rendered.
        var modalRenderDeferObj = $q.defer();
        // Resolve render promise post-digest
        scope.$$postDigest(function() {
          modalRenderDeferObj.resolve();
        });

        modalRenderDeferObj.promise.then(function() {
          var animationPromise = null;

          if (attrs.modalInClass) {
            animationPromise = $animateCss(element, {
              addClass: attrs.modalInClass
            }).start();

            scope.$on($modalStack.NOW_CLOSING_EVENT, function(e, setIsAsync) {
              var done = setIsAsync();
              $animateCss(element, {
                removeClass: attrs.modalInClass
              }).start().then(done);
            });
          }


          $q.when(animationPromise).then(function() {
            // Notify {@link $modalStack} that modal is rendered.
            var modal = $modalStack.getTop();
            if (modal) {
              $modalStack.modalRendered(modal.key);
            }

            /**
             * If something within the freshly-opened modal already has focus (perhaps via a
             * directive that causes focus) then there's no need to try to focus anything.
             */
            if (!($document[0].activeElement && element[0].contains($document[0].activeElement))) {
              var inputWithAutofocus = element[0].querySelector('[autofocus]');
              /**
               * Auto-focusing of a freshly-opened modal element causes any child elements
               * with the autofocus attribute to lose focus. This is an issue on touch
               * based devices which will show and then hide the onscreen keyboard.
               * Attempts to refocus the autofocus element via JavaScript will not reopen
               * the onscreen keyboard. Fixed by updated the focusing logic to only autofocus
               * the modal element if the modal does not contain an autofocus element.
               */
              if (inputWithAutofocus) {
                inputWithAutofocus.focus();
              } else {
                element[0].focus();
              }
            }
          });
        });
      }
    };
  }])

  .directive('uibModalAnimationClass', function() {
    return {
      compile: function(tElement, tAttrs) {
        if (tAttrs.modalAnimation) {
          tElement.addClass(tAttrs.uibModalAnimationClass);
        }
      }
    };
  })

  .directive('uibModalTransclude', ['$animate', function($animate) {
    return {
      link: function(scope, element, attrs, controller, transclude) {
        transclude(scope.$parent, function(clone) {
          element.empty();
          $animate.enter(clone, element);
        });
      }
    };
  }])

  .factory('$uibModalStack', ['$animate', '$animateCss', '$document',
    '$compile', '$rootScope', '$q', '$$multiMap', '$$stackedMap', '$uibPosition',
    function($animate, $animateCss, $document, $compile, $rootScope, $q, $$multiMap, $$stackedMap, $uibPosition) {
      var OPENED_MODAL_CLASS = 'modal-open';

      var backdropDomEl, backdropScope;
      var openedWindows = $$stackedMap.createNew();
      var openedClasses = $$multiMap.createNew();
      var $modalStack = {
        NOW_CLOSING_EVENT: 'modal.stack.now-closing'
      };
      var topModalIndex = 0;
      var previousTopOpenedModal = null;
      var ARIA_HIDDEN_ATTRIBUTE_NAME = 'data-bootstrap-modal-aria-hidden-count';

      //Modal focus behavior
      var tabbableSelector = 'a[href], area[href], input:not([disabled]):not([tabindex=\'-1\']), ' +
        'button:not([disabled]):not([tabindex=\'-1\']),select:not([disabled]):not([tabindex=\'-1\']), textarea:not([disabled]):not([tabindex=\'-1\']), ' +
        'iframe, object, embed, *[tabindex]:not([tabindex=\'-1\']), *[contenteditable=true]';
      var scrollbarPadding;
      var SNAKE_CASE_REGEXP = /[A-Z]/g;

      // TODO: extract into common dependency with tooltip
      function snake_case(name) {
        var separator = '-';
        return name.replace(SNAKE_CASE_REGEXP, function(letter, pos) {
          return (pos ? separator : '') + letter.toLowerCase();
        });
      }

      function isVisible(element) {
        return !!(element.offsetWidth ||
          element.offsetHeight ||
          element.getClientRects().length);
      }

      function backdropIndex() {
        var topBackdropIndex = -1;
        var opened = openedWindows.keys();
        for (var i = 0; i < opened.length; i++) {
          if (openedWindows.get(opened[i]).value.backdrop) {
            topBackdropIndex = i;
          }
        }

        // If any backdrop exist, ensure that it's index is always
        // right below the top modal
        if (topBackdropIndex > -1 && topBackdropIndex < topModalIndex) {
          topBackdropIndex = topModalIndex;
        }
        return topBackdropIndex;
      }

      $rootScope.$watch(backdropIndex, function(newBackdropIndex) {
        if (backdropScope) {
          backdropScope.index = newBackdropIndex;
        }
      });

      function removeModalWindow(modalInstance, elementToReceiveFocus) {
        var modalWindow = openedWindows.get(modalInstance).value;
        var appendToElement = modalWindow.appendTo;

        //clean up the stack
        openedWindows.remove(modalInstance);
        previousTopOpenedModal = openedWindows.top();
        if (previousTopOpenedModal) {
          topModalIndex = parseInt(previousTopOpenedModal.value.modalDomEl.attr('index'), 10);
        }

        removeAfterAnimate(modalWindow.modalDomEl, modalWindow.modalScope, function() {
          var modalBodyClass = modalWindow.openedClass || OPENED_MODAL_CLASS;
          openedClasses.remove(modalBodyClass, modalInstance);
          var areAnyOpen = openedClasses.hasKey(modalBodyClass);
          appendToElement.toggleClass(modalBodyClass, areAnyOpen);
          if (!areAnyOpen && scrollbarPadding && scrollbarPadding.heightOverflow && scrollbarPadding.scrollbarWidth) {
            if (scrollbarPadding.originalRight) {
              appendToElement.css({paddingRight: scrollbarPadding.originalRight + 'px'});
            } else {
              appendToElement.css({paddingRight: ''});
            }
            scrollbarPadding = null;
          }
          toggleTopWindowClass(true);
        }, modalWindow.closedDeferred);
        checkRemoveBackdrop();

        //move focus to specified element if available, or else to body
        if (elementToReceiveFocus && elementToReceiveFocus.focus) {
          elementToReceiveFocus.focus();
        } else if (appendToElement.focus) {
          appendToElement.focus();
        }
      }

      // Add or remove "windowTopClass" from the top window in the stack
      function toggleTopWindowClass(toggleSwitch) {
        var modalWindow;

        if (openedWindows.length() > 0) {
          modalWindow = openedWindows.top().value;
          modalWindow.modalDomEl.toggleClass(modalWindow.windowTopClass || '', toggleSwitch);
        }
      }

      function checkRemoveBackdrop() {
        //remove backdrop if no longer needed
        if (backdropDomEl && backdropIndex() === -1) {
          var backdropScopeRef = backdropScope;
          removeAfterAnimate(backdropDomEl, backdropScope, function() {
            backdropScopeRef = null;
          });
          backdropDomEl = undefined;
          backdropScope = undefined;
        }
      }

      function removeAfterAnimate(domEl, scope, done, closedDeferred) {
        var asyncDeferred;
        var asyncPromise = null;
        var setIsAsync = function() {
          if (!asyncDeferred) {
            asyncDeferred = $q.defer();
            asyncPromise = asyncDeferred.promise;
          }

          return function asyncDone() {
            asyncDeferred.resolve();
          };
        };
        scope.$broadcast($modalStack.NOW_CLOSING_EVENT, setIsAsync);

        // Note that it's intentional that asyncPromise might be null.
        // That's when setIsAsync has not been called during the
        // NOW_CLOSING_EVENT broadcast.
        return $q.when(asyncPromise).then(afterAnimating);

        function afterAnimating() {
          if (afterAnimating.done) {
            return;
          }
          afterAnimating.done = true;

          $animate.leave(domEl).then(function() {
            if (done) {
              done();
            }

            domEl.remove();
            if (closedDeferred) {
              closedDeferred.resolve();
            }
          });

          scope.$destroy();
        }
      }

      $document.on('keydown', keydownListener);

      $rootScope.$on('$destroy', function() {
        $document.off('keydown', keydownListener);
      });

      function keydownListener(evt) {
        if (evt.isDefaultPrevented()) {
          return evt;
        }

        var modal = openedWindows.top();
        if (modal) {
          switch (evt.which) {
            case 27: {
              if (modal.value.keyboard) {
                evt.preventDefault();
                $rootScope.$apply(function() {
                  $modalStack.dismiss(modal.key, 'escape key press');
                });
              }
              break;
            }
            case 9: {
              var list = $modalStack.loadFocusElementList(modal);
              var focusChanged = false;
              if (evt.shiftKey) {
                if ($modalStack.isFocusInFirstItem(evt, list) || $modalStack.isModalFocused(evt, modal)) {
                  focusChanged = $modalStack.focusLastFocusableElement(list);
                }
              } else {
                if ($modalStack.isFocusInLastItem(evt, list)) {
                  focusChanged = $modalStack.focusFirstFocusableElement(list);
                }
              }

              if (focusChanged) {
                evt.preventDefault();
                evt.stopPropagation();
              }

              break;
            }
          }
        }
      }

      $modalStack.open = function(modalInstance, modal) {
        var modalOpener = $document[0].activeElement,
          modalBodyClass = modal.openedClass || OPENED_MODAL_CLASS;

        toggleTopWindowClass(false);

        // Store the current top first, to determine what index we ought to use
        // for the current top modal
        previousTopOpenedModal = openedWindows.top();

        openedWindows.add(modalInstance, {
          deferred: modal.deferred,
          renderDeferred: modal.renderDeferred,
          closedDeferred: modal.closedDeferred,
          modalScope: modal.scope,
          backdrop: modal.backdrop,
          keyboard: modal.keyboard,
          openedClass: modal.openedClass,
          windowTopClass: modal.windowTopClass,
          animation: modal.animation,
          appendTo: modal.appendTo
        });

        openedClasses.put(modalBodyClass, modalInstance);

        var appendToElement = modal.appendTo,
            currBackdropIndex = backdropIndex();

        if (!appendToElement.length) {
          throw new Error('appendTo element not found. Make sure that the element passed is in DOM.');
        }

        if (currBackdropIndex >= 0 && !backdropDomEl) {
          backdropScope = $rootScope.$new(true);
          backdropScope.modalOptions = modal;
          backdropScope.index = currBackdropIndex;
          backdropDomEl = angular.element('<div uib-modal-backdrop="modal-backdrop"></div>');
          backdropDomEl.attr({
            'class': 'modal-backdrop',
            'ng-style': '{\'z-index\': 1040 + (index && 1 || 0) + index*10}',
            'uib-modal-animation-class': 'fade',
            'modal-in-class': 'in'
          });
          if (modal.backdropClass) {
            backdropDomEl.addClass(modal.backdropClass);
          }

          if (modal.animation) {
            backdropDomEl.attr('modal-animation', 'true');
          }
          $compile(backdropDomEl)(backdropScope);
          $animate.enter(backdropDomEl, appendToElement);
          if ($uibPosition.isScrollable(appendToElement)) {
            scrollbarPadding = $uibPosition.scrollbarPadding(appendToElement);
            if (scrollbarPadding.heightOverflow && scrollbarPadding.scrollbarWidth) {
              appendToElement.css({paddingRight: scrollbarPadding.right + 'px'});
            }
          }
        }

        var content;
        if (modal.component) {
          content = document.createElement(snake_case(modal.component.name));
          content = angular.element(content);
          content.attr({
            resolve: '$resolve',
            'modal-instance': '$uibModalInstance',
            close: '$close($value)',
            dismiss: '$dismiss($value)'
          });
        } else {
          content = modal.content;
        }

        // Set the top modal index based on the index of the previous top modal
        topModalIndex = previousTopOpenedModal ? parseInt(previousTopOpenedModal.value.modalDomEl.attr('index'), 10) + 1 : 0;
        var angularDomEl = angular.element('<div uib-modal-window="modal-window"></div>');
        angularDomEl.attr({
          'class': 'modal',
          'template-url': modal.windowTemplateUrl,
          'window-top-class': modal.windowTopClass,
          'role': 'dialog',
          'aria-labelledby': modal.ariaLabelledBy,
          'aria-describedby': modal.ariaDescribedBy,
          'size': modal.size,
          'index': topModalIndex,
          'animate': 'animate',
          'ng-style': '{\'z-index\': 1050 + $$topModalIndex*10, display: \'block\'}',
          'tabindex': -1,
          'uib-modal-animation-class': 'fade',
          'modal-in-class': 'in'
        }).append(content);
        if (modal.windowClass) {
          angularDomEl.addClass(modal.windowClass);
        }

        if (modal.animation) {
          angularDomEl.attr('modal-animation', 'true');
        }

        appendToElement.addClass(modalBodyClass);
        if (modal.scope) {
          // we need to explicitly add the modal index to the modal scope
          // because it is needed by ngStyle to compute the zIndex property.
          modal.scope.$$topModalIndex = topModalIndex;
        }
        $animate.enter($compile(angularDomEl)(modal.scope), appendToElement);

        openedWindows.top().value.modalDomEl = angularDomEl;
        openedWindows.top().value.modalOpener = modalOpener;

        applyAriaHidden(angularDomEl);

        function applyAriaHidden(el) {
          if (!el || el[0].tagName === 'BODY') {
            return;
          }

          getSiblings(el).forEach(function(sibling) {
            var elemIsAlreadyHidden = sibling.getAttribute('aria-hidden') === 'true',
              ariaHiddenCount = parseInt(sibling.getAttribute(ARIA_HIDDEN_ATTRIBUTE_NAME), 10);

            if (!ariaHiddenCount) {
              ariaHiddenCount = elemIsAlreadyHidden ? 1 : 0;  
            }

            sibling.setAttribute(ARIA_HIDDEN_ATTRIBUTE_NAME, ariaHiddenCount + 1);
            sibling.setAttribute('aria-hidden', 'true');
          });

          return applyAriaHidden(el.parent());

          function getSiblings(el) {
            var children = el.parent() ? el.parent().children() : [];

            return Array.prototype.filter.call(children, function(child) {
              return child !== el[0];
            });
          }
        }
      };

      function broadcastClosing(modalWindow, resultOrReason, closing) {
        return !modalWindow.value.modalScope.$broadcast('modal.closing', resultOrReason, closing).defaultPrevented;
      }

      function unhideBackgroundElements() {
        Array.prototype.forEach.call(
          document.querySelectorAll('[' + ARIA_HIDDEN_ATTRIBUTE_NAME + ']'),
          function(hiddenEl) {
            var ariaHiddenCount = parseInt(hiddenEl.getAttribute(ARIA_HIDDEN_ATTRIBUTE_NAME), 10),
              newHiddenCount = ariaHiddenCount - 1;
            hiddenEl.setAttribute(ARIA_HIDDEN_ATTRIBUTE_NAME, newHiddenCount);

            if (!newHiddenCount) {
              hiddenEl.removeAttribute(ARIA_HIDDEN_ATTRIBUTE_NAME);
              hiddenEl.removeAttribute('aria-hidden');
            }
          }
        );
      }
      
      $modalStack.close = function(modalInstance, result) {
        var modalWindow = openedWindows.get(modalInstance);
        unhideBackgroundElements();
        if (modalWindow && broadcastClosing(modalWindow, result, true)) {
          modalWindow.value.modalScope.$$uibDestructionScheduled = true;
          modalWindow.value.deferred.resolve(result);
          removeModalWindow(modalInstance, modalWindow.value.modalOpener);
          return true;
        }

        return !modalWindow;
      };

      $modalStack.dismiss = function(modalInstance, reason) {
        var modalWindow = openedWindows.get(modalInstance);
        unhideBackgroundElements();
        if (modalWindow && broadcastClosing(modalWindow, reason, false)) {
          modalWindow.value.modalScope.$$uibDestructionScheduled = true;
          modalWindow.value.deferred.reject(reason);
          removeModalWindow(modalInstance, modalWindow.value.modalOpener);
          return true;
        }
        return !modalWindow;
      };

      $modalStack.dismissAll = function(reason) {
        var topModal = this.getTop();
        while (topModal && this.dismiss(topModal.key, reason)) {
          topModal = this.getTop();
        }
      };

      $modalStack.getTop = function() {
        return openedWindows.top();
      };

      $modalStack.modalRendered = function(modalInstance) {
        var modalWindow = openedWindows.get(modalInstance);
        $modalStack.focusFirstFocusableElement($modalStack.loadFocusElementList(modalWindow));
        if (modalWindow) {
          modalWindow.value.renderDeferred.resolve();
        }
      };

      $modalStack.focusFirstFocusableElement = function(list) {
        if (list.length > 0) {
          list[0].focus();
          return true;
        }
        return false;
      };

      $modalStack.focusLastFocusableElement = function(list) {
        if (list.length > 0) {
          list[list.length - 1].focus();
          return true;
        }
        return false;
      };

      $modalStack.isModalFocused = function(evt, modalWindow) {
        if (evt && modalWindow) {
          var modalDomEl = modalWindow.value.modalDomEl;
          if (modalDomEl && modalDomEl.length) {
            return (evt.target || evt.srcElement) === modalDomEl[0];
          }
        }
        return false;
      };

      $modalStack.isFocusInFirstItem = function(evt, list) {
        if (list.length > 0) {
          return (evt.target || evt.srcElement) === list[0];
        }
        return false;
      };

      $modalStack.isFocusInLastItem = function(evt, list) {
        if (list.length > 0) {
          return (evt.target || evt.srcElement) === list[list.length - 1];
        }
        return false;
      };

      $modalStack.loadFocusElementList = function(modalWindow) {
        if (modalWindow) {
          var modalDomE1 = modalWindow.value.modalDomEl;
          if (modalDomE1 && modalDomE1.length) {
            var elements = modalDomE1[0].querySelectorAll(tabbableSelector);
            return elements ?
              Array.prototype.filter.call(elements, function(element) {
                return isVisible(element);
              }) : elements;
          }
        }
      };

      return $modalStack;
    }])

  .provider('$uibModal', function() {
    var $modalProvider = {
      options: {
        animation: true,
        backdrop: true, //can also be false or 'static'
        keyboard: true
      },
      $get: ['$rootScope', '$q', '$document', '$templateRequest', '$controller', '$uibResolve', '$uibModalStack',
        function ($rootScope, $q, $document, $templateRequest, $controller, $uibResolve, $modalStack) {
          var $modal = {};

          function getTemplatePromise(options) {
            return options.template ? $q.when(options.template) :
              $templateRequest(angular.isFunction(options.templateUrl) ?
                options.templateUrl() : options.templateUrl);
          }

          var promiseChain = null;
          $modal.getPromiseChain = function() {
            return promiseChain;
          };

          $modal.open = function(modalOptions) {
            var modalResultDeferred = $q.defer();
            var modalOpenedDeferred = $q.defer();
            var modalClosedDeferred = $q.defer();
            var modalRenderDeferred = $q.defer();

            //prepare an instance of a modal to be injected into controllers and returned to a caller
            var modalInstance = {
              result: modalResultDeferred.promise,
              opened: modalOpenedDeferred.promise,
              closed: modalClosedDeferred.promise,
              rendered: modalRenderDeferred.promise,
              close: function (result) {
                return $modalStack.close(modalInstance, result);
              },
              dismiss: function (reason) {
                return $modalStack.dismiss(modalInstance, reason);
              }
            };

            //merge and clean up options
            modalOptions = angular.extend({}, $modalProvider.options, modalOptions);
            modalOptions.resolve = modalOptions.resolve || {};
            modalOptions.appendTo = modalOptions.appendTo || $document.find('body').eq(0);

            //verify options
            if (!modalOptions.component && !modalOptions.template && !modalOptions.templateUrl) {
              throw new Error('One of component or template or templateUrl options is required.');
            }

            var templateAndResolvePromise;
            if (modalOptions.component) {
              templateAndResolvePromise = $q.when($uibResolve.resolve(modalOptions.resolve, {}, null, null));
            } else {
              templateAndResolvePromise =
                $q.all([getTemplatePromise(modalOptions), $uibResolve.resolve(modalOptions.resolve, {}, null, null)]);
            }

            function resolveWithTemplate() {
              return templateAndResolvePromise;
            }

            // Wait for the resolution of the existing promise chain.
            // Then switch to our own combined promise dependency (regardless of how the previous modal fared).
            // Then add to $modalStack and resolve opened.
            // Finally clean up the chain variable if no subsequent modal has overwritten it.
            var samePromise;
            samePromise = promiseChain = $q.all([promiseChain])
              .then(resolveWithTemplate, resolveWithTemplate)
              .then(function resolveSuccess(tplAndVars) {
                var providedScope = modalOptions.scope || $rootScope;

                var modalScope = providedScope.$new();
                modalScope.$close = modalInstance.close;
                modalScope.$dismiss = modalInstance.dismiss;

                modalScope.$on('$destroy', function() {
                  if (!modalScope.$$uibDestructionScheduled) {
                    modalScope.$dismiss('$uibUnscheduledDestruction');
                  }
                });

                var modal = {
                  scope: modalScope,
                  deferred: modalResultDeferred,
                  renderDeferred: modalRenderDeferred,
                  closedDeferred: modalClosedDeferred,
                  animation: modalOptions.animation,
                  backdrop: modalOptions.backdrop,
                  keyboard: modalOptions.keyboard,
                  backdropClass: modalOptions.backdropClass,
                  windowTopClass: modalOptions.windowTopClass,
                  windowClass: modalOptions.windowClass,
                  windowTemplateUrl: modalOptions.windowTemplateUrl,
                  ariaLabelledBy: modalOptions.ariaLabelledBy,
                  ariaDescribedBy: modalOptions.ariaDescribedBy,
                  size: modalOptions.size,
                  openedClass: modalOptions.openedClass,
                  appendTo: modalOptions.appendTo
                };

                var component = {};
                var ctrlInstance, ctrlInstantiate, ctrlLocals = {};

                if (modalOptions.component) {
                  constructLocals(component, false, true, false);
                  component.name = modalOptions.component;
                  modal.component = component;
                } else if (modalOptions.controller) {
                  constructLocals(ctrlLocals, true, false, true);

                  // the third param will make the controller instantiate later,private api
                  // @see https://github.com/angular/angular.js/blob/master/src/ng/controller.js#L126
                  ctrlInstantiate = $controller(modalOptions.controller, ctrlLocals, true, modalOptions.controllerAs);
                  if (modalOptions.controllerAs && modalOptions.bindToController) {
                    ctrlInstance = ctrlInstantiate.instance;
                    ctrlInstance.$close = modalScope.$close;
                    ctrlInstance.$dismiss = modalScope.$dismiss;
                    angular.extend(ctrlInstance, {
                      $resolve: ctrlLocals.$scope.$resolve
                    }, providedScope);
                  }

                  ctrlInstance = ctrlInstantiate();

                  if (angular.isFunction(ctrlInstance.$onInit)) {
                    ctrlInstance.$onInit();
                  }
                }

                if (!modalOptions.component) {
                  modal.content = tplAndVars[0];
                }

                $modalStack.open(modalInstance, modal);
                modalOpenedDeferred.resolve(true);

                function constructLocals(obj, template, instanceOnScope, injectable) {
                  obj.$scope = modalScope;
                  obj.$scope.$resolve = {};
                  if (instanceOnScope) {
                    obj.$scope.$uibModalInstance = modalInstance;
                  } else {
                    obj.$uibModalInstance = modalInstance;
                  }

                  var resolves = template ? tplAndVars[1] : tplAndVars;
                  angular.forEach(resolves, function(value, key) {
                    if (injectable) {
                      obj[key] = value;
                    }

                    obj.$scope.$resolve[key] = value;
                  });
                }
            }, function resolveError(reason) {
              modalOpenedDeferred.reject(reason);
              modalResultDeferred.reject(reason);
            })['finally'](function() {
              if (promiseChain === samePromise) {
                promiseChain = null;
              }
            });

            return modalInstance;
          };

          return $modal;
        }
      ]
    };

    return $modalProvider;
  });

angular.module('ui.bootstrap.stackedMap', [])
/**
 * A helper, internal data structure that acts as a map but also allows getting / removing
 * elements in the LIFO order
 */
  .factory('$$stackedMap', function() {
    return {
      createNew: function() {
        var stack = [];

        return {
          add: function(key, value) {
            stack.push({
              key: key,
              value: value
            });
          },
          get: function(key) {
            for (var i = 0; i < stack.length; i++) {
              if (key === stack[i].key) {
                return stack[i];
              }
            }
          },
          keys: function() {
            var keys = [];
            for (var i = 0; i < stack.length; i++) {
              keys.push(stack[i].key);
            }
            return keys;
          },
          top: function() {
            return stack[stack.length - 1];
          },
          remove: function(key) {
            var idx = -1;
            for (var i = 0; i < stack.length; i++) {
              if (key === stack[i].key) {
                idx = i;
                break;
              }
            }
            return stack.splice(idx, 1)[0];
          },
          removeTop: function() {
            return stack.pop();
          },
          length: function() {
            return stack.length;
          }
        };
      }
    };
  });
angular.module('ui.bootstrap.position', [])

/**
 * A set of utility methods for working with the DOM.
 * It is meant to be used where we need to absolute-position elements in
 * relation to another element (this is the case for tooltips, popovers,
 * typeahead suggestions etc.).
 */
  .factory('$uibPosition', ['$document', '$window', function($document, $window) {
    /**
     * Used by scrollbarWidth() function to cache scrollbar's width.
     * Do not access this variable directly, use scrollbarWidth() instead.
     */
    var SCROLLBAR_WIDTH;
    /**
     * scrollbar on body and html element in IE and Edge overlay
     * content and should be considered 0 width.
     */
    var BODY_SCROLLBAR_WIDTH;
    var OVERFLOW_REGEX = {
      normal: /(auto|scroll)/,
      hidden: /(auto|scroll|hidden)/
    };
    var PLACEMENT_REGEX = {
      auto: /\s?auto?\s?/i,
      primary: /^(top|bottom|left|right)$/,
      secondary: /^(top|bottom|left|right|center)$/,
      vertical: /^(top|bottom)$/
    };
    var BODY_REGEX = /(HTML|BODY)/;

    return {

      /**
       * Provides a raw DOM element from a jQuery/jQLite element.
       *
       * @param {element} elem - The element to convert.
       *
       * @returns {element} A HTML element.
       */
      getRawNode: function(elem) {
        return elem.nodeName ? elem : elem[0] || elem;
      },

      /**
       * Provides a parsed number for a style property.  Strips
       * units and casts invalid numbers to 0.
       *
       * @param {string} value - The style value to parse.
       *
       * @returns {number} A valid number.
       */
      parseStyle: function(value) {
        value = parseFloat(value);
        return isFinite(value) ? value : 0;
      },

      /**
       * Provides the closest positioned ancestor.
       *
       * @param {element} element - The element to get the offest parent for.
       *
       * @returns {element} The closest positioned ancestor.
       */
      offsetParent: function(elem) {
        elem = this.getRawNode(elem);

        var offsetParent = elem.offsetParent || $document[0].documentElement;

        function isStaticPositioned(el) {
          return ($window.getComputedStyle(el).position || 'static') === 'static';
        }

        while (offsetParent && offsetParent !== $document[0].documentElement && isStaticPositioned(offsetParent)) {
          offsetParent = offsetParent.offsetParent;
        }

        return offsetParent || $document[0].documentElement;
      },

      /**
       * Provides the scrollbar width, concept from TWBS measureScrollbar()
       * function in https://github.com/twbs/bootstrap/blob/master/js/modal.js
       * In IE and Edge, scollbar on body and html element overlay and should
       * return a width of 0.
       *
       * @returns {number} The width of the browser scollbar.
       */
      scrollbarWidth: function(isBody) {
        if (isBody) {
          if (angular.isUndefined(BODY_SCROLLBAR_WIDTH)) {
            var bodyElem = $document.find('body');
            bodyElem.addClass('uib-position-body-scrollbar-measure');
            BODY_SCROLLBAR_WIDTH = $window.innerWidth - bodyElem[0].clientWidth;
            BODY_SCROLLBAR_WIDTH = isFinite(BODY_SCROLLBAR_WIDTH) ? BODY_SCROLLBAR_WIDTH : 0;
            bodyElem.removeClass('uib-position-body-scrollbar-measure');
          }
          return BODY_SCROLLBAR_WIDTH;
        }

        if (angular.isUndefined(SCROLLBAR_WIDTH)) {
          var scrollElem = angular.element('<div class="uib-position-scrollbar-measure"></div>');
          $document.find('body').append(scrollElem);
          SCROLLBAR_WIDTH = scrollElem[0].offsetWidth - scrollElem[0].clientWidth;
          SCROLLBAR_WIDTH = isFinite(SCROLLBAR_WIDTH) ? SCROLLBAR_WIDTH : 0;
          scrollElem.remove();
        }

        return SCROLLBAR_WIDTH;
      },

      /**
       * Provides the padding required on an element to replace the scrollbar.
       *
       * @returns {object} An object with the following properties:
       *   <ul>
       *     <li>**scrollbarWidth**: the width of the scrollbar</li>
       *     <li>**widthOverflow**: whether the the width is overflowing</li>
       *     <li>**right**: the amount of right padding on the element needed to replace the scrollbar</li>
       *     <li>**rightOriginal**: the amount of right padding currently on the element</li>
       *     <li>**heightOverflow**: whether the the height is overflowing</li>
       *     <li>**bottom**: the amount of bottom padding on the element needed to replace the scrollbar</li>
       *     <li>**bottomOriginal**: the amount of bottom padding currently on the element</li>
       *   </ul>
       */
      scrollbarPadding: function(elem) {
        elem = this.getRawNode(elem);

        var elemStyle = $window.getComputedStyle(elem);
        var paddingRight = this.parseStyle(elemStyle.paddingRight);
        var paddingBottom = this.parseStyle(elemStyle.paddingBottom);
        var scrollParent = this.scrollParent(elem, false, true);
        var scrollbarWidth = this.scrollbarWidth(BODY_REGEX.test(scrollParent.tagName));

        return {
          scrollbarWidth: scrollbarWidth,
          widthOverflow: scrollParent.scrollWidth > scrollParent.clientWidth,
          right: paddingRight + scrollbarWidth,
          originalRight: paddingRight,
          heightOverflow: scrollParent.scrollHeight > scrollParent.clientHeight,
          bottom: paddingBottom + scrollbarWidth,
          originalBottom: paddingBottom
         };
      },

      /**
       * Checks to see if the element is scrollable.
       *
       * @param {element} elem - The element to check.
       * @param {boolean=} [includeHidden=false] - Should scroll style of 'hidden' be considered,
       *   default is false.
       *
       * @returns {boolean} Whether the element is scrollable.
       */
      isScrollable: function(elem, includeHidden) {
        elem = this.getRawNode(elem);

        var overflowRegex = includeHidden ? OVERFLOW_REGEX.hidden : OVERFLOW_REGEX.normal;
        var elemStyle = $window.getComputedStyle(elem);
        return overflowRegex.test(elemStyle.overflow + elemStyle.overflowY + elemStyle.overflowX);
      },

      /**
       * Provides the closest scrollable ancestor.
       * A port of the jQuery UI scrollParent method:
       * https://github.com/jquery/jquery-ui/blob/master/ui/scroll-parent.js
       *
       * @param {element} elem - The element to find the scroll parent of.
       * @param {boolean=} [includeHidden=false] - Should scroll style of 'hidden' be considered,
       *   default is false.
       * @param {boolean=} [includeSelf=false] - Should the element being passed be
       * included in the scrollable llokup.
       *
       * @returns {element} A HTML element.
       */
      scrollParent: function(elem, includeHidden, includeSelf) {
        elem = this.getRawNode(elem);

        var overflowRegex = includeHidden ? OVERFLOW_REGEX.hidden : OVERFLOW_REGEX.normal;
        var documentEl = $document[0].documentElement;
        var elemStyle = $window.getComputedStyle(elem);
        if (includeSelf && overflowRegex.test(elemStyle.overflow + elemStyle.overflowY + elemStyle.overflowX)) {
          return elem;
        }
        var excludeStatic = elemStyle.position === 'absolute';
        var scrollParent = elem.parentElement || documentEl;

        if (scrollParent === documentEl || elemStyle.position === 'fixed') {
          return documentEl;
        }

        while (scrollParent.parentElement && scrollParent !== documentEl) {
          var spStyle = $window.getComputedStyle(scrollParent);
          if (excludeStatic && spStyle.position !== 'static') {
            excludeStatic = false;
          }

          if (!excludeStatic && overflowRegex.test(spStyle.overflow + spStyle.overflowY + spStyle.overflowX)) {
            break;
          }
          scrollParent = scrollParent.parentElement;
        }

        return scrollParent;
      },

      /**
       * Provides read-only equivalent of jQuery's position function:
       * http://api.jquery.com/position/ - distance to closest positioned
       * ancestor.  Does not account for margins by default like jQuery position.
       *
       * @param {element} elem - The element to caclulate the position on.
       * @param {boolean=} [includeMargins=false] - Should margins be accounted
       * for, default is false.
       *
       * @returns {object} An object with the following properties:
       *   <ul>
       *     <li>**width**: the width of the element</li>
       *     <li>**height**: the height of the element</li>
       *     <li>**top**: distance to top edge of offset parent</li>
       *     <li>**left**: distance to left edge of offset parent</li>
       *   </ul>
       */
      position: function(elem, includeMagins) {
        elem = this.getRawNode(elem);

        var elemOffset = this.offset(elem);
        if (includeMagins) {
          var elemStyle = $window.getComputedStyle(elem);
          elemOffset.top -= this.parseStyle(elemStyle.marginTop);
          elemOffset.left -= this.parseStyle(elemStyle.marginLeft);
        }
        var parent = this.offsetParent(elem);
        var parentOffset = {top: 0, left: 0};

        if (parent !== $document[0].documentElement) {
          parentOffset = this.offset(parent);
          parentOffset.top += parent.clientTop - parent.scrollTop;
          parentOffset.left += parent.clientLeft - parent.scrollLeft;
        }

        return {
          width: Math.round(angular.isNumber(elemOffset.width) ? elemOffset.width : elem.offsetWidth),
          height: Math.round(angular.isNumber(elemOffset.height) ? elemOffset.height : elem.offsetHeight),
          top: Math.round(elemOffset.top - parentOffset.top),
          left: Math.round(elemOffset.left - parentOffset.left)
        };
      },

      /**
       * Provides read-only equivalent of jQuery's offset function:
       * http://api.jquery.com/offset/ - distance to viewport.  Does
       * not account for borders, margins, or padding on the body
       * element.
       *
       * @param {element} elem - The element to calculate the offset on.
       *
       * @returns {object} An object with the following properties:
       *   <ul>
       *     <li>**width**: the width of the element</li>
       *     <li>**height**: the height of the element</li>
       *     <li>**top**: distance to top edge of viewport</li>
       *     <li>**right**: distance to bottom edge of viewport</li>
       *   </ul>
       */
      offset: function(elem) {
        elem = this.getRawNode(elem);

        var elemBCR = elem.getBoundingClientRect();
        return {
          width: Math.round(angular.isNumber(elemBCR.width) ? elemBCR.width : elem.offsetWidth),
          height: Math.round(angular.isNumber(elemBCR.height) ? elemBCR.height : elem.offsetHeight),
          top: Math.round(elemBCR.top + ($window.pageYOffset || $document[0].documentElement.scrollTop)),
          left: Math.round(elemBCR.left + ($window.pageXOffset || $document[0].documentElement.scrollLeft))
        };
      },

      /**
       * Provides offset distance to the closest scrollable ancestor
       * or viewport.  Accounts for border and scrollbar width.
       *
       * Right and bottom dimensions represent the distance to the
       * respective edge of the viewport element.  If the element
       * edge extends beyond the viewport, a negative value will be
       * reported.
       *
       * @param {element} elem - The element to get the viewport offset for.
       * @param {boolean=} [useDocument=false] - Should the viewport be the document element instead
       * of the first scrollable element, default is false.
       * @param {boolean=} [includePadding=true] - Should the padding on the offset parent element
       * be accounted for, default is true.
       *
       * @returns {object} An object with the following properties:
       *   <ul>
       *     <li>**top**: distance to the top content edge of viewport element</li>
       *     <li>**bottom**: distance to the bottom content edge of viewport element</li>
       *     <li>**left**: distance to the left content edge of viewport element</li>
       *     <li>**right**: distance to the right content edge of viewport element</li>
       *   </ul>
       */
      viewportOffset: function(elem, useDocument, includePadding) {
        elem = this.getRawNode(elem);
        includePadding = includePadding !== false ? true : false;

        var elemBCR = elem.getBoundingClientRect();
        var offsetBCR = {top: 0, left: 0, bottom: 0, right: 0};

        var offsetParent = useDocument ? $document[0].documentElement : this.scrollParent(elem);
        var offsetParentBCR = offsetParent.getBoundingClientRect();

        offsetBCR.top = offsetParentBCR.top + offsetParent.clientTop;
        offsetBCR.left = offsetParentBCR.left + offsetParent.clientLeft;
        if (offsetParent === $document[0].documentElement) {
          offsetBCR.top += $window.pageYOffset;
          offsetBCR.left += $window.pageXOffset;
        }
        offsetBCR.bottom = offsetBCR.top + offsetParent.clientHeight;
        offsetBCR.right = offsetBCR.left + offsetParent.clientWidth;

        if (includePadding) {
          var offsetParentStyle = $window.getComputedStyle(offsetParent);
          offsetBCR.top += this.parseStyle(offsetParentStyle.paddingTop);
          offsetBCR.bottom -= this.parseStyle(offsetParentStyle.paddingBottom);
          offsetBCR.left += this.parseStyle(offsetParentStyle.paddingLeft);
          offsetBCR.right -= this.parseStyle(offsetParentStyle.paddingRight);
        }

        return {
          top: Math.round(elemBCR.top - offsetBCR.top),
          bottom: Math.round(offsetBCR.bottom - elemBCR.bottom),
          left: Math.round(elemBCR.left - offsetBCR.left),
          right: Math.round(offsetBCR.right - elemBCR.right)
        };
      },

      /**
       * Provides an array of placement values parsed from a placement string.
       * Along with the 'auto' indicator, supported placement strings are:
       *   <ul>
       *     <li>top: element on top, horizontally centered on host element.</li>
       *     <li>top-left: element on top, left edge aligned with host element left edge.</li>
       *     <li>top-right: element on top, lerightft edge aligned with host element right edge.</li>
       *     <li>bottom: element on bottom, horizontally centered on host element.</li>
       *     <li>bottom-left: element on bottom, left edge aligned with host element left edge.</li>
       *     <li>bottom-right: element on bottom, right edge aligned with host element right edge.</li>
       *     <li>left: element on left, vertically centered on host element.</li>
       *     <li>left-top: element on left, top edge aligned with host element top edge.</li>
       *     <li>left-bottom: element on left, bottom edge aligned with host element bottom edge.</li>
       *     <li>right: element on right, vertically centered on host element.</li>
       *     <li>right-top: element on right, top edge aligned with host element top edge.</li>
       *     <li>right-bottom: element on right, bottom edge aligned with host element bottom edge.</li>
       *   </ul>
       * A placement string with an 'auto' indicator is expected to be
       * space separated from the placement, i.e: 'auto bottom-left'  If
       * the primary and secondary placement values do not match 'top,
       * bottom, left, right' then 'top' will be the primary placement and
       * 'center' will be the secondary placement.  If 'auto' is passed, true
       * will be returned as the 3rd value of the array.
       *
       * @param {string} placement - The placement string to parse.
       *
       * @returns {array} An array with the following values
       * <ul>
       *   <li>**[0]**: The primary placement.</li>
       *   <li>**[1]**: The secondary placement.</li>
       *   <li>**[2]**: If auto is passed: true, else undefined.</li>
       * </ul>
       */
      parsePlacement: function(placement) {
        var autoPlace = PLACEMENT_REGEX.auto.test(placement);
        if (autoPlace) {
          placement = placement.replace(PLACEMENT_REGEX.auto, '');
        }

        placement = placement.split('-');

        placement[0] = placement[0] || 'top';
        if (!PLACEMENT_REGEX.primary.test(placement[0])) {
          placement[0] = 'top';
        }

        placement[1] = placement[1] || 'center';
        if (!PLACEMENT_REGEX.secondary.test(placement[1])) {
          placement[1] = 'center';
        }

        if (autoPlace) {
          placement[2] = true;
        } else {
          placement[2] = false;
        }

        return placement;
      },

      /**
       * Provides coordinates for an element to be positioned relative to
       * another element.  Passing 'auto' as part of the placement parameter
       * will enable smart placement - where the element fits. i.e:
       * 'auto left-top' will check to see if there is enough space to the left
       * of the hostElem to fit the targetElem, if not place right (same for secondary
       * top placement).  Available space is calculated using the viewportOffset
       * function.
       *
       * @param {element} hostElem - The element to position against.
       * @param {element} targetElem - The element to position.
       * @param {string=} [placement=top] - The placement for the targetElem,
       *   default is 'top'. 'center' is assumed as secondary placement for
       *   'top', 'left', 'right', and 'bottom' placements.  Available placements are:
       *   <ul>
       *     <li>top</li>
       *     <li>top-right</li>
       *     <li>top-left</li>
       *     <li>bottom</li>
       *     <li>bottom-left</li>
       *     <li>bottom-right</li>
       *     <li>left</li>
       *     <li>left-top</li>
       *     <li>left-bottom</li>
       *     <li>right</li>
       *     <li>right-top</li>
       *     <li>right-bottom</li>
       *   </ul>
       * @param {boolean=} [appendToBody=false] - Should the top and left values returned
       *   be calculated from the body element, default is false.
       *
       * @returns {object} An object with the following properties:
       *   <ul>
       *     <li>**top**: Value for targetElem top.</li>
       *     <li>**left**: Value for targetElem left.</li>
       *     <li>**placement**: The resolved placement.</li>
       *   </ul>
       */
      positionElements: function(hostElem, targetElem, placement, appendToBody) {
        hostElem = this.getRawNode(hostElem);
        targetElem = this.getRawNode(targetElem);

        // need to read from prop to support tests.
        var targetWidth = angular.isDefined(targetElem.offsetWidth) ? targetElem.offsetWidth : targetElem.prop('offsetWidth');
        var targetHeight = angular.isDefined(targetElem.offsetHeight) ? targetElem.offsetHeight : targetElem.prop('offsetHeight');

        placement = this.parsePlacement(placement);

        var hostElemPos = appendToBody ? this.offset(hostElem) : this.position(hostElem);
        var targetElemPos = {top: 0, left: 0, placement: ''};

        if (placement[2]) {
          var viewportOffset = this.viewportOffset(hostElem, appendToBody);

          var targetElemStyle = $window.getComputedStyle(targetElem);
          var adjustedSize = {
            width: targetWidth + Math.round(Math.abs(this.parseStyle(targetElemStyle.marginLeft) + this.parseStyle(targetElemStyle.marginRight))),
            height: targetHeight + Math.round(Math.abs(this.parseStyle(targetElemStyle.marginTop) + this.parseStyle(targetElemStyle.marginBottom)))
          };

          placement[0] = placement[0] === 'top' && adjustedSize.height > viewportOffset.top && adjustedSize.height <= viewportOffset.bottom ? 'bottom' :
                         placement[0] === 'bottom' && adjustedSize.height > viewportOffset.bottom && adjustedSize.height <= viewportOffset.top ? 'top' :
                         placement[0] === 'left' && adjustedSize.width > viewportOffset.left && adjustedSize.width <= viewportOffset.right ? 'right' :
                         placement[0] === 'right' && adjustedSize.width > viewportOffset.right && adjustedSize.width <= viewportOffset.left ? 'left' :
                         placement[0];

          placement[1] = placement[1] === 'top' && adjustedSize.height - hostElemPos.height > viewportOffset.bottom && adjustedSize.height - hostElemPos.height <= viewportOffset.top ? 'bottom' :
                         placement[1] === 'bottom' && adjustedSize.height - hostElemPos.height > viewportOffset.top && adjustedSize.height - hostElemPos.height <= viewportOffset.bottom ? 'top' :
                         placement[1] === 'left' && adjustedSize.width - hostElemPos.width > viewportOffset.right && adjustedSize.width - hostElemPos.width <= viewportOffset.left ? 'right' :
                         placement[1] === 'right' && adjustedSize.width - hostElemPos.width > viewportOffset.left && adjustedSize.width - hostElemPos.width <= viewportOffset.right ? 'left' :
                         placement[1];

          if (placement[1] === 'center') {
            if (PLACEMENT_REGEX.vertical.test(placement[0])) {
              var xOverflow = hostElemPos.width / 2 - targetWidth / 2;
              if (viewportOffset.left + xOverflow < 0 && adjustedSize.width - hostElemPos.width <= viewportOffset.right) {
                placement[1] = 'left';
              } else if (viewportOffset.right + xOverflow < 0 && adjustedSize.width - hostElemPos.width <= viewportOffset.left) {
                placement[1] = 'right';
              }
            } else {
              var yOverflow = hostElemPos.height / 2 - adjustedSize.height / 2;
              if (viewportOffset.top + yOverflow < 0 && adjustedSize.height - hostElemPos.height <= viewportOffset.bottom) {
                placement[1] = 'top';
              } else if (viewportOffset.bottom + yOverflow < 0 && adjustedSize.height - hostElemPos.height <= viewportOffset.top) {
                placement[1] = 'bottom';
              }
            }
          }
        }

        switch (placement[0]) {
          case 'top':
            targetElemPos.top = hostElemPos.top - targetHeight;
            break;
          case 'bottom':
            targetElemPos.top = hostElemPos.top + hostElemPos.height;
            break;
          case 'left':
            targetElemPos.left = hostElemPos.left - targetWidth;
            break;
          case 'right':
            targetElemPos.left = hostElemPos.left + hostElemPos.width;
            break;
        }

        switch (placement[1]) {
          case 'top':
            targetElemPos.top = hostElemPos.top;
            break;
          case 'bottom':
            targetElemPos.top = hostElemPos.top + hostElemPos.height - targetHeight;
            break;
          case 'left':
            targetElemPos.left = hostElemPos.left;
            break;
          case 'right':
            targetElemPos.left = hostElemPos.left + hostElemPos.width - targetWidth;
            break;
          case 'center':
            if (PLACEMENT_REGEX.vertical.test(placement[0])) {
              targetElemPos.left = hostElemPos.left + hostElemPos.width / 2 - targetWidth / 2;
            } else {
              targetElemPos.top = hostElemPos.top + hostElemPos.height / 2 - targetHeight / 2;
            }
            break;
        }

        targetElemPos.top = Math.round(targetElemPos.top);
        targetElemPos.left = Math.round(targetElemPos.left);
        targetElemPos.placement = placement[1] === 'center' ? placement[0] : placement[0] + '-' + placement[1];

        return targetElemPos;
      },

      /**
       * Provides a way to adjust the top positioning after first
       * render to correctly align element to top after content
       * rendering causes resized element height
       *
       * @param {array} placementClasses - The array of strings of classes
       * element should have.
       * @param {object} containerPosition - The object with container
       * position information
       * @param {number} initialHeight - The initial height for the elem.
       * @param {number} currentHeight - The current height for the elem.
       */
      adjustTop: function(placementClasses, containerPosition, initialHeight, currentHeight) {
        if (placementClasses.indexOf('top') !== -1 && initialHeight !== currentHeight) {
          return {
            top: containerPosition.top - currentHeight + 'px'
          };
        }
      },

      /**
       * Provides a way for positioning tooltip & dropdown
       * arrows when using placement options beyond the standard
       * left, right, top, or bottom.
       *
       * @param {element} elem - The tooltip/dropdown element.
       * @param {string} placement - The placement for the elem.
       */
      positionArrow: function(elem, placement) {
        elem = this.getRawNode(elem);

        var innerElem = elem.querySelector('.tooltip-inner, .popover-inner');
        if (!innerElem) {
          return;
        }

        var isTooltip = angular.element(innerElem).hasClass('tooltip-inner');

        var arrowElem = isTooltip ? elem.querySelector('.tooltip-arrow') : elem.querySelector('.arrow');
        if (!arrowElem) {
          return;
        }

        var arrowCss = {
          top: '',
          bottom: '',
          left: '',
          right: ''
        };

        placement = this.parsePlacement(placement);
        if (placement[1] === 'center') {
          // no adjustment necessary - just reset styles
          angular.element(arrowElem).css(arrowCss);
          return;
        }

        var borderProp = 'border-' + placement[0] + '-width';
        var borderWidth = $window.getComputedStyle(arrowElem)[borderProp];

        var borderRadiusProp = 'border-';
        if (PLACEMENT_REGEX.vertical.test(placement[0])) {
          borderRadiusProp += placement[0] + '-' + placement[1];
        } else {
          borderRadiusProp += placement[1] + '-' + placement[0];
        }
        borderRadiusProp += '-radius';
        var borderRadius = $window.getComputedStyle(isTooltip ? innerElem : elem)[borderRadiusProp];

        switch (placement[0]) {
          case 'top':
            arrowCss.bottom = isTooltip ? '0' : '-' + borderWidth;
            break;
          case 'bottom':
            arrowCss.top = isTooltip ? '0' : '-' + borderWidth;
            break;
          case 'left':
            arrowCss.right = isTooltip ? '0' : '-' + borderWidth;
            break;
          case 'right':
            arrowCss.left = isTooltip ? '0' : '-' + borderWidth;
            break;
        }

        arrowCss[placement[1]] = borderRadius;

        angular.element(arrowElem).css(arrowCss);
      }
    };
  }]);
angular.module('ui.bootstrap.position').run(function() {!angular.$$csp().noInlineStyle && !angular.$$uibPositionCss && angular.element(document).find('head').prepend('<style type="text/css">.uib-position-measure{display:block !important;visibility:hidden !important;position:absolute !important;top:-9999px !important;left:-9999px !important;}.uib-position-scrollbar-measure{position:absolute !important;top:-9999px !important;width:50px !important;height:50px !important;overflow:scroll !important;}.uib-position-body-scrollbar-measure{overflow:scroll !important;}</style>'); angular.$$uibPositionCss = true; });;
angular.module('barfootWeb')
    .service('autocompleteService', ['$http', function ($http) {

        var getSearchMode = function (query) {
            var searchMode;
            var mode = query.mode.toLowerCase();
            switch (mode) {
                case "rural":
                    searchMode = 'U';
                    break;
                case "rental":
                    searchMode = "P";
                    break;
                case "commercial":
                    searchMode = "C";
                    break;
                case "residential":
                    searchMode = "R";
                    break;
                case "sold":
                    searchMode = "R,U";
                    break;
                default:
                    searchMode = "R";
            }

            return searchMode;
        };

        var search = function(query) {

            var searchMode = getSearchMode(query);

            var req = {
                method: 'GET',
                cache: true,
                url: '/api/autocomplete/search?searchText=' + query.query + '&lob=' + searchMode + '&objectTypes=' + query.objectTypes,
                responseType: 'json'
            }

            return $http(req);
        };

        return {
            search: search
        };

    }]);
;
angular.module('barfootWeb')
    .service('autocompleteTagService', [function () {

        var tags = [];
        var isRange = false;

        var existsTag = function (tag) {
            for (var j = 0; j < tags.length; j++) {
                if ((tag.Value === tags[j].Value) && (tag.Type === tags[j].Type)) {
                    return true;
                }
            }
            return false;
        }

        var tagIndexOf = function (tag) {
            for (var j = 0; j < tags.length; j++) {
                if ((tag.Value === tags[j].Value) && (tag.Type === tags[j].Type)) {
                    return j;
                }
            }
            return -1;
        }

        var sync = function () {
            btEvents.trigger(btEventType.AutoCompleteTagsChanged, { tags: tags });
        }

        var get = function () {
            return tags;
        };

        var add = function (tag) {
            if (!existsTag(tag)) {
                tags.push(tag);
                if (!isRange) {
                    sync();
                }
            }
        };

        var addRange = function (tagRange) {
            isRange = true;
            for (var i = 0; i < tagRange.length; i++) {
                add(tagRange[i]);
            }
            sync();
            isRange = false;
        };

        var remove = function (tag) {
            var index = tagIndexOf(tag);
            if (index >= 0) {
                tags.splice(index, 1);
                sync();
            }
        };

        var removeRange = function (tagRange) {
            isRange = true;
            for (var i = 0; i < tagRange.length; i++) {
                remove(tagRange[i]);
            }
            sync();
            isRange = false;
        };

        var clear = function () {
            tags = [];
        };

        return {
            get: get,
            add: add,
            addRange: addRange,
            remove: remove,
            removeRange: removeRange,
            clear: clear
        };

    }]);;
angular.module('barfootWeb').service('baseSearchFilter', [function () {

    var getQueryStringValue = function(key) {

        key = key.toLowerCase();
        var queryParams = window.location.pathname.toLowerCase();

        var lookupKey = key + '=';
        if (queryParams.indexOf(lookupKey) === -1) return null;
        
        var start = queryParams.indexOf(lookupKey) + lookupKey.length;
        var end = queryParams.indexOf('/', start);
        if (end === -1) {
            return decodeURIComponent(queryParams.substring(start));
        } else {
            return decodeURIComponent(queryParams.substring(start, end));
        }
    };

    var getSelectedRangeValue = function(key) {
        var value = getQueryStringValue(key);
        if(value) return value.split('-');
        return null;
    };

    var isVisible = function(lob, activeLob) {
        if (Array.isArray(lob)) {
            for (var i = 0; i < lob.length; i++) {
                if (lob[i].toLowerCase().indexOf(activeLob.toLowerCase()) >= 0) {
                    return true;
                }
            }
        } else {
            if (lob && lob.toLowerCase().indexOf(activeLob.toLowerCase()) >= 0) {
                return true;
            }
        }

        return false;
    };
  
    var getSelectedValue = function(queryStringKey){
        return getQueryStringValue(queryStringKey);
    };

    return {
        isVisible: isVisible,
        getSelectedValue: getSelectedValue,
        getSelectedRangeValue: getSelectedRangeValue
    }
}]);;
angular.module("barfootWeb")
    .service('btAccounts', ["webProxy", function (webProxy) {
        return function () {
            return {
                showLogin: function () {
                    webProxy('add-pending-task', {
                        Url: window.location.href,
                        Task: "RedirectToUrl"
                    });
                    window.location.href = '/oauthauthentication.aspx';
                },
                showLoginWithUrl: function (url) {
                    webProxy('add-pending-task', {
                        Url: url,
                        Task: "RedirectToUrl"
                    });
                    window.location.href = '/oauthauthentication.aspx';
                },
                showLoginWithParameter: function (parameter) {
                    webProxy('add-pending-task', {
                        Url: window.location.href+parameter,
                        Task: "RedirectToUrl"
                    });
                    window.location.href = '/oauthauthentication.aspx';
                },
                // Obsolete. Use btManageAccountsService.isUserAuthenticated.
                userIsAuthenticated: function () {
                    return webProxy('user-isauthenicated-mobile');
                },

                addRedirectToUrl: function () {
                    return webProxy('add-pending-task', {
                        Url: window.location.href,
                        Task: "RedirectToUrl"
                    });
                },
                addSaveSearchPendingTask: function () {
                    return webProxy('add-pending-task', {
                        Url: window.location.href + "#savesearch",
                        Task: "RedirectToUrl"
                    });
                },
                addFavouritesPendingTask: function (listingSourceId) {
                    webProxy('add-pending-task', {
                        ListingSourceID: listingSourceId,
                        Task: "AddFavourite"
                    });
                },
                processPendingTask: function () {
                    return webProxy('process-pending-task');
                }
            };
        };
    }]);
;
angular.module('barfootWeb')
    .service('btCarouselService', ['cssHelperService', function (cssHelperService) {

        var carouselArray = [];

        var setActiveDot = function (carouselItem) {
            for (var i = 0; i < carouselItem.dots.length; i++) {
                if (i === carouselItem.currentImage) {
                    cssHelperService.addClass(carouselItem.dots[i], 'active');
                } else {
                    cssHelperService.removeClass(carouselItem.dots[i], 'active');
                }
            }
        }

        var carouselInit = function (id) {
            // find existing record of this carousel
            var record;
            for (var i = 0; i < carouselArray.length; i++) {
                if (carouselArray[i].id === id) {
                    record = carouselArray[i];
                    break;
                }
            }

            if (record) {
                return record.index;
            }

            // there is no existing record, add one to track this carousel
            var element = document.getElementById(id);
            var index = carouselArray.length;

            var carouselItem = {
                id: id,
                imageCount: element.children.length,
                slides: element.children,
                index: index,
                currentImage: 0,
                dots: document.getElementById('dots-' + id).children
            };

            carouselArray.push(carouselItem);

            return index;
        }

        var getPreviousIndex = function (carouselItem) {
            return carouselItem.currentImage === 0
                ? (carouselItem.imageCount - 1) // go to last image
                : carouselItem.currentImage - 1; // go to previous image
        };

        var getNextIndex = function (carouselItem) {
            return carouselItem.currentImage === (carouselItem.imageCount - 1)
                ? 0 // go back to first image
                : carouselItem.currentImage + 1; // go to next image
        };

        var moveSlider = function (carouselItem, nextIndex) {
            var slide = carouselItem.slides[nextIndex];
            var nextSlideImage = slide.children[0];
            if (!nextSlideImage.hasAttribute('src')) {
                nextSlideImage.src = nextSlideImage.getAttribute('data-src');
            }

            // calculate translate property
            var percentTranslate = nextIndex * 100;

            // slide images
            for (var i = 0; i < carouselItem.slides.length; i++) {
                carouselItem.slides[i].style.transform = 'translateX(-' + percentTranslate + '%)';
            }

            carouselItem.currentImage = nextIndex;
            setActiveDot(carouselItem);
        };

        var carouselPrevious = function(id) {
            var index = carouselInit(id);
            var carouselItem = carouselArray[index];

            moveSlider(carouselItem, getPreviousIndex(carouselItem));
        };

        var carouselNext = function(id) {
            var index = carouselInit(id);
            var carouselItem = carouselArray[index];

            moveSlider(carouselItem,  getNextIndex(carouselItem));
        };

        return {
            moveNext: carouselNext,
            movePrevious: carouselPrevious
        }
    }]);
;
angular.module("barfootWeb")
    .service("btCookieService", [function () {

        var getCookieValue = function (cname) {
            var name = cname + "=";
            var decodedCookie = decodeURIComponent(document.cookie);
            var ca = decodedCookie.split(';');
            for(var i = 0; i <ca.length; i++) {
                var c = ca[i];
                while (c.charAt(0) === ' ') {
                    c = c.substring(1);
                }
                if (c.indexOf(name) === 0) {
                    return c.substring(name.length, c.length);
                }
            }
            return '';
        };

        var setCookie = function (cname, cvalue, exdays) {
            var d = new Date();
            d.setTime(d.getTime() + (exdays*24*60*60*1000));
            var expires = "expires="+ d.toUTCString();
            document.cookie = cname + "=" + cvalue + ";" + expires + ";path=/";
        };

        return {
            getValue: getCookieValue,
            set: setCookie
        }
    }
    ]);;
angular.module('barfootWeb')
    .service('btFavouritesService', [
        '$location', 'webProxy', 'btAccounts', '$log',
        function($location, webProxy, btAccounts, $log) {
            var addToFavourites = function(listingNo) {
                webProxy("favorites-add", {
                    ListingNo: listingNo,
                    State: 'Requesting'
                }).then(function(result) {
                    var parameters = JSON.parse(result.Parameters);

                    if (parameters.State === 'Saved') {
                        btEvents.trigger(btEventType.onPropertySaveOrUnsave,
                            {
                                Operation: 'save',
                                SavedProperty: parameters.UserSavedProperty
                            });
                    } else if (parameters.State === 'Not signed in.') {
                        btAccounts().addFavouritesPendingTask(listingNo);
                        btAccounts().showLogin();
                    } else {
                        $log.warn('btFavouritesService.addToFavourites. Error adding favourite via favourites-add endpoint.');
                    }
                });
            };

            var deleteFavourite = function(listingNo) {
                webProxy("favorites-delete",
                    {
                        ListingNo: listingNo,
                        State: 'Requesting'
                    }).then(function(result) {
                        var parameters = JSON.parse(result.Parameters);
                        if (parameters.State === 'Deleted') {
                            btEvents.trigger(btEventType.onPropertySaveOrUnsave, {
                                Operation: "unsave",
                                SourceRefNo: parameters.ListingNo });
                        } else {
                            $log.warn('btFavouritesService.deleteFavourite. Error removing favourite via favourites-delete.');
                        }
                });
            };

            var getFavouritesCount = function() {
                return webProxy('get-favourites-count');
            };

            var isPropertyFavourite = function(listingId) {
                return webProxy('is-property-favorite', {
                    ListingID: listingId
                });
            };

            return {
                addToFavourites: addToFavourites,
                deleteFavourite: deleteFavourite,
                getFavouritesCount: getFavouritesCount,
                isPropertyFavourite: isPropertyFavourite
            }

        }]);
;
angular.module('barfootWeb')
    .service('btManageAccountsService', ['$http', function ($http) {

        var isUserAuthenticated = function () {

            var req = {
                method: 'GET',
                url: '/api/account/isuserauthenticated',
                responseType: 'json'
            }

            return $http(req);
        };

        return {
            isUserAuthenticated: isUserAuthenticated
        }
    }]);;
angular.module('barfootWeb').service('btSearchConstants', [function() {

    return {
        staffUrl: "our-people"
    }
}]);
;
angular.module('barfootWeb').service('btSearchFilterConstants', [function() {

    return {
        minRangeValue: -1,
        maxRangeValue: 9007199254740991,
        searchBaseUrl: '/properties/'
    }
}]);;
angular.module("barfootWeb")
    .service('btTextService', [function () {

        var restrictText = function(value, limit) {
            if (value && (value.Length > limit))
            {
                return value.Substring(0, limit - 3) + '...';
            }

            return value;
        };

        var capitaliseFirstLetter = function (string) {
            return string.charAt(0).toUpperCase() + string.slice(1);
        };

        var capitaliseAllWords = function(phrase) {
            var values = phrase.split(' ');
            for (var i = 0; i < values.length; i++) {
                values[i] = capitaliseFirstLetter(values[i]);
            }

            return values.join(' ');
        };

        return {
            restrictText: restrictText,
            capitaliseFirstLetter: capitaliseFirstLetter,
            capitaliseAllWords: capitaliseAllWords
    }

    }]);
;
angular.module('barfootWeb')
    .service('btUrlQueryService', [function () {

        var queryParts = [];

        var getUrlParam = function (name) {
            name = name.replace(/[\[]/, '\\[').replace(/[\]]/, '\\]');
            var regex = new RegExp('[\\?&]' + name + '=([^&#]*)');
            var results = regex.exec(location.search);
            return results === null ? '' : decodeURIComponent(results[1].replace(/\+/g, ' '));
        };

        var getAll = function () {
            if(queryParts.length > 0) return queryParts;
            
            var query = window.location.search.substring(1);
            var vars = query.split("&");

            for (var i = 0; i < vars.length; i++) {
                var pair = vars[i].split("=");
                if (!pair[0] && pair[0] !== '' & pair[0] !== 'undefined') {
                    queryParts.push([pair[0], decodeURIComponent(pair[1])]);
                }
            }

            return queryParts;
        };

        var append = function (key, value) {

            getAll();
            
            for (var i = 0; i < queryParts.length; i++) {
                if(queryParts[i][0] === key) {
                    queryParts.splice(i, 1);
                }
            }

            queryParts.push([key, encodeURIComponent(value)]);
        };

        var getAllString = function () {
            var queryString = '';
            var first = true;
            for (var i = 0; i < queryParts.length; i++) {
                if (first) {
                    queryString += '?' + queryParts[i][0] + '=' + queryParts[i][1];
                    first = false;
                    continue;
                }

                queryString += '&' + queryParts[i][0] + '=' + queryParts[i][1];
            }

            return queryString;
        };

        var remove = function (key) {
            getAll();
            
            for (var i = 0; i < queryParts.length; i++) {
                if(queryParts[i][0] === key) {
                    queryParts.splice(i, 1);
                }
            }
        };

        return {
            getUrlParam: getUrlParam,
            getAll: getAll,
            getAllString: getAllString,
            append: append,
            remove: remove
        }
    }]);
;
angular.module("barfootWeb")
    .service('btValidateCaptchaService', [
        '$http', '$log', 'webProxy', function ($http, $log, webProxy) {
            
            return function (captchaFieldResponse) {
                var param = {
                    captchaFieldResponse: captchaFieldResponse
                }

                return webProxy('validate-captcha', param).then(function(data) {
                    return data;
                });
            };
        }
    ]);

;
angular.module("barfootWeb")
    .service('btViewportService', [function () {

        var visibleInViewport = function (element, buffer) {
            var rect = element.getBoundingClientRect();
            return (rect.top - buffer) <= window.innerHeight;
        };
        
        return {
            visibleInViewport: visibleInViewport
        };
    }]);
;
angular.module("barfootWeb")
    .service('btWindowService', [function () {

        var openWindow = function(url, name, height, width) {
            //To fix an issue with dual-screen position
            var dualScreenLeft = window.screenLeft != undefined ? window.screenLeft : screen.left;
            var dualScreenTop = window.screenTop != undefined ? window.screenTop : screen.top;
            var screenWidth = window.innerWidth ? window.innerWidth : document.documentElement.clientWidth ? document.documentElement.clientWidth : screen.width;
            var screenHeight = window.innerHeight ? window.innerHeight : document.documentElement.clientHeight ? document.documentElement.clientHeight : screen.height;
            var top = (screenHeight - height) / 2 + dualScreenTop;
            var left = (screenWidth - width) / 2 + dualScreenLeft;

            var windowOptions = 'menubar = no, toolbar = no, resizable = no, scrollbars = no,';
            windowOptions +=
                'height=' + height + ',' +
                'width=' + width + ',' +
                'top=' + top + ',' +
                'left=' + left;

            window.open(url, name, windowOptions);
        };
        
        return {
            openWindow: openWindow
        };
    }]);;
angular.module("barfootWeb")
    .service('cssHelperService', [function () {

        var addClass = function(el, className) {
            if (el.classList) el.classList.add(className);
            else if (!hasClass(el, className)) el.className += ' ' + className;
        };

        var removeClass = function(el, className) {
            if (el.classList) el.classList.remove(className);
            else el.className = el.className.replace(new RegExp('\\b'+ className+'\\b', 'g'), '');
        }

        function hasClass(el, className ) {
            return (" " + el.className + " " ).indexOf( " "+ className + " " ) > -1;
        }

        function setClass(el, className) {
            el.className = className;
        }

        return {
            addClass: addClass,
            removeClass: removeClass,
            hasClass: hasClass,
            setClass: setClass
        };
    }]);
;
angular.module('barfootWeb')
    .service('dataLayerService', [function () {

        window.dataLayer = window.dataLayer || [];

        var formSubmit = function (action, label) {
            dataLayer.push({
                'event': 'Form Submission',
                'event_info': {
                    'category': 'Forms',
                    'action': action,
                    'label': label
                }
            });
        };

        var telLink = function (pageType, label) {
            dataLayer.push({
                'event': 'clickToCall',
                'event_info': {
                    'category': 'Phone',
                    'action': 'Call',
                    'label': label
                },
                'pageType': pageType
            });
        };

        var appraisalFormStep = function (stepLabel) {
            dataLayer.push({
                'event': 'appraisalFormStep',
                'event_info': {
                    'category': 'Forms',
                    'action': 'Appraisal Form',
                    'label': stepLabel
                }
            });
        };

        var newsletterSubmit = function (newsletterId) {
            dataLayer.push({
                'event': 'newsletterFormSubmit',
                'event_info': {
                    'category': 'Forms',
                    'action': 'newsletter sign-up',
                    'label': newsletterId
                }
            });
        };

        return {
            formSubmit: formSubmit,
            telLink: telLink,
            appraisalFormStep: appraisalFormStep,
            newsletterSubmit: newsletterSubmit
        };
    }]);
;
angular.module("barfootWeb")
    .service('deviceHelperService', [function () {

        var isMobileDevice = function() {
            var mobileExp = new RegExp('Android|webOS|iPhone|iPad|' +
                'BlackBerry|Windows Phone|' +
                'Opera Mini|IEMobile|Mobile',
                'i');
            return mobileExp.test(navigator.userAgent);
        };

        return {
            isMobileDevice: isMobileDevice
        };
    }]);
;
angular.module('barfootWeb')
    .service('documentService', ['$http', function ($http) {

        var shareEmail = function (sourceRefNo) {

            var req = {
                method: 'GET',
                url: '/api/document/unlockdocuments?sourceRefNo=' + sourceRefNo,
                responseType: 'json'
            }

            return $http(req);
        }

        return {
            shareEmail: shareEmail
        }
    }]);
;
angular.module('barfootWeb')
    .service('filterService', ['$http', function ($http) {

        var defaultSummary = function (searchMode) {

            var req = {
                method: 'GET',
                url: '/api/filter/defaultSummary?searchMode=' + searchMode,
                responseType: 'json'
            }

            return $http(req);
        }

        return {
            defaultSummary: defaultSummary
        }
    }]);;
angular.module('barfootWeb')
    .service('folioService', ['$http', function ($http) {

        var save = function (folio) {
            return $http({
                method: 'POST',
                url: '/api/folio/save',
                data: folio,
                headers: {
                    'Content-Type': 'application/json'
                },
                responseType: 'json'
            });
        };

        var update = function (folio) {
            return $http({
                method: 'POST',
                url: '/api/folio/update',
                data: folio,
                headers: {
                    'Content-Type': 'application/json'
                },
                responseType: 'json'
            });
        };

        var deleteFolio = function (folio) {
            return $http({
                method: 'POST',
                url: '/api/folio/delete',
                data: folio,
                headers: {
                    'Content-Type': 'application/json'
                },
                responseType: 'json'
            });
        };

        var reName = function (folio) {
            return $http({
                method: 'POST',
                url: '/api/folio/rename',
                data: folio,
                headers: {
                    'Content-Type': 'application/json'
                },
                responseType: 'json'
            });
        };

        var suggestedName = function (queryString) {

            var req = {
                method: 'GET',
                url: '/api/folio/suggestedname?queryString=' + queryString,
                responseType: 'json'
            }

            return $http(req);
        }

        var get = function () {

            var req = {
                method: 'GET',
                url: '/api/folio/getall',
                responseType: 'json'
            }

            return $http(req);
        }

        return {
            save: save,
            update: update,
            delete: deleteFolio,
            reName: reName,
            suggestedName: suggestedName,
            get: get
        }
    }]);;
angular.module('barfootWeb')
    .service('formService', ['$http', function ($http) {

        var submitContactForm = function (formRequest, isBranch) {

            if (isBranch === 'true') {
                return $http({
                    method: 'POST',
                    url: '/api/branch/submitContactForm',
                    data: formRequest,
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    responseType: 'json'
                });
            } else {
                return $http({
                    method: 'POST',
                    url: '/api/profile/submitContactForm',
                    data: formRequest,
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    responseType: 'json'
                });
            }
        }

        return {
            submitContactForm: submitContactForm
        }
    }]);
;
angular.module("barfootWeb")
    .service('priceService', [function () {
        return function () {
            return {
                getResidentialPrices:function() {
                    return [
                        ,['25000','$25,000']
                        ,['50000','$50,000']
                        ,['100000','$100,000']
                        ,['150000','$200,000']
                        ,['250000','$250,000']
                        ,['300000','$300,000']
                        ,['400000','$400,000']
                        ,['500000','$500,000']
                        ,['600000','$600,000']
                        ,['700000','$700,000']
                        ,['800000','$800,000']
                        ,['900000','$900,000']
                        ,['1000000','$1m']
                        ,['1200000','$1.2m']
                        ,['1400000','$1.4m']
                        ,['1600000','$1.6m']
                        ,['1800000','$1.8m']
                        ,['2000000','$2m']
                        ,['2500000','$2.5m']
                        ,['3500000','$3.5m']
                        ,['5000000','$5m']
                        ,['7500000','$7.5m']
                        ,['10000000','$10m']
                    ];
                }
            };
        };
    }]);;
angular.module('barfootWeb')
    .service('regionService', ['$http', 'serviceApiHelper', function ($http, serviceApiHelper) {

        var searchRegionByLob = function (lob, regionGroup) {

            var searchMode = serviceApiHelper.getLineOfBusiness(lob);

            var req = {
                method: 'GET',
                cache: true,
                url: '/api/region/searchRegion?regionGroupId=' + regionGroup + '&includeCounts=true&includeChildren=false&linesOfBusiness=' + searchMode,
                responseType: 'json'
            }

            return $http(req);
        };

        var searchRegionGroupByLob = function (lob) {

            var searchMode = serviceApiHelper.getLineOfBusiness(lob);

            var req = {
                method: 'GET',
                cache: true,
                url: '/api/region/searchRegionGroup?includeChildren=false&includeCounts=true&searchRegionGroup&linesOfBusiness=' + searchMode,
                responseType: 'json'
            }

            return $http(req);
        };

        return {
            searchRegionByLob: searchRegionByLob,
            searchRegionGroupByLob: searchRegionGroupByLob
        }

    }]);;
angular.module("barfootWeb")
    .service('screenService', ['$window',function ($window) {
        return function () {
			genScreen =  {
				availWidth: $window.outerWidth > 0 ? $window.outerWidth : $window.innerWidth,
				availHeight: $window.outerHeight > 0 ? $window.outerHeight : $window.innerHeight
			}	
			return genScreen;
        };
    }]);;

// This services is responsible for calling the listingIndex call.
// This should be used for lazy-loading listings on the page.

angular.module('barfootWeb')
    .service('searchService', ['$http', 'btSearchFilterConstants', function ($http, btSearchFilterConstants) {

        var encodeValue = function (value) {

            // encode values for 
            value = value.replace(new RegExp('\\+|\\<|\\>|\\(|\\)|\\[|\\]|\\{|\\}|\\?|\\;|\\:|\\^|\\#|\\@|\\*|\\`|\\~|\\"|\\\'|\\.|\\!', 'g'), '').trim();
                
            return encodeURIComponent(value)
                .toLowerCase()
                .replace(new RegExp('\\-', 'g'), '-dash-')
                .replace(new RegExp('\\%24', 'g'), '-dollar-')
                .replace(new RegExp('\\%25', 'g'), '-percent-')
                .replace(new RegExp('\\%26', 'g'), '-amp-')
                .replace(new RegExp('\\%2f', 'g'), '-slash-')
                .replace(new RegExp('\\%2c', 'g'), '-comma-')
                .replace(new RegExp('\\%20', 'g'), '-');
        }

        var decodeValue = function (value) {
            return decodeURIComponent(value)
                .toLowerCase()
                .replace(new RegExp('\\-dash\\-', 'g'), '*') // support dashes in value
                .replace(new RegExp('\\-dollar\\-', 'g'), '$')
                .replace(new RegExp('\\-percent\\-', 'g'), '%')
                .replace(new RegExp('\\-amp\\-', 'g'), '&')
                .replace(new RegExp('\\-slash\\-', 'g'), '/')
                .replace(new RegExp('\\-comma\\-', 'g'), ',')
                .replace(new RegExp('\\-', 'g'), ' ')
                .replace(new RegExp('\\*', 'g'), '-'); // replace * with dash
        }

        var buildLocationSearchUrl = function(tags, delimeter) {
            var regions = '';
            var suburbs = '';
            if(!delimeter) delimeter = '/';

            if (!tags || tags.length === 0) return '';

            for (var i = 0; i < tags.length; i++) {
                if (tags[i].Type === 'Regions') {
                    if (regions.length === 0) {
                        regions += delimeter + 'region=';
                    } else {
                        regions += ',';
                    }
                    regions += encodeValue(tags[i].Value);
                } else if (tags[i].Type === 'Suburbs') {
                    if (suburbs.length === 0) {
                        suburbs += delimeter + 'suburb=';
                    } else {
                        suburbs += ',';
                    }
                    suburbs += encodeValue(tags[i].Value);
                }
            }
            var query = regions;
            query += suburbs;
            return query;
        };

        var buildAutocompleteKeywordsSearchUrl = function (tags, keywords, mode) {
            var req = {
                method: 'GET',
                cache: true,
                url: '/api/search/buildUrl?keywords=' + encodeValue(keywords) + '&searchMode=' + mode + buildLocationSearchUrl(tags, '&'),
                responseType: 'json'
            }

            return $http(req).then(
                function (response) {
                    if (response.data.Success) {
                        window.location.href = response.data.Result;
                    }
                });
        };

        var redirectToSearch = function (mode, tags, keywords) {
            //Set te default of residential if there is no mode provided.
            mode = mode || 'Residential';

            if (keywords) {
                buildAutocompleteKeywordsSearchUrl(tags, keywords, mode);
            } else {
                if (mode === 'commercial') {
                    mode += '/for-sale';
                }
                window.location.href = btSearchFilterConstants.searchBaseUrl + mode + buildLocationSearchUrl(tags);
            }
        };

        return {
            redirectToSearch: redirectToSearch,
            buildLocationSearchUrl: buildLocationSearchUrl,
            decodeValue: decodeValue,
            encodeValue: encodeValue
        };

    }]);;
/*
Documenation : http://confluence.barfoot.co.nz:8090/display/IT/Select+List+Dialog
*/
angular.module("barfootWeb")
.service('selectListDialog', ['$http', '$log', function($http, $log) {
	return function() {
		return {
			open: function(config) {
				var listScope = angular.element('bt-fullscreen-list').first().scope();
				
				//Make sure the model has been set
				if (config.model == undefined) {
				    $log.error('Model must be present in the config object passed to the selectListDialog service');
					return;
				}
				
				// make sure the optionsItems var is present.
				if (config.pages == undefined) {
				    $log.error("pages must be present in the selectListDialog service config");
					return;
				}
				
				// Also make sure there are actual items in the options. Or there is nothing to display in the list.
				if (config.pages.length <= 0) {
				    $log.error("pages must be populated in the selectListDialog service.");
					return;
				}
                
				listScope.open(config.model, config.pages);
				
				//Setup call backs.
				listScope.onSelectionPage = config.onSelectionPage;
				listScope.onSelectionComplete = config.onSelectionComplete;
				listScope.onSelectionCancelled = config.onSelectionCancelled;
				listScope.onSelectionChange = config.onSelectionChange;
			},
			close: function() {
				var listScope = angular.element('bt-fullscreen-list').first().scope();
				listScope.closeList();
			},
			addPage: function(IPageModel) {
				var listScope = angular.element('bt-fullscreen-list').first().scope();
				listScope.addPage(IPageModel);
			}
		};
	};
}
]);
;
angular.module('barfootWeb')
    .service('serviceApiHelper', [function () {

        var getLineOfBusiness = function(lob) {
            var searchMode;
            switch (lob.toLowerCase()) {
            case "rural":
                searchMode = 'U';
                break;
            case "rental":
                searchMode = "P";
                break;
            case "commercial":
                searchMode = "C";
                break;
            case "residential":
                searchMode = "R";
                break;
            default:
                searchMode = "R";
            }

            return searchMode;
        };

        return {
            getLineOfBusiness: getLineOfBusiness
        }
     }
    ]);;
angular.module('barfootWeb')
    .service('suburbService', ['$http', 'serviceApiHelper', function ($http, serviceApiHelper) {
        var searchByLob = function (lob, regionId) {

            var searchMode = serviceApiHelper.getLineOfBusiness(lob);

            var req = {
                method: 'GET',
                cache: true,
                url: '/api/suburb/search?linesOfbusiness=' + searchMode + '&regionId=' + regionId + '&includeCounts=true',
                responseType: 'json'
            }

            return $http(req);
        };

        return {
            searchByLob: searchByLob
        }
    }]);;
angular.module('barfootWeb').service('textExpander', ['cssHelperService', function (cssHelperService) {

    var instances = [];

    var createInstance = function (elementId, buttonId, hidingHeight, originalHeight, moreText, lessText) {
        instances.push({
            elementId: elementId,
            textElement: document.getElementById(elementId),
            buttonElement: document.getElementById(buttonId),
            hidingHeight: hidingHeight,
            originalHeight: originalHeight,
            moreText: moreText,
            lessText: lessText,
            hiding: true
        });
    }

    var getInstance = function (elementId) {
        for (var i = 0; i < instances.length; i++) {
            if(instances[i].elementId === elementId) return instances[i];
        }
    };

    var init = function (elementId, buttonId, height, moreText, lessText) {

        if(getInstance(elementId)) return;
        
        var textElement = document.getElementById(elementId);
        if (textElement.clientHeight <= height) {
            document.getElementById(buttonId).style.display = 'none';
            return;
        }
        
        var originalHeight = textElement.clientHeight;
        textElement.style.height = height + "px";

        var thisMoreText = moreText ? moreText : 'Read more';
        var thisLessText = lessText ? lessText : 'Read less';

        createInstance(elementId, buttonId, height, originalHeight, thisMoreText, thisLessText);
        var instance = getInstance(elementId);
        cssHelperService.addClass(instance.buttonElement, 'contracted');
    };

    var animate = function (elementId) {
        var instance = getInstance(elementId);
        if(!instance) return;

        if (instance.hiding) {
            instance.textElement.style.height = instance.originalHeight + "px";
            instance.buttonElement.innerText = instance.lessText;
            cssHelperService.removeClass(instance.buttonElement, 'contracted');
        } else {
            instance.textElement.style.height = instance.hidingHeight + "px";
            instance.buttonElement.innerText = instance.moreText;
            cssHelperService.addClass(instance.buttonElement, 'contracted');
        }
        instance.hiding = !instance.hiding;
    }

    return {
        init: init,
        animate: animate
    }
}]);
;
angular.module('barfootWeb').
    service('webProxy', [
        '$http', '$log', '$q', function($http, $log, $q) {
            return function(apiString, params) {
                
                var defer = $q.defer();

                webproxy.Execute(apiString, params,
                    function(data) {
                        var returnedObject = JSON.parse(data.d);
                        defer.resolve(returnedObject);
                    }, function (e) {
                        $log.error('Query = ', apiString);
                        $log.error('Web proxy Failure', e);
                        defer.reject(e);
                    });
                
                return defer.promise;
            };
        }
    ]);
;
angular.module('barfootWeb')
    .service('btProfileTabDataService', ['btUrlQueryService', '$location', function (btUrlQueryService, $location) {

        var getTabIndex = function (tabData, tabType) {
            for (var i = 0; i < tabData.length; i++) {
                if (tabData[i].TabType === tabType) {
                    return i;
                }
            }
        };

        var setTabUrl = function (tabData, queryKey, paging) {
            for (var i = 0; i < tabData.length; i++) {

                // Check active tab
                if (tabData[i].Active) {
                    btUrlQueryService.append(queryKey, tabData[i].TabType);
                    if (tabData[i].Page > 1 && paging) {
                        btUrlQueryService.append('page', tabData[i].Page);
                    } else if (paging) {
                        btUrlQueryService.remove('page');
                    }
                    break;
                }
            }
            
            var newPath = window.location.pathname + btUrlQueryService.getAllString();
            $location.search(btUrlQueryService.getAllString().replace('?', ''));
            $location.replace();
            history.replaceState({}, 'Profile', newPath);
        };

        var init = function (tabData, activeTabType) {

            for (var i = 0; i < tabData.length; i++) {
                var thisTab = tabData[i];

                if (thisTab.TabType === activeTabType) {
                    thisTab.Active = true;

                    // Try to get page No. for active tab only
                    var pageNo = btUrlQueryService.getUrlParam('page');
                    if (pageNo) {
                        thisTab.Page = parseInt(pageNo);
                    } else {
                        thisTab.Page = 1;
                    }
                } else {
                    thisTab.Page = 1;
                }
            }
        };

        var changeTab = function (tabData, selectedTabType, queryKey, paging) {
            for (var i = 0; i < tabData.length; i++) {
                if (tabData[i].TabType === selectedTabType) {
                    tabData[i].Active = true;
                } else {
                    tabData[i].Active = false;
                }
            }

            setTabUrl(tabData, queryKey, paging);
        };

        var moreRecords = function (tabData, activeTabType) {
            var activeTabIndex = getTabIndex(tabData, activeTabType);
            return tabData[activeTabIndex].Items.length < tabData[activeTabIndex].PropertyCount;
        };

        return {
            getTabIndex: getTabIndex,
            setUrl: setTabUrl,
            changeTab: changeTab,
            moreRecords: moreRecords,
            init: init
        };

    }]);
;
angular.module('barfootWeb')
    .service('staffListingsService', ['$http', function ($http) {

        var get = function(query) {

            var req = {
                method: 'GET',
                cache: true,
                url: '/api/stafflistings/get?querytype=' + query.QueryType + '&page=' + query.Page + '&pagesize=' + query.PageSize + '&staffapiref=' + query.StaffApiRef,
                responseType: 'json'
            }

            return $http(req);
        };

        return {
            get: get
        };

    }]);
;
angular.module('barfootWeb')
    .service('branchListingsService', ['$http', function ($http) {

        var get = function(query) {

            var req = {
                method: 'GET',
                cache: true,
                url: '/api/branchlistings/get?querytype=' + query.QueryType + '&page=' + query.Page + '&pagesize=' + query.PageSize + '&branchRefNo=' + query.BranchRefNo,
                responseType: 'json'
            }

            return $http(req);
        };

        return {
            get: get
        };

    }]);
;
angular.module('barfootWeb')
    .service('branchService', ['$http', function ($http) {

        var getBranches = function(query) {
            var req = {
                method: 'GET',
                cache: true,
                url: '/api/branch/get?departments=' +
                    query.departments +
                    '&name=' +
                    query.Name +
                    '&excludedTitles=' +
                    query.ExcludedTitles,
                responseType: 'json'
            };
            return $http(req);
        };
        
        return {
            getBranches: getBranches
        };

    }]);
;
angular.module('barfootWeb')
    .service('appraisalService', ['$http', function ($http) {

        var data = {};
        var initialised = false;

        var intitalise = function () {
            data = {
                latitude: '',
                longitude: '',
                address: '',
                city: '',
                firstName: '',
                lastName: '',
                email: '',
                phone: '',
                message: '',
                manualAddress: false,
                staffId: '',
                recaptchaResponse: ''
            };
        }

        var sendAppraisal = function () {

            var address = data.manualAddress 
                ? data.address + ', ' + data.city 
                : data.address;

            var submitData = {
                StaffId:  data.staffId,
                Address: address,
                ManualAddress: data.manualAddress,
                RecaptchaResponse: data.recaptchaResponse,
                Applicant: {
                    FirstName: data.firstName,
                    LastName: data.lastName,
                    Email: data.email,
                    Phone: data.phone,
                    Message: data.message
                }
            };


            return $http({
                method: 'POST',
                url: '/api/appraisal/post',
                data: submitData,
                headers: {
                    'Content-Type': 'application/json'
                },
                responseType: 'json'
            });
        };

        var get = function () {
            if (!initialised) {
                intitalise();
                initialised = true;
            }
            return data;
        };

        var set = function (model) {
            data = model;
        };

        return {
            sendAppraisal: sendAppraisal,
            get: get,
            set: set
        };

    }]);
;
angular.module('barfootWeb')
    .service('newsletterService', ['$http', function ($http) {

        var submit = function (email, recaptchaResponse, listId, resubscribeUser) {

            return $http({
                method: 'POST',
                url: '/api/newsletter/post',
                data: {
                    Email: email,
                    RecaptchaResponse: recaptchaResponse,
                    ListId: listId,
                    Resubscribe: resubscribeUser
                },
                headers: {
                    'Content-Type': 'application/json'
                },
                responseType: 'json'
            });
        };

        return {
            submit: submit
        };

    }]);
;
angular.module('barfootWeb')
    .service('staffService', ['$http', function ($http) {

        var getNextPage = function(query) {

            var req = {
                method: 'GET',
                cache: true,
                url: '/api/staff/get?querytype=' +
                    query.QueryType +
                    '&page=' +
                    query.Page +
                    '&pagesize=' +
                    query.PageSize +
                    '&departments=' +
                    query.departments +
                    '&branchApiRef=' +
                    query.BranchApiRef +
                    '&name=' +
                    query.Name +
                    '&excludedTitles=' +
                    query.ExcludedTitles,
                responseType: 'json'
            };

            return $http(req);
        };

        var getFirstPage = function (query) {

            var req = {
                method: 'GET',
                cache: true,
                url: '/api/staff/getfirst?querytype=' +
                    query.QueryType +
                    '&page=' +
                    query.Page +
                    '&pagesize=' +
                    query.PageSize +
                    '&departments=' +
                    query.departments +
                    '&branchApiRef=' +
                    query.BranchApiRef +
                    '&name=' +
                    query.Name +
                    '&excludedTitles=' +
                    query.ExcludedTitles,
                responseType: 'json'
            };

            return $http(req);
        };

        return {
            getNextPage: getNextPage,
            getFirstPage: getFirstPage
        };

    }]);
;
angular.module('barfootWeb').filter('absoluteValue', function () {
    return function (num) { return Math.abs(num); }
});
;
angular.module('barfootWeb').filter('autocompleteResultFilter', function() {
    return function(results, type, tags) {
        for (var i = 0; i < results.length; i++) {
            if (results[i].Type === type) {

                if(!tags) return results[i].Matches;

                // Filter out results that match an existing tag
                var filteredResult = [];
                for (var m = 0; m < results[i].Matches.length; m++) {
                    var include = true;
                    for (var t = 0; t < tags.length; t++) {
                        if (results[i].Matches[m].Description === tags[t].Value) {
                            include = false;
                            break;
                        }
                    }

                    if (include) {
                        filteredResult.push(results[i].Matches[m]);
                    }
                }

                return filteredResult;
            }
        }
    };
});
;
angular.module('barfootWeb').filter('capitaliseFirstLetter', ['btTextService', function(btTextService) {
    return function(word) {
        return btTextService.capitaliseFirstLetter(word);
    };
}]);;
angular.module('barfootWeb').filter('formatDateChanges', [function() {
    return function(date, options) {
        return date.toLocateDateString('en-NZ', options);
    };
}]);
;
(function (angular) {
    angular.module("barfootWeb").controller(
        "btMobilePageHeaderController",
        [
            "$scope",
            "$timeout",
            "btAccounts",
            "searchService",
            "$location",
            "$element",
            function (
                $scope,
                $timeout,
                btAccounts,
                searchService
                , $location
                , $element
            ) {
                //Fields
                $scope.filterCount = 0;
                $scope.searchTagCount = 0;
                $scope.savedPropertiesCnt = 0;
                $scope.savedSearchesCount = 0;
                var savedPropertyBadge = $element.find('[saved-properties-badge]').first();
                var savedSearchBadge = $element.find('[saved-search-badge]').first();

                // Private Functions
                var _onPropertySaveOfUnsave = function (val) {

                    switch (val.Operation) {
                        case 'save':
                            $scope.savedPropertiesCnt++;
                            break;
                        case 'unsave':
                            $scope.savedPropertiesCnt--;
                            break;
                    }


                    // Toggle display upon new calculation.
                    if ($scope.savedPropertiesCnt <= 0) {
                        savedPropertyBadge.removeClass("active");
                    } else {
                        savedPropertyBadge.addClass("active");
                    }


                    // Update the display
                    savedPropertyBadge.text($scope.savedPropertiesCnt);
                };

                var onSearchSaved = function () {
                    $scope.savedSearchCount++;
                    savedSearchBadge.addClass("active");
                    savedSearchBadge.text($scope.savedSearchCount);
                };

                var onSearchDelete = function() {
                    $scope.savedSearchCount--;
                    if ($scope.savedSearchCount <= 0) {
                        savedSearchBadge.removeClass("active");
                    }
                    savedSearchBadge.text($scope.savedSearchCount);
                };

                // public functions
                $scope.menuClick = function () {
                    angular.element(".main-navigation").toggleClass("active");
                };

                $scope.cancelNavigation = function () {
                    angular.element(".main-navigation").toggleClass("active");
                };
                $scope.login = function () {

                    btAccounts().addRedirectToUrl();
                    btAccounts().showLogin();

                };

                var _init = function () {

                    // Init function that should be run on load

                    // Save property count should be pre-populated by the server. So we should just base our count off that. 
                    $scope.savedPropertiesCnt = savedPropertyBadge.text() * 1;
                    if ($scope.savedPropertiesCnt === 0) $scope.savedPropertiesCnt = "";
                    $scope.savedSearchCount = savedSearchBadge.text() * 1;
                    if ($scope.savedSearchCount === 0) $scope.savedSearchCount = "";
                    // Wire up event listeners 
                    btEvents.addListener(btEventType.searchHasBeenDelete, function (e, val) {
                        onSearchDelete();
                    });

                    btEvents.addListener(btEventType.searchHasBeenSaved, function (e, val) {
                        onSearchSaved();
                    });
                    // Wire up event listeners
                    btEvents.addListener(btEventType.onPropertySaveOrUnsave, function (e, val) {
                        _onPropertySaveOfUnsave(val);
                    });
                    btEvents.addListener(btEventType.onFilterCountChange, function (e, val) {
                        $scope.filterCount = val;
                    });

                };

                _init();

            }
        ]);

})(window.angular);;
(function (angular) {
    angular.module("barfootWeb").controller("btNavigation", [
        "$scope", "cssHelperService", function ($scope, cssHelperService) {
            $scope.slideOpen = false;

            $scope.showHideSlide = function() {
                if ($scope.slideOpen) {
                    cssHelperService.removeClass(document.body, 'no-scroll');
                    $scope.slideOpen = false;
                } else {
                    cssHelperService.addClass(document.body, 'no-scroll');
                    $scope.slideOpen = true;
                }
            };

            $scope.closeSlide = function() {
                cssHelperService.removeClass(document.body, 'no-scroll');
                $scope.slideOpen = false;
            };

        }]);
})(window.angular); 
;
(function (angular) {
    angular.module("barfootWeb").controller("btUserState", [
        "$scope", "cssHelperService", "btTextService", function ($scope, cssHelperService, btTextService) {

            $scope.accountsMenuOpen = false;
            $scope.favouritesMenuOpen = false;
            $scope.searchMenuOpen = false;
            $scope.savedSearchCount = 0;
            $scope.favouritesCount = 0;

            var savedSearches;
            var searchesTip;
            var searchesContainer;
            var favourites;
            var favouritesContainer;
            var favouritesTip;

            var getSavedCount = function(element, dataId) {
                if (!element) return 0;
                var count = element.attributes[dataId].value;
                if (!count) {
                    count = 0;
                }
                return parseInt(count);
            }

            var buildSaveSearch = function(savedSearch) {
                var anchor = document.createElement('a');
                anchor.href = savedSearch.Href;
                anchor.target = '_self';
                cssHelperService.addClass(anchor, 'block-link');
                anchor.id = 'search-' + savedSearch.FolioId;
                anchor.innerHTML = savedSearch.Name;
                return anchor;
            };

            $scope.showSearchModalMenu = function(e) {
                $scope.accountsMenuOpen = false;
                $scope.favouritesMenuOpen = false;
                $scope.searchMenuOpen = !$scope.searchMenuOpen;
                e.stopPropagation();
            };

            $scope.showFavouriteModalMenu = function(e) {
                $scope.accountsMenuOpen = false;
                $scope.searchMenuOpen = false;
                $scope.favouritesMenuOpen = !$scope.favouritesMenuOpen;
                e.stopPropagation();
            };

            $scope.showAccountModalMenu = function(e) {
                $scope.favouritesMenuOpen = false;
                $scope.searchMenuOpen = false;
                $scope.accountsMenuOpen = !$scope.accountsMenuOpen;
                e.stopPropagation();
            };
            btEvents.addListener(btEventType.searchHasBeenDelete, function (e, val) {
                $scope.savedSearchCount--;
                $scope.savedSearches.innerHTML = $scope.savedSearchCount;
                searchesTip.innerHTML = $scope.savedSearchCount;

                var search = document.getElementById('search-' + val.FolioId);
                search.parentNode.removeChild(search);
            });
            
            btEvents.addListener(btEventType.searchHasBeenSaved, function (e, val) {
                $scope.savedSearchCount++;
                searchesTip.innerHTML = $scope.savedSearchCount;
                savedSearches.innerHTML = $scope.savedSearchCount;
                if ($scope.savedSearchCount <= 3) {
                    searchesContainer.append(buildSaveSearch(val));
                }
            });

            btEvents.addListener(btEventType.onPropertySaveOrUnsave, function (e, val) {
                switch (val.Operation) {
                    case 'save':
                        $scope.favouritesCount++;

                        if ($scope.favouritesCount < 10) {
                            var img = new Image();
                            img.src = val.SavedProperty.Image;

                            var anchor = document.createElement('a');
                            anchor.href = '/' + val.SavedProperty.RelativeUrl;
                            cssHelperService.addClass(anchor, 'block-link');
                            anchor.target = '_self';
                            anchor.id = 'favourite-' + val.SavedProperty.SourceRefNo;

                            var addressContainer = document.createElement('div');
                            cssHelperService.addClass(addressContainer, 'favourite-address');

                            var address = document.createElement('div');
                            address.innerHTML = btTextService.restrictText(val.SavedProperty.Address, 22);

                            var suburb = document.createElement('div');
                            suburb.innerHTML = btTextService.restrictText(val.SavedProperty.Suburb, 30);
                            cssHelperService.addClass(suburb, 'suburb');

                            addressContainer.append(address, suburb);
                            anchor.append(img, addressContainer);
                            favouritesContainer.append(anchor);
                        }

                        break;
                    case 'unsave':
                        $scope.favouritesCount--;
                        var favourite = document.getElementById('favourite-' + val.SourceRefNo);
                        if (favourite) {
                            favourite.parentNode.removeChild(favourite);
                        }
                        break;
                }
                favourites.innerHTML = $scope.favouritesCount;
                favouritesTip.innerHTML = $scope.favouritesCount;
                favourites.setAttribute('data-favourites-count', $scope.favouritesCount);
            });

            var init = function() {
                savedSearches = document.getElementById('saved-search-count');
                $scope.savedSearchCount = getSavedCount(savedSearches, 'data-saved-search-count');
                searchesTip = document.getElementById('searches-tip');
                searchesContainer = document.getElementById('searches-container');

                favourites = document.getElementById('favourites-count');
                favouritesTip = document.getElementById('favourites-tip');
                $scope.favouritesCount = getSavedCount(favourites, 'data-favourites-count');
                favouritesContainer = document.getElementById('favourites-container');

                document.body.addEventListener('click', function() {
                    $scope.favouritesMenuOpen = false;
                    $scope.searchMenuOpen = false;
                    $scope.accountsMenuOpen = false;
                    $scope.$apply();
                });
            };

            init();

        }]);
})(window.angular); 
;
(function (angular) {
    angular.module('barfootWeb').controller('btLineOfBusiness', ['$scope', '$element',
        function ($scope, $element) {

            var inputElements;

            var setActiveLob = function(value) {

                if (!value) return;

                for (var i = 0; i < inputElements.length; i++) {
                    inputElements[i].checked = (inputElements[i].value === value);
                }
            };

            var init = function() {
                inputElements = $element.find('input');

                for (var i = 0; i < inputElements.length; i++) {
                    angular.element(inputElements[i]).on('click', function() {
                            btEvents.trigger(btEventType.onLineOfBusinessChange, this.value);
                            $scope.$apply();
                        });
                }

                btEvents.addListener(btEventType.onLineOfBusinessChange, function(e, val) {
                    setActiveLob(val);
                });
            }

            init();

        }]);
})(window.angular); 
;
(function (angular) {
    angular.module("barfootWeb").controller("btToggleMoreFilters", [
        "$scope", function ($scope) {
            $scope.toggleFilterPopup = function (e) {
                btEvents.trigger(btEventType.ToggleMoreFilter, e);
            }

            btEvents.addListener(btEventType.ResetSummary, function (e, data) {
                if (document.getElementById("summary")) {
                    document.getElementById("summary").textContent = data.summary;
                }
            });

            var init = function () {
                var elements = document.querySelectorAll('.search-result-filter');
                if (Stickyfill && elements) {
                    Stickyfill.add(elements);
                }
            }

            init();
        }]);
})(window.angular); ;
(function (angular) {
    angular.module('barfootWeb').controller('btCommissionCalculator', [
        '$scope', 'cssHelperService', function ($scope, cssHelperService) {
            $scope.savingsRural = '';
            $scope.sellForRural = '';
            $scope.commissionRural = '';

            $scope.savingsResidential = '';
            $scope.sellForResidential = '';
            $scope.commissionResidential = '';

            $scope.disclaimer = false;
            $scope.residentialSliderVisible = true;
            $scope.ruralSliderVisible = false;
            
            var ruralSelection = {savings: '', sellFor: '', commission: ''};
            var residentialSelection = {savings: '', sellFor: '', commission: ''};
            var animationRemoved = false;
            
            var commissionObject = function (price, commission, savings) {
                return {
                    price: price,
                    commission: commission,
                    savings: savings
                };
            }

            var ruralCommissions = [
                commissionObject(200000, 9200, 115),
                commissionObject(225000, 10221, 192),
                commissionObject(250000, 11356, 155),
                commissionObject(275000, 12492, 117),
                commissionObject(300000, 13628, 79),
                commissionObject(325000, 14763, 41),
                commissionObject(350000, 15899, 4),
                commissionObject(375000, 17034, -34),
                commissionObject(400000, 18170, -72),
                commissionObject(425000, 18745, 140),
                commissionObject(450000, 19320, 352),
                commissionObject(475000, 19895, 564),
                commissionObject(500000, 20470, 776),
                commissionObject(525000, 21045, 880),
                commissionObject(550000, 21620, 985),
                commissionObject(575000, 22195, 1089),
                commissionObject(600000, 22770, 1193),
                commissionObject(625000, 23345, 1297),
                commissionObject(650000, 23920, 1402),
                commissionObject(675000, 24495, 1506),
                commissionObject(700000, 25070, 1610),
                commissionObject(725000, 25645, 1714),
                commissionObject(750000, 26220, 1818),
                commissionObject(775000, 26795, 1923),
                commissionObject(800000, 27370, 2027),
                commissionObject(825000, 27945, 2131),
                commissionObject(850000, 28520, 2235),
                commissionObject(875000, 29095, 2340),
                commissionObject(900000, 29670, 2444),
                commissionObject(925000, 30245, 2548),
                commissionObject(950000, 30820, 2652),
                commissionObject(975000, 31395, 2756),
                commissionObject(1000000, 31970, 2861),
                commissionObject(1050000, 33120, 3069),
                commissionObject(1100000, 34270, 3278),
                commissionObject(1150000, 35420, 3486),
                commissionObject(1200000, 36570, 3694),
                commissionObject(1250000, 37720, 3903),
                commissionObject(1300000, 38870, 4111),
                commissionObject(1350000, 40020, 4320),
                commissionObject(1400000, 41170, 4528),
                commissionObject(1450000, 42320, 4737),
                commissionObject(1500000, 43470, 4945),
                commissionObject(1550000, 44620, 5153),
                commissionObject(1600000, 45770, 5362),
                commissionObject(1650000, 46920, 5570),
                commissionObject(1700000, 48070, 5779),
                commissionObject(1750000, 49220, 5987),
                commissionObject(1800000, 50370, 6196),
                commissionObject(1850000, 51520, 6404),
                commissionObject(1900000, 52670, 6613),
                commissionObject(1950000, 53820, 6821),
                commissionObject(2000000, 54970, 7029),
                commissionObject(2100000, 57270, 7446),
                commissionObject(2200000, 59570, 7863),
                commissionObject(2300000, 61870, 8280),
                commissionObject(2400000, 64170, 8697),
                commissionObject(2500000, 66470, 9114),
                commissionObject(2600000, 68770, 9531),
                commissionObject(2700000, 71070, 9948),
                commissionObject(2700000, 71070, 9948),
                commissionObject(2800000, 73370, 10364),
                commissionObject(2900000, 75670, 10781),
                commissionObject(3000000, 77970, 11198),
                commissionObject(3500000, 89470, 13283),
                commissionObject(4000000, 100970, 15367),
                commissionObject(4500000, 112470, 17451),
                commissionObject(5000000, 123970, 19536),
                commissionObject(5500000, 135470, 21620),
                commissionObject(6000000, 146970, 23704),
                commissionObject(6500000, 158470, 25789),
                commissionObject(7000000, 169970, 27873),
                commissionObject(7500000, 181470, 29958),
                commissionObject(8000000, 192970, 32042),
                commissionObject(9000000, 215970, 36211),
                commissionObject(10000000, 238970, 40379),
                commissionObject(11000000, 261970, 44548),
                commissionObject(12000000, 284970, 48717),
                commissionObject(13000000, 307970, 52886),
                commissionObject(14000000, 330970, 57054),
                commissionObject(15000000, 353970, 61223)
            ];

            var residentialCommissions = [
                commissionObject(200000, 9200, -71),
                commissionObject(225000, 10221, 6),
                commissionObject(250000, 11356, -31),
                commissionObject(275000, 12492, -68),
                commissionObject(300000, 13628, -105),
                commissionObject(325000, 14203, 368),
                commissionObject(350000, 14778, 842),
                commissionObject(375000, 15353, 1294),
                commissionObject(400000, 15928, 1735),
                commissionObject(425000, 16503, 1922),
                commissionObject(450000, 17078, 2109),
                commissionObject(475000, 17653, 2296),
                commissionObject(500000, 18228, 2483),
                commissionObject(525000, 18803, 2562),
                commissionObject(550000, 19378, 2641),
                commissionObject(575000, 19953, 2721),
                commissionObject(600000, 20528, 2800),
                commissionObject(625000, 21103, 2879),
                commissionObject(650000, 21678, 2958),
                commissionObject(675000, 22253, 3037),
                commissionObject(700000, 22828, 3117),
                commissionObject(725000, 23403, 3196),
                commissionObject(750000, 23978, 3275),
                commissionObject(775000, 24553, 3354),
                commissionObject(800000, 25128, 3433),
                commissionObject(825000, 25703, 3512),
                commissionObject(850000, 26278, 3592),
                commissionObject(875000, 26853, 3671),
                commissionObject(900000, 27428, 3750),
                commissionObject(925000, 28003, 3829),
                commissionObject(950000, 28578, 3908),
                commissionObject(975000, 29153, 3988),
                commissionObject(1000000, 29728, 4067),
                commissionObject(1050000, 30878, 4225),
                commissionObject(1100000, 32028, 4384),
                commissionObject(1150000, 33178, 4542),
                commissionObject(1200000, 34328, 4700),
                commissionObject(1250000, 35478, 4859),
                commissionObject(1300000, 36628, 5017),
                commissionObject(1350000, 37778, 5175),
                commissionObject(1400000, 38928, 5334),
                commissionObject(1450000, 40078, 5492),
                commissionObject(1500000, 41228, 5651),
                commissionObject(1550000, 42378, 5809),
                commissionObject(1600000, 43528, 5967),
                commissionObject(1650000, 44678, 6126),
                commissionObject(1700000, 45828, 6284),
                commissionObject(1750000, 46978, 6442),
                commissionObject(1800000, 48128, 6601),
                commissionObject(1850000, 49278, 6759),
                commissionObject(1900000, 50428, 6918),
                commissionObject(1950000, 51578, 7076),
                commissionObject(2000000, 52728, 7234),
                commissionObject(2100000, 55028, 7551),
                commissionObject(2200000, 57328, 7868),
                commissionObject(2300000, 59628, 8185),
                commissionObject(2400000, 61928, 8501),
                commissionObject(2500000, 64228, 8818),
                commissionObject(2600000, 66528, 9135),
                commissionObject(2700000, 68828, 9452),
                commissionObject(2700000, 68828, 9452),
                commissionObject(2800000, 71128, 9768),
                commissionObject(2900000, 73428, 10085),
                commissionObject(3000000, 75728, 10402),
                commissionObject(3500000, 87228, 11986),
                commissionObject(4000000, 98728, 13569),
                commissionObject(4500000, 110228, 15153),
                commissionObject(5000000, 121728, 16737),
                commissionObject(5500000, 133228, 18321),
                commissionObject(6000000, 144728, 19904),
                commissionObject(6500000, 156228, 21488),
                commissionObject(7000000, 167728, 23072),
                commissionObject(7500000, 179228, 24656),
                commissionObject(8000000, 190728, 26239),
                commissionObject(9000000, 213728, 29407),
                commissionObject(10000000, 236728, 32574),
                commissionObject(11000000, 259728, 35742),
                commissionObject(12000000, 282728, 38909),
                commissionObject(13000000, 305728, 42077),
                commissionObject(14000000, 328728, 45244),
                commissionObject(15000000, 351728, 48412)
            ];

            var updateLabels = function (commissions, selectedPrice, selectionSet) {
                for (var c = 0; c < commissions.length; c++) {
                    if (selectedPrice === commissions[c].price) {
                        selectionSet.savings = commissions[c].savings;
                        selectionSet.sellFor = selectedPrice;
                        selectionSet.commission = commissions[c].commission;
                        break;
                    }
                }

                return selectionSet;
            }

            var ruralSliderOnChange = function (sliderId, minValue, highValue, pointerType) {
                ruralSelection = updateLabels(ruralCommissions, minValue, ruralSelection);
                $scope.savingsRural = ruralSelection.savings;
                $scope.sellForRural = ruralSelection.sellFor;
                $scope.commissionRural = ruralSelection.commission;
            }

            var residentialSliderOnChange = function (sliderId, minValue, highValue, pointerType) {
                residentialSelection =  updateLabels(residentialCommissions, minValue, residentialSelection);
                $scope.savingsResidential = residentialSelection.savings;
                $scope.sellForResidential = residentialSelection.sellFor;
                $scope.commissionResidential = residentialSelection.commission;
            };

            $scope.commissionTypes = [
                {
                    label: 'Residential',
                    value: 'residential',
                    checked: true
                },
                {
                    label: 'Rural',
                    value: 'rural',
                    checked: false
                }
            ];

            $scope.disclaimerVisible = function () {
                $scope.disclaimer = !$scope.disclaimer;
            };

            $scope.commissionTypeChange = function (value) {
                if (value === 'residential') {
                    $scope.residentialSliderVisible = true;
                    $scope.ruralSliderVisible = false;
                } else {
                    $scope.residentialSliderVisible = false;
                    $scope.ruralSliderVisible = true;
                }

                setTimeout(function() {
                    $scope.$broadcast('rzSliderForceRender');
                }, 0);
            };

            var initSlider = function(commissions, changeHandler)
            {
                var rangeValues = [];
                for (var i = 0; i < commissions.length; i++) {
                    rangeValues.push({value: commissions[i].price, label: commissions[i].price});
                }

                return {
                    minValue: rangeValues[Math.floor(rangeValues.length / 2)],
                    options: {
                        stepsArray: rangeValues,
                        showLabelOnSliders: false,
                        onChange: changeHandler
                    }
                };
            }

            var setDefaultSelections = function (commissions) {
                var defaults = commissions[Math.floor(commissions.length / 2)];
                return {
                    savings: defaults.savings, 
                    sellFor: defaults.price, 
                    commission: defaults.commission
                }
            }

            var init = function () {
                $scope.residentialSlider = initSlider(residentialCommissions, residentialSliderOnChange);
                $scope.ruralSlider = initSlider(ruralCommissions, ruralSliderOnChange);
                
                ruralSelection = setDefaultSelections(ruralCommissions);
                residentialSelection = setDefaultSelections(residentialCommissions);
                
                $scope.savingsResidential = residentialSelection.savings;
                $scope.sellForResidential = residentialSelection.sellFor;
                $scope.commissionResidential = residentialSelection.commission;

                $scope.savingsRural = ruralSelection.savings;
                $scope.sellForRural = ruralSelection.sellFor;
                $scope.commissionRural = ruralSelection.commission;

                // Remove handle animation when first moved
                $scope.$on('minHandleMoved', function (event, data) {
                    if(animationRemoved) return;
                    var sliders = document.querySelectorAll('.commission-calculator .rz-pointer-min');
                    cssHelperService.removeClass(sliders[0], 'animate');
                    cssHelperService.removeClass(sliders[1], 'animate');
                });
            };

            init();
        }]);
})(window.angular); 
;
angular.module('barfootWeb').controller('btNewsletterSignUpController', ['newsletterService', '$sce', '$scope', 'dataLayerService',
    function (newsletterService, $sce, $scope, dataLayerService) {
        var vm = this;
        vm.showPrivacyModal = false;
        vm.allowInput = true;
        vm.invalidRecaptcha = false;
        vm.submitting = false;
        var recaptchaResponse;
        var listId;
        var resubscribeUser;

        var getRecaptchaResponse = function () {
                
            var id = vm.recaptchaElementId + '_response';
            var responseElement = document.getElementById(id);
            if(!responseElement) return false;
                
            var response = responseElement.value;
            if(!response) return false;
            recaptchaResponse = response;
            return true;
        };

        var complete = function (response) {
            vm.allowInput = false;
            vm.submitting = false;

            if (response.status === 200) {
                // success
                vm.success = true;
                dataLayerService.newsletterSubmit(listId);
            } else {
                // failed
                vm.failed = true;
                vm.failedMessage = $sce.trustAsHtml(response.statusText);
            }
        };

        var submitAfterRecaptcha = function () {
            if (!getRecaptchaResponse()) {
                vm.invalidRecaptcha = true;
                vm.submitting = false;
                return;
            }
            
            newsletterService.submit(vm.email, recaptchaResponse, listId, resubscribeUser).then(function (response) {
                complete(response);
            }, function (response) {
                complete(response);
            });
        };

        vm.privacyModalVisible = function (visible) {
            vm.showPrivacyModal = visible;
        };

        vm.submit = function (form) {
            vm.invalidRecaptcha = false;
            if (form.$invalid) return;
            vm.submitting = true;
            $scope.$broadcast('recaptchaChallenge', vm.recaptchaElementId);
        };

        vm.init = function (recaptchaElementId, mailingListId, resubscribe) {
            vm.recaptchaElementId = recaptchaElementId;
            listId = mailingListId;
            resubscribeUser = resubscribe;

            $scope.$on('recaptchaChallengeComplete', function (event, args) {
                if (args === vm.recaptchaElementId) {
                    submitAfterRecaptcha();
                }
            });
        };

    }
]);
;
(function (angular) {
    angular.module('barfootWeb').controller('btPropertyManagementFees', [
        '$scope', 'cssHelperService', function ($scope, cssHelperService) {
            $scope.rentAmount = '';
            $scope.feeAmount = '';
            $scope.disclaimer = false;
            
            var selection = {feeAmount: '', rentAmount: ''};
            var animationRemoved = false;
            
            var feesObject = function (rent, fee) {
                return {
                    rent: rent,
                    fee: fee
                };
            }

            var fees = [
                feesObject('$200','$15.00'),
                feesObject('$250','$18.75'),
                feesObject('$300','$22.50'),
                feesObject('$350','$26.25'),
                feesObject('$400','$30.00'),
                feesObject('$450','$33.75'),
                feesObject('$500','$37.50'),
                feesObject('$550','$41.25'),
                feesObject('$600','$45.00'),
                feesObject('$650','$48.75'),
                feesObject('$700','$52.50'),
                feesObject('$750','$56.25'),
                feesObject('$800','$60.00'),
                feesObject('$850','$63.75'),
                feesObject('$900','$67.50'),
                feesObject('$950','$71.25'),
                feesObject('$1,000','$75.00'),
                feesObject('$1,050','$78.75'),
                feesObject('$1,100','$82.50'),
                feesObject('$1,150','$86.25'),
                feesObject('$1,200','$90.00'),
                feesObject('$1,250','$93.75'),
                feesObject('$1,300','$97.50'),
                feesObject('$1,350','$101.25'),
                feesObject('$1,400','$105.00'),
                feesObject('$1,450','$108.75'),
                feesObject('$1,500','$112.50'),
                feesObject('$1,600','$120.00'),
                feesObject('$1,700','$127.50'),
                feesObject('$1,800','$135.00'),
                feesObject('$1,900','$142.50'),
                feesObject('$2,000','$150.00'),
                feesObject('$2,100','$157.50'),
                feesObject('$2,200','$165.00'),
                feesObject('$2,300','$172.50'),
                feesObject('$2,400','$180.00'),
                feesObject('$2,500','$187.50')
            ];

            var buildSelectionSet = function (fees, selectedRent) {
                var selectionSet = {};

                for (var c = 0; c < fees.length; c++) {
                    if (selectedRent === fees[c].rent) {
                        selectionSet.rent = fees[c].rent;
                        selectionSet.fee = fees[c].fee;
                        break;
                    }
                }

                return selectionSet;
            }

            var sliderChange = function (sliderId, minValue, highValue, pointerType) {
                selection =  buildSelectionSet(fees, minValue);
                $scope.rentAmount = selection.rent;
                $scope.feeAmount = selection.fee;
            };

            $scope.disclaimerVisible = function () {
                $scope.disclaimer = !$scope.disclaimer;
            };

            var initSlider = function(fees, changeHandler)
            {
                var rangeValues = [];
                for (var i = 0; i < fees.length; i++) {
                    rangeValues.push({value: fees[i].rent, label: fees[i].fee});
                }
                
                var defaultValue = '$650';
                selection = buildSelectionSet(fees, defaultValue);

                return {
                    minValue: defaultValue,
                    options: {
                        stepsArray: rangeValues,
                        showLabelOnSliders: false,
                        onChange: changeHandler
                    }
                };
            }

            var init = function () {
                $scope.slider = initSlider(fees, sliderChange);
                
                $scope.rentAmount = selection.rent;
                $scope.feeAmount = selection.fee;

                // Remove handle animation when first moved
                $scope.$on('minHandleMoved', function (event, data) {
                    if(animationRemoved) return;
                    var sliders = document.querySelectorAll('.property-management-fees .rz-pointer-min');
                    cssHelperService.removeClass(sliders[0], 'animate');
                });
            };

            init();
        }]);
})(window.angular); 
;
angular.module('barfootWeb').controller('btSearchResults', ['$scope', 'btFavouritesService', 'cssHelperService', 'btCarouselService',
    function ($scope, btFavouritesService, cssHelperService, btCarouselService) {

    $scope.openSaveSearch = function () {
        btEvents.trigger(btEventType.ToggleSearchResultsSave);
    }

    $scope.favourite = function($event, sourceRefNo) {
        var isFavourite = $event.currentTarget.getAttribute('data-favourite');
        if (isFavourite === 'true') {
            btFavouritesService.deleteFavourite(sourceRefNo);
        }
        else {
            btFavouritesService.addToFavourites(sourceRefNo);
        }
    }

    btEvents.addListener(btEventType.onPropertySaveOrUnsave, function (e, val) {

        var favouriteElement;
        var addClass = '';
        var removeClass = '';
        var favourite;

        if (val.Operation === 'save') {
            favouriteElement = document.querySelectorAll('[data-id="' + val.SavedProperty.SourceRefNo + '"]')[0];
            addClass = 'i-full-star';
            removeClass = 'i-star';
            favourite = 'true';
        } else if (val.Operation === 'unsave') {
            favouriteElement = document.querySelectorAll('[data-id="' + val.SourceRefNo + '"]')[0];
            addClass = 'i-star';
            removeClass = 'i-full-star';
            favourite = 'false';
        }

        if (favouriteElement) {
            cssHelperService.removeClass(favouriteElement, removeClass);
            cssHelperService.addClass(favouriteElement, addClass);
            favouriteElement.setAttribute('data-favourite', favourite);
        }
    });

    $scope.carouselPrevious = function(sourceRefNo) {
        btCarouselService.movePrevious(sourceRefNo);
    };

    $scope.carouselNext = function(sourceRefNo) {
        btCarouselService.moveNext(sourceRefNo);
    };

}]);
;
angular.module('barfootWeb').controller(
    'btProfile', ['$scope', 'dataLayerService', function ($scope, dataLayerService) {

        var gtmData = {};

        $scope.telClick = function () {
            if(!gtmData.pageType && !gtmData.label) return;
            dataLayerService.telLink(gtmData.pageType, gtmData.label);
        };
        
        $scope.init = function (label, pageType) {
            gtmData.label = label;
            gtmData.pageType = pageType;
        }
    }
]);
;
(function (angular) {
    angular.module('barfootWeb').controller(
        'btProfileAbout', ['$scope', 'textExpander', function ($scope, textExpander) {

                var init = function() {
                    textExpander.init('profile-about-text', 'profileAboutBtn', 190);
                }

                $scope.showDescription = function() {
                    textExpander.animate('profile-about-text');
                };

                init();
            }
        ]);
})(window.angular);
;
angular.module('barfootWeb').controller('btProfileContact', [
    '$scope', 'cssHelperService', 'btValidateCaptchaService', 'formService', 'dataLayerService',
    function ($scope, cssHelperService, btValidateCaptchaService, formService, dataLayerService) {

        var referenceApi;
        var recaptchaId;
        var isBranch;
        $scope.formSending = false;
        $scope.sendText = 'Send';
        $scope.showSuccess = false;
        $scope.hideForm = false;
        $scope.validationErrors = [];
        $scope.errors = false;
        $scope.serverValidation = false;

        var resetForm = function () {
            $scope.sendText = 'Send';
            $scope.showSuccess = false;
            $scope.hideForm = false;
            $scope.validationErrors = [];
            $scope.errors = false;
            $scope.formSending = false;
        }

        var headerBlock = document.getElementsByClassName('profile-header')[0];

        $scope.scrollToTop = function () {
            if (!headerBlock) return;
            headerBlock.scrollIntoView({
                block: 'start',
                behaviour: 'smooth'
            });
        }

        var cleanValidations = function (formFields) {
            var field;
            for (var i = 0; i < formFields.length; i++) {
                field = document.getElementById(formFields[i]);
                if (field) {
                    field.setCustomValidity("");
                    field.validationMessage = "";
                }
            }
        }

        var renderServerValidation = function () {
            var formFields = ['message', 'name', 'emailAddress', 'phone'];
            var field;
            cleanValidations(formFields);
            if ($scope.validationErrors.length > 0) {
                field = document.getElementById($scope.validationErrors[0].split('|')[0]);
                if (field) {
                    field.setCustomValidity($scope.validationErrors[0].split('|')[1]);
                    field.validationMessage = $scope.validationErrors[0].split('|')[1];
                    $scope.validationErrors = [];
                    document.getElementsByName('contactForm')[0].reportValidity();
                } else {
                    $scope.validationErrors = [$scope.validationErrors[0].split('|')[0]];
                }
            }
            return;
        }

        var addDataLayerItem = function () {
            var action = 'Agent form submit';
            if (isBranch === 'true') {
                action = 'Branch form submit';
            }
            dataLayerService.formSubmit(action, referenceApi);
        }

        $scope.submit = function () {
            resetForm();
            if (document.getElementsByName('contactForm')[0].checkValidity() === false) {
                if ($scope.serverValidation === false) {
                    return;
                }
            }

            var captchaResponse = document.getElementById(recaptchaId + '_response');
            if (!captchaResponse) {
                $scope.validationErrors = ['Please complete the recaptcha.'];
                return;
            }

            $scope.formSending = true;
            $scope.sendText = 'Please wait...';

            btValidateCaptchaService(captchaResponse.value).then(function (response) {
                if (response === false) {
                    $scope.validationErrors = ['Please complete the recaptcha.'];
                    $scope.sendText = 'Send';
                    btEvents.trigger(btEventType.RecaptchaTriggerReset, {});
                    $scope.formSending = false;
                } else {

                    var request = {
                        Name: $scope.name,
                        Message: $scope.message,
                        Email: $scope.email,
                        Phone: $scope.phone,
                        Reference: referenceApi
                    };
                    formService.submitContactForm(request, isBranch).then(
                        function (response) {
                            $scope.resultApi = response.data;
                            if ($scope.resultApi.Success) {
                                $scope.showSuccess = true;
                                $scope.hideForm = true;
                                addDataLayerItem();
                            } else {
                                $scope.validationErrors = $scope.resultApi.Result.split(',');
                                $scope.sendText = 'Send';
                                $scope.formSending = false;
                                $scope.serverValidation = true;
                                if (!$scope.validationErrors || $scope.validationErrors.length === 0) {
                                    $scope.errors = true;
                                } else {
                                    renderServerValidation();
                                }
                                btEvents.trigger(btEventType.RecaptchaTriggerReset, {});
                            }
                        }, function (e) {
                            $scope.serverValidation = true;
                            console.error('Error: ' + e.data);
                            $scope.errors = true;
                            $scope.sendText = 'Send';
                            $scope.formSending = false;
                            btEvents.trigger(btEventType.RecaptchaTriggerReset, {});
                        });
                }
            });
        };

        var init = function () {
            var element = document.getElementById('profile-contact');
            if (element) {
                referenceApi = element.getAttribute('data-referenceApi');
                recaptchaId = element.getAttribute('data-recaptchaId');
                isBranch = element.getAttribute('data-isBranch');
            }
        };

        init();
    }
]);
;
angular.module('barfootWeb').controller('btProfileHeaderInformation', [
    '$scope', function ($scope) {

        var contactBlock = document.getElementById('profile-contact');

        $scope.scrollToContactForm = function () {
            if (!contactBlock) return;
            contactBlock.scrollIntoView({
                block: 'start',
                behaviour: 'smooth'
            });
        }

    }]);
;
angular.module('barfootWeb').controller('btProfileHeaderRecommendation', [
    '$scope', function ($scope) {

        var recommendationBlock = document.getElementById('profile-recommendation-container');

        $scope.scrollToRecommendations = function () {
            if(!recommendationBlock) return;
            recommendationBlock.scrollIntoView({
                block: 'start',
                behaviour: 'smooth'
            });
        }

    }]);
;
angular.module('barfootWeb').controller(
    'btProfileProperties', ['$scope', 'cssHelperService', 'staffListingsService', 'profileTabData', 'btUrlQueryService', 'btProfileTabDataService',
        function ($scope, cssHelperService, staffListingsService, profileTabData, btUrlQueryService, btProfileTabDataService) {

            var defaultPageSize;
            var staffApiRef;
            var activeTabType;
            $scope.loading = false;
            $scope.tabData;

            $scope.viewMore = function () {

                if ($scope.loading) return;
                $scope.loading = true;

                var tabIndex = btProfileTabDataService.getTabIndex($scope.tabData, activeTabType);

                staffListingsService.get({ QueryType: activeTabType, Page: $scope.tabData[tabIndex].Page + 1, PageSize: defaultPageSize, StaffApiRef: staffApiRef }).then(
                    function (response) {
                        if (response.status === 200) {
                            // render results
                            var data = response.data;
                            if (!Array.isArray(data)) {
                                data = JSON.parse(response.data);
                            }
                            $scope.tabData[tabIndex].Page++;
                            btProfileTabDataService.setUrl($scope.tabData, 'tab', true);
                            Array.prototype.push.apply($scope.tabData[tabIndex].Items, data);
                            $scope.showViewMore = btProfileTabDataService.moreRecords($scope.tabData, activeTabType);
                        }

                        $scope.loading = false;
                    }, function (data) {
                        $scope.loading = false;
                        console.warn('Could not load properties. Response code: ' + data.status);
                        $scope.showViewMore = false;
                    });
            };

            $scope.changeTab = function (selectedTabType) {
                activeTabType = selectedTabType;
                btProfileTabDataService.changeTab($scope.tabData, selectedTabType, 'tab', true);
                $scope.showViewMore = btProfileTabDataService.moreRecords($scope.tabData, activeTabType);
            };

            $scope.init = function (pageSize, staffId) {
                defaultPageSize = pageSize;
                staffApiRef = staffId;

                // Set visible tab
                var activeQueryTab = btUrlQueryService.getUrlParam('tab');
                activeTabType = activeQueryTab ? activeQueryTab : profileTabData[0].TabType;

                btProfileTabDataService.init(profileTabData, activeTabType);
                
                $scope.tabData = profileTabData;
                $scope.showViewMore = btProfileTabDataService.moreRecords($scope.tabData, activeTabType);

                btEvents.addListener(btEventType.ProfilePropertiesTabChange, function (e, tabType) {
                    $scope.changeTab(tabType);
                });
            };
        }
    ]);
;
angular.module('barfootWeb').controller(
    'btProfilePropertyLinks', ['$scope', function ($scope) {
        $scope.scrollToTab = function (tabType) {
            var tab = document.querySelectorAll('[data-tab-type="' + tabType + '"]');
            if (tab && tab.length > 0) {

                if (tabType === 'OurTeam') {
                    btEvents.trigger(btEventType.BranchTeamTabChange, tabType);
                } else {
                    btEvents.trigger(btEventType.ProfilePropertiesTabChange, tabType);
                }
                
                tab[0].scrollIntoView({
                    block: 'start',
                    behavior: 'smooth'
                });
            }
        };
    }]
);
;
angular.module('barfootWeb').controller('btProfileRecommendations', [
    '$scope', 'textExpander', 'deviceHelperService', function ($scope, textExpander, deviceHelperService) {

        $scope.openContact = function () {
            if ($scope.numbers.length > 1) {
                $scope.visible = true;
            } else {
                document.location.href = 'tel:"' + $scope.contactButtonText + '"';
            }
        }

        $scope.expand = function () {
            textExpander.animate('recommendation-container');
        }

        $scope.initialize = function () {

            var maxHeight = 550;

            if (deviceHelperService.isMobileDevice()) {
                maxHeight = 689;
            }

            if (document.getElementById('recommendation-container').clientHeight > maxHeight) {
                var quotes = document.querySelectorAll('.quote-container');
                var height = maxHeight;
                if (quotes.length > 1) {
                    height = quotes[0].clientHeight + quotes[1].clientHeight + 70;
                }
                textExpander.init('recommendation-container', 'profileRecommendationButton', height, 'Read all');
            } else {
                document.getElementsByClassName('end-separator')[0].style.display = 'none';
                document.getElementById('profileRecommendationButton').style.display = 'none';
            }
        }
    }]);
;
angular.module('barfootWeb').controller('btProfileStickyBar', [
    '$scope', '$window', 'cssHelperService', 'dataLayerService', function ($scope, $window, cssHelperService, dataLayerService) {
        $scope.show = true;
        $scope.visible = false;
        $scope.isContactActive = false;
        $scope.isEmailActive = false;
        $scope.numbers = [];
        $scope.heading = '';
        $scope.contactButtonText = '';
        $scope.gtmData = {};

        var contactForm = angular.element('#profile-contact');
        var contactBlock = document.getElementById('profile-contact');

        $scope.scrollToContactForm = function () {
            if (!contactBlock) return;
            contactBlock.scrollIntoView({
                block: 'start',
                behaviour: 'smooth'
            });
        }

        if (contactForm) {
            angular.element($window).bind('scroll',
                function() {

                    if ((contactForm.offset().top - window.innerHeight) <= $(window).scrollTop()) {
                        if ($scope.show) {
                            $scope.show = false;
                            $scope.$apply();
                        }
                    } else {
                        if (!$scope.show) {
                            $scope.show = true;
                            $scope.$apply();
                        }
                    }
                });
        }

        $scope.close = function () {
            cssHelperService.removeClass(document.body, 'no-scroll');
            $scope.visible = false;
        }

        $scope.openContact = function () {
            if ($scope.numbers.length > 1) {
                cssHelperService.addClass(document.body, 'no-scroll');
                $scope.visible = true;
            } else {
                dataLayerService.telLink($scope.gtmData.pageType, $scope.gtmData.label);
                document.location.href = 'tel:"' + $scope.numbers[0].Value.replace(/\ /g, '') + '"';
                $scope.contactButtonText = $scope.numbers[0].Value.replace(/\ /g, '');
            }
        }

        $scope.initialize = function (isContactActive, isEmailActive, contactButtonText, numbers, gtmLabel, gtmPageType) {
            $scope.isContactActive = isContactActive;
            $scope.isEmailActive = isEmailActive;
            $scope.contactButtonText = contactButtonText;
            $scope.numbers = JSON.parse(numbers);
            $scope.gtmData.label = gtmLabel;
            $scope.gtmData.pageType = gtmPageType;

            btEvents.addListener(btEventType.TelLinkClick, function (e, val) {
                dataLayerService.telLink(val.pageType, val.label);
            });
        }
    }]);
;
angular.module('barfootWeb').controller(
    'btBranchAbout', ['$scope', 'textExpander', function ($scope, textExpander) {
            
            var init = function() {
                textExpander.init('branch-about-text', 'branchAboutBtn', 160);
            }

            $scope.showDescription = function() {
                textExpander.animate('branch-about-text');
            };

            init();
        }
    ]);
;
angular.module('barfootWeb').controller(
    'btBranchProperties', ['$scope', 'cssHelperService', 'branchListingsService', 'branchTabData', 'btUrlQueryService', 'btProfileTabDataService',
        function ($scope, cssHelperService, branchListingsService, branchTabData, btUrlQueryService, btProfileTabDataService) {

            var defaultPageSize;
            var branchRefNo;
            var activeTabType;
            $scope.loading = false;
            $scope.tabData;

            $scope.viewMore = function () {

                if ($scope.loading) return;
                $scope.loading = true;

                var tabIndex = btProfileTabDataService.getTabIndex($scope.tabData, activeTabType);

                branchListingsService.get({ QueryType: activeTabType, Page: $scope.tabData[tabIndex].Page + 1, PageSize: defaultPageSize, BranchRefNo: branchRefNo }).then(
                    function (response) {
                        if (response.status === 200) {
                            // render results
                            var data = response.data;
                            if (!Array.isArray(data)) {
                                data = JSON.parse(response.data);
                            }
                            $scope.tabData[tabIndex].Page++;
                            btProfileTabDataService.setUrl($scope.tabData, 'tab', true);
                            Array.prototype.push.apply($scope.tabData[tabIndex].Items, data);
                            $scope.showViewMore = btProfileTabDataService.moreRecords($scope.tabData, activeTabType);
                        }

                        $scope.loading = false;
                    }, function (data) {
                        $scope.loading = false;
                        console.warn('Could not load properties. Response code: ' + data.status);
                        $scope.showViewMore = false;
                    });
            };

            $scope.changeTab = function (selectedTabType) {
                activeTabType = selectedTabType;
                btProfileTabDataService.changeTab($scope.tabData, selectedTabType, 'tab', true);
                $scope.showViewMore = btProfileTabDataService.moreRecords($scope.tabData, activeTabType);
            };

            $scope.init = function (pageSize, branchId) {
                defaultPageSize = pageSize;
                branchRefNo = branchId;

                // Set visible tab
                var activeQueryTab = btUrlQueryService.getUrlParam('tab');
                activeTabType = activeQueryTab ? activeQueryTab : branchTabData[0].TabType;

                btProfileTabDataService.init(branchTabData, activeTabType);
                
                $scope.tabData = branchTabData;
                $scope.showViewMore = btProfileTabDataService.moreRecords($scope.tabData, activeTabType);

                btEvents.addListener(btEventType.ProfilePropertiesTabChange, function (e, tabType) {
                    $scope.changeTab(tabType);
                });
            };
        }
    ]);
;
angular.module('barfootWeb').controller(
    'btBranchStaff', ['$scope', 'cssHelperService', 'branchStaffData', 'btUrlQueryService', 'btProfileTabDataService',
        function ($scope, cssHelperService, branchStaffData, btUrlQueryService, btProfileTabDataService) {
            var activeTabType;
            $scope.loading = false;
            $scope.tabData;
            var firstTabName;

            $scope.changeTab = function (selectedTabType) {
                activeTabType = selectedTabType;
                btProfileTabDataService.changeTab($scope.tabData, selectedTabType, 'team-tab', false);
                if (selectedTabType === firstTabName) {
                    // No need to record first tab selected for staff
                    btUrlQueryService.remove('team-tab');
                    history.replaceState({}, 'Profile', window.location.pathname + btUrlQueryService.getAllString());
                }
            };

            var init = function () {
                // Set visible tab
                var activeQueryTab = btUrlQueryService.getUrlParam('team-tab');
                activeTabType = activeQueryTab ? activeQueryTab : branchStaffData[0].TabType;

                firstTabName = branchStaffData[0].TabType;

                btProfileTabDataService.init(branchStaffData, activeTabType);
                
                $scope.tabData = branchStaffData;

                btEvents.addListener(btEventType.BranchTeamTabChange, function (e, tabType) {
                    if (tabType === 'OurTeam') {
                        $scope.changeTab(branchStaffData[0].TabType);
                    } else {
                        $scope.changeTab(tabType);
                    }
                });
            };

            init();
        }
    ]);
;
angular.module('barfootWeb').controller('btDocument', [
    '$scope', 'documentService', 'btAccounts', 'btManageAccountsService', 'btCookieService',
    function ($scope, documentService, btAccounts, btManageAccountsService, btCookieService) {
            $scope.visible = false;
            $scope.shared = false;
            $scope.captionMessage = 'to view';
            var activeLoader;
            var activeDocElement;

            var hideLoader = function () {
                activeDocElement.show();
                activeLoader.hide();
            };

            var openProtectedDocument = function (documentUrl) {
                window.location.href = '/api/document/navigatetodocument?documentUrl=' + documentUrl;
            }

            var showLogin = function () {
                if (document.URL.indexOf('#') > 0) {
                    var url = document.URL.substring(0, document.URL.indexOf('#'));
                    btAccounts().showLoginWithUrl(url + "#documentList");
                }
                btAccounts().showLoginWithParameter("#documentList");
            };

            var isStoredShare = function (sourceRefNo) {
                var sharedValues = btCookieService.getValue('documentShares');
                if (sharedValues.length > 0) {
                    sharedValues = sharedValues.split('|');
                    for (var i = 0; i < sharedValues.length; i++) {
                        if(sharedValues[i] === sourceRefNo.toString()) return true;
                    }
                }

                return false;
            }

            var storeShare = function (sourceRefNo) {
                var sharedValues = btCookieService.getValue('documentShares');

                if (sharedValues.length > 0) {
                    sharedValues = sharedValues.split('|');
                    for (var i = 0; i < sharedValues.length; i++) {
                        if (sharedValues[i] === sourceRefNo.toString()) return;
                    }
                } else {
                    sharedValues = [];
                }

                sharedValues.push(sourceRefNo);
                btCookieService.set('documentShares', sharedValues.join('|'), 14);
            }

            $scope.share = function () {
                documentService.shareEmail($scope.sourceRefNo).then(
                    function (response) {
                        if (response.data) {
                            $scope.shared = true;
                            $scope.captionMessage = 'View PDF';
                            storeShare($scope.sourceRefNo);
                            openProtectedDocument($scope.documentUrl);
                            hideLoader();
                        }
                        document.body.style.overflowY = 'auto';
                        $scope.visible = false;
                    },
                    function (error) {
                        console.log(error.statusText + ' - ' + error.data.ExceptionMessage);
                        document.body.style.overflowY = 'auto';
                        $scope.visible = false;
                        hideLoader();
                    });
            }

            $scope.close = function () {
                document.body.style.overflowY = 'auto';
                $scope.visible = false;
                hideLoader();
            }

            $scope.openDocument = function ($event, sourceRefNo, hasShared, requiresLogin, documentUrl, openSecurely) {

                activeLoader = $('.loader', $event.currentTarget);
                activeDocElement = $('.user-doc', $event.currentTarget);

                if (requiresLogin) {
                    activeDocElement.hide();
                    activeLoader.show();
                    
                    btManageAccountsService.isUserAuthenticated().then(
                        function(response) {
                            if (JSON.parse(response.data)) {
                                if (hasShared || $scope.shared) {
                                    openProtectedDocument(documentUrl);
                                    hideLoader();
                                } else {
                                    $scope.documentUrl = documentUrl;
                                    $scope.sourceRefNo = sourceRefNo;
                                    document.body.style.overflowY = 'hidden';
                                    $scope.visible = true;
                                }
                            } else {
                                showLogin();
                            }
                        },
                        function (error) {
                            console.log(error.statusText + ' - ' + error.data.ExceptionMessage);
                            hideLoader();
                        });
                } else if (openSecurely) {
                    btManageAccountsService.isUserAuthenticated().then(
                        function(response) {
                            if (JSON.parse(response.data)) {
                                openProtectedDocument(documentUrl);
                                hideLoader();
                            } else {
                                showLogin();
                            }
                        },
                        function (error) {
                            console.log(error.statusText + ' - ' + error.data.ExceptionMessage);
                            hideLoader();
                        });
                } else {
                    window.location.href = documentUrl;
                }
            };

            $scope.init = function (sourceRefNo) {
                $scope.sourceRefNo = sourceRefNo;
                if (isStoredShare($scope.sourceRefNo)) {
                    $scope.shared = true;
                    $scope.captionMessage = 'View PDF';
                }
            }
        }
    ]);
;
angular.module("barfootWeb").controller("btListingAskquestion", [
    "$scope", "$window", function ($scope, $window) {
        $scope.showBtn = true;
        var contactForm = angular.element('#listing-contact');

        if (contactForm) {

            angular.element($window).bind("scroll",
                function() {

                    if ((contactForm.offset().top - window.innerHeight) <= $(window).scrollTop()) {
                        if ($scope.showBtn) {
                            $scope.showBtn = false;
                            $scope.$apply();
                        }
                    } else {
                        if (!$scope.showBtn) {
                            $scope.showBtn = true;
                            $scope.$apply();
                        }
                    }

                });
        }

    }]);
;
angular.module("barfootWeb").controller("btListingContact", [
    "$scope", "cssHelperService", "btValidateCaptchaService", "webProxy",
    function ($scope, cssHelperService, btValidateCaptchaService, webProxy) {

        var listingSourceRefNo;
        var recaptchaId;
        $scope.formSending = false;
        $scope.sendText = 'Send';
        $scope.showSuccess = false;
        $scope.hideForm = false;
        $scope.validationErrors = [];
        $scope.errors = false;

        var resetForm = function() {
            $scope.sendText = 'Send';
            $scope.showSuccess = false;
            $scope.hideForm = false;
            $scope.validationErrors = [];
            $scope.errors = false;
            $scope.formSending = false;
        }

        $scope.submit = function(form) {

            resetForm();

            if (form.$invalid) {
                return;
            }

            var captchaResponse = $('#' + recaptchaId + '_response').val();
            if (!captchaResponse) {
                $scope.validationErrors = ['Please complete the recaptcha.'];
                return;
            }

            $scope.formSending = true;
            $scope.sendText = 'Please wait...';

            btValidateCaptchaService(captchaResponse).then(function(response) {
                if (response === false) {
                    googleReCaptureLoading.resetReCaptcha();
                    $scope.validationErrors = ['Please complete the recaptcha.'];
                    $scope.sendText = 'Send';
                    $scope.formSending = false;
                } else {

                    var request = {
                        Name: $scope.name,
                        Message: $scope.message,
                        Email: $scope.email,
                        Phone: $scope.phone,
                        ListingSourceRefNo: listingSourceRefNo
                    };

                    webProxy('submit-listing-contact', request).then(function (response) {
                        if (response.Success) {
                            $scope.showSuccess = true;
                            $scope.hideForm = true;
                        } 
                        else {
                            if (response.ValidationErrors && response.ValidationErrors.length > 0) {
                                $scope.validationErrors = response.ValidationErrors;
                            } else {
                                // error
                                $scope.errors = true;
                            }
                        }

                        $scope.sendText = 'Send';
                        $scope.formSending = false;
                        btEvents.trigger(btEventType.RecaptchaTriggerReset, {});

                    }, function (e) {
                        console.error('Error: ' + e);
                        $scope.errors = true;
                        $scope.sendText = 'Send';
                        $scope.formSending = false;
                        btEvents.trigger(btEventType.RecaptchaTriggerReset, {});
                    });
                }
            });
        };

        var init = function() {
            var element = document.getElementById('listing-contact');
            listingSourceRefNo = element.getAttribute('data-listingSourceRefNo');
            recaptchaId = element.getAttribute('data-recaptchaId');
        };

        init();
    }
]);
;
angular.module("barfootWeb").controller("btListingSchoolZones", [
    "$scope", "cssHelperService",
    function ($scope, cssHelperService) {
        $scope.inZoneExtraVisible = false;
        $scope.noZoneExtraVisible = false;

        $scope.inZoneVisible = function() {
            $scope.inZoneExtraVisible = !$scope.inZoneExtraVisible;
        };
        
        $scope.noZoneVisible = function() {
            $scope.noZoneExtraVisible = !$scope.noZoneExtraVisible;
        };

        $scope.schoolClick = function(event, id) {
            btEvents.trigger(btEventType.onMarkerSelect, id);
        };

        btEvents.addListener(btEventType.onMarkerSelect, function(event, iMarkerId) {

            var element = document.getElementById('school-link-' + iMarkerId);
            if (!element) return;

            if (cssHelperService.hasClass(element, 'zone-link-active')) {
                cssHelperService.removeClass(element, 'zone-link-active');
            } else {
                cssHelperService.addClass(element, 'zone-link-active');
            }
        });
    }
]);;
angular.module('barfootWeb').controller('btListingSocial', [
    '$scope', 'webProxy', 'btFavouritesService', 'btWindowService', '$log',
    function ($scope, webProxy, btFavouritesService, btWindowService, $log) {

        $scope.shareMenuVisible = false;
        $scope.isFavourite = false;
        $scope.listingId = 0;
        var desktopShareIconImage;
        var mobileShareIconImage;
        var savedText;
        var title;
        var mobileSavedIcon = '/assets/images/version3-mvc/star-yellow-shadow.svg';
        var desktopSavedIcon = '/assets/images/version3-mvc/star-yellow.svg';
        var mobileUnSavedIcon = '/assets/images/version3-mvc/star-white.svg';
        var desktopUnsavedIcon = '/assets/images/version3-mvc/star-black.svg';

        var getMetaTag = function(tagName, attributeProperty, attributeName) {
            var metaTags = document.getElementsByTagName('meta');
            if (!metaTags) return '';

            for (var i=0; i < metaTags.length; i++) { 
                if (metaTags[i].getAttribute(attributeProperty) == tagName) { 
                    return metaTags[i].getAttribute(attributeName); 
                } 
            }

            return '';
        }

        var init = function() {
            var element = document.getElementById('listingsocial');
            $scope.isFavourite = element.getAttribute('data-attr-isfavourite').toLocaleLowerCase() == 'true';
            $scope.listingId = element.getAttribute('data-attr-listingId');
            title = element.getAttribute('data-attr-listingTitle');
            desktopShareIconImage = document.getElementById('desktop-share-icon');
            mobileShareIconImage = document.getElementById('mobile-share-icon');
            savedText = document.getElementById('savedText');

            if ($scope.isFavourite) {
                savedText.innerHTML = 'Saved';
            }
        };

        $scope.favourite = function(listingId) {
            if ($scope.isFavourite) {
                btFavouritesService.deleteFavourite(listingId);
            }
            else {
                btFavouritesService.addToFavourites(listingId);
            }
        };

        $scope.shareMenu = function() {
            $scope.shareMenuVisible = !$scope.shareMenuVisible;
        };

        $scope.copyToClipboard = function() {
            new Clipboard('#clipboard-link',
                {
                    text: function() {
                        return window.location.href;
                    }
                }).on('success',
                function(e) {
                    document.getElementById('clipboard-text').innerHTML = 'Link copied';
                }).on('error',
                function(e) {
                    document.getElementById('clipboard-text').innerHTML = 'Could not copy';
                    $log.warn('btListingSocial.scope.copyToClipboard: Could not copt text. Action: ' + e.action + ', Trigger: ' + e.trigger);
                });
        };

        $scope.facebookShare = function() {

            var url = getMetaTag('og:url', 'property', 'content');                    
            FB.ui(
                {
                    method: 'share',
                    href: url,
                },
                function () {
                }
            );
        };

        btEvents.addListener(btEventType.onPropertySaveOrUnsave, function (e, val) {
            if (val.Operation == 'save') {
                mobileShareIconImage.src = mobileSavedIcon;
                desktopShareIconImage.src = desktopSavedIcon;
                savedText.innerHTML = 'Saved';
                $scope.isFavourite = !$scope.isFavourite;

                if (signInComponent) {
                    signInComponent.AddFavouriteProperty(title, $scope.listingId);
                }

            } else if (val.Operation == 'unsave') {
                mobileShareIconImage.src = mobileUnSavedIcon;
                desktopShareIconImage.src = desktopUnsavedIcon;
                savedText.innerHTML = 'Save';
                $scope.isFavourite = !$scope.isFavourite;

                if (signInComponent) {
                    signInComponent.RemoveFavouriteProperty($scope.listingId);
                }
            }
        });

        init();
    }
]);
;
angular.module("barfootWeb").controller("btListingCarousel", [
    "$scope", "cssHelperService", "imageCarouselData", "floorplanCarouselData", "videoCarouselData", "virtualTourCarouselData", "styleData", "furnishUrl", "virtualfloorplan",
    function ($scope, cssHelperService, imageCarouselData, floorplanCarouselData, videoCarouselData, virtualTourCarouselData, styleData, furnishUrl, virtualfloorplan) {

        var animating = false;
        var body = document.getElementsByTagName("body")[0];
        var lightboxFrame = document.getElementById('lightbox-frame');
        var lightboxView = document.getElementById('lightbox-view');

        $scope.carouselType = '';
        $scope.data = [];
        $scope.open = false;
        $scope.index = 0;

        var buildCarouselItem = function () {

            switch ($scope.carouselType) {
                case 'images':
                    var img = document.createElement('img');
                    img.src = $scope.data[$scope.index].Url;
                    img.alt = $scope.data[$scope.index].Alt;
                    img.id = 'lightbox-frame-content';
                    cssHelperService.addClass(img, 'lightbox-frame-content');
                    return img;
                case 'freefloat':
                    var iframe = document.createElement('iframe');
                    iframe.src = $scope.data;
                    iframe.frameBorder = 0;
                    iframe.allowFullscreen = 'true';
                    iframe.id = 'lightbox-frame-content';
                    cssHelperService.addClass(iframe, 'full');
                    cssHelperService.addClass(lightboxView, 'full');
                    return iframe;
                case 'large':
                    var iframe = document.createElement('iframe');
                    iframe.src = $scope.data;
                    iframe.frameBorder = 0;
                    iframe.allowFullscreen = 'true';
                    iframe.id = 'lightbox-frame-content';
                    cssHelperService.addClass(iframe, 'large');
                    cssHelperService.addClass(lightboxView, 'full');
                    return iframe;
                case 'container':
                    var iframe = document.createElement('iframe');
                    iframe.src = $scope.data;
                    iframe.frameBorder = 0;
                    iframe.allowFullscreen = 'true';
                    cssHelperService.addClass(iframe, 'video');
                    iframe.id = 'lightbox-frame-content';
                    return iframe;
            }

            console.warn('Unsupported carousel type ' + $scope.carouselType + ' provided');
        };

        var animateCarousel = function (direction) {
            animating = true;

            // Build next carousel image
            var img = buildCarouselItem();
            cssHelperService.addClass(img, 'new-' + direction); // add appropriate class to slide left/right

            // Hide previous carousel image by adding animation class
            var currentItem = document.getElementById('lightbox-frame-content');
            cssHelperService.removeClass(currentItem, 'new-' + direction); // add appropriate class to slide left/right
            cssHelperService.addClass(currentItem, 'out-' + direction); // add appropriate class to slide left/right

            // Remove current image and insert new
            lightboxFrame.removeChild(currentItem);
            lightboxFrame.appendChild(img);

            // Animate new image after short delay. This is required because elements added to DOM with transition CSS do not animate
            setTimeout(function () {
                cssHelperService.addClass(img, 'in');
                // Turn off animating state to allow a next/prev click
                animating = false;
            }, 1);
        };

        var preloadImages = function (data) {
            // preload all carousel images not currently visible
            for (var i = 1; i < data.length; i++) {
                var img = new Image();
                img.src = data[i].Url;
            }
        };

        var imageCarouselKeyBindings = function (e) {
            var key = window.event ? e.keyCode : e.which;
            if (key == 39) {
                $scope.carouselNext();
                $scope.$apply();
            } else if (key == 37) {
                $scope.carouselPrevious();
                $scope.$apply();
            } else if (key == 27) {
                $scope.carouselClose();
                $scope.$apply();
            }
        };

        var allCarouselKeyBindings = function(e) {
            var key = window.event ? e.keyCode : e.which;
            if (key == 27) {
                $scope.carouselClose();
                $scope.$apply();
            }
        }

        var _lightboxLoader = function(loadingElement) {
            var img = new Image();
            img.src = '/assets/images/version3-mvc/loader.gif';
            img.id = 'loader';
            cssHelperService.addClass(img, 'loader');
            loadingElement.addEventListener('load', function() {
                lightboxView.removeChild(document.getElementById('loader'));
            });
            lightboxView.appendChild(img);
        };

        $scope.carouselOpen = function(carouselName) {
                var showLoader = false;

                // load json into carousel data
                switch(carouselName) {
                    case 'images':
                        $scope.data = imageCarouselData;
                        $scope.carouselType = 'images';
                        btEvents.addListener('keydown', imageCarouselKeyBindings);
                        preloadImages(imageCarouselData);
                        break;
                    case 'floorplan':
                        $scope.data = floorplanCarouselData;
                        $scope.carouselType = 'images';
                        showLoader = true;
                        btEvents.addListener('keydown', imageCarouselKeyBindings);
                        preloadImages(floorplanCarouselData);
                        break;
                    case 'virtualfloorplan':
                        $scope.data = virtualfloorplan;
                        $scope.carouselType = 'large';
                        showLoader = true;
                        btEvents.addListener('keydown', allCarouselKeyBindings);
                        break;
                    case 'style':
                        $scope.data = styleData;
                        $scope.carouselType = 'freefloat';
                        showLoader = true;
                        btEvents.addListener('keydown', allCarouselKeyBindings);
                        break;
                    case 'furnish':
                        $scope.data = furnishUrl;
                        $scope.carouselType = 'large';
                        showLoader = true;
                        btEvents.addListener('keydown', allCarouselKeyBindings);
                        break;
                    case 'video':
                        $scope.data = videoCarouselData;
                        $scope.carouselType = 'container';
                        btEvents.addListener('keydown', allCarouselKeyBindings);
                        break;
                    case 'tour':
                        $scope.data = virtualTourCarouselData;
                        $scope.carouselType = 'large';
                        showLoader = true;
                        btEvents.addListener('keydown', allCarouselKeyBindings);
                        break;
                }

            // render item
            var item = buildCarouselItem();
                if (showLoader) {
                    _lightboxLoader(item);
                }
            lightboxFrame.appendChild(item);

            // open carousel
            $scope.open = true;
            body.style.overflow = 'hidden';
        };

        $scope.carouselNext = function () {
            if ($scope.index == $scope.data.length - 1 || animating) {
                return;
            }
            $scope.index++;
            animateCarousel('next');
        };

        $scope.carouselPrevious = function () {
            if ($scope.index == 0 || animating) return;
            $scope.index--;
            animateCarousel('previous');
        }

        $scope.makeActive = function (index) {
            if (animating || index == $scope.index) return;

            var direction = 'next';
            if (index < $scope.index) {
                direction = 'previous';
            }

            $scope.index = index;
            animateCarousel(direction);
        }

        $scope.carouselClose = function () {
            $scope.data = [];
            $scope.index = 0;
            $scope.open = false;
            body.style.overflow = 'auto';
            btEvents.removeListener('keydown', imageCarouselKeyBindings);
            btEvents.removeListener('keydown', allCarouselKeyBindings);
            lightboxFrame.removeChild(document.getElementById('lightbox-frame-content'));
            var loader = document.getElementById('loader');
            if (loader) {
                lightboxView.removeChild(loader);
            }
            cssHelperService.removeClass(lightboxView, 'full');
        }
    }
]);;
angular.module('barfootWeb').controller(
    'btListingsSummary',
    [
        '$scope', 'textExpander',
        function ($scope, textExpander) {
            $scope.heading = 'Price information';
            $scope.visible = false;
            $scope.redirectLink = '#contact';

            var init = function () {
                textExpander.init('listingdetailssummary-description', 'showDescriptionBtn', 200);
            }

            $scope.showDescription = function () {
                textExpander.animate('listingdetailssummary-description');
            };

            $scope.select = function () {
                document.body.style.overflowY = 'auto';
                $scope.visible = false;
                if ($scope.redirectLink) {
                    window.location.hash = '';
                    window.location.hash = $scope.redirectLink;
                }
            }

            $scope.close = function () {
                document.body.style.overflowY = 'auto';
                $scope.visible = false;
            }

            init();
        }
    ]);
;
angular.module('barfootWeb').controller(
    'btAppraisal', ['$scope', 'appraisalService', 'dataLayerService', 'deviceHelperService', function ($scope, appraisalService, dataLayerService, deviceHelperService) {

        var steps = [
            'address',
            'manualAddress',
            'addressDisplay',
            'userDetails',
            'userMessage',
            'result'
        ];

        var vm = this;
        vm.hrefLink = '';
        vm.stepIndex = 0;
        var completeFormUrl = '';
        var heading = document.querySelectorAll('.appraisal-container h1')[0];

        var pushGtmData = function () {
            dataLayerService.appraisalFormStep(vm.stepIndex + 1);
        };

        var stepChanged = function () {
            $scope.$broadcast('appraisalStepChange', steps[vm.stepIndex]);

            if (deviceHelperService.isMobileDevice()) {
                heading.scrollIntoView({
                    block: 'start',
                    behaviour: 'smooth'
                });
            }
        }

        vm.stepSet = function (stepName) {
            for (var i = 0; i < steps.length; i++) {
                if (steps[i] === stepName) {
                    vm.stepIndex = i;
                    pushGtmData();
                    stepChanged();
                    return;
                }
            }
        }

        vm.nextStep = function () {
            vm.stepIndex++;
            pushGtmData();
            stepChanged();
        }

        vm.previousStep = function () {
            vm.stepIndex--;
            pushGtmData();
            stepChanged();
        }

        vm.isActiveStep = function (stepName) {
            return steps[vm.stepIndex] === stepName;
        }

        vm.editMapStep = function () {
            var data = appraisalService.get();
            if (data.manualAddress) {
                vm.stepSet('manualAddress');
            } else {
                vm.stepSet('addressDisplay');
            }
        }

        vm.complete = function () {
            window.location = completeFormUrl;
        };

        $scope.init = function (googleKey, agent, completeUrl) {
            vm.googleKey = googleKey;
            vm.agent = agent;
            completeFormUrl = completeUrl;

            var data = appraisalService.get();
            data.staffId = agent.StaffId;
            appraisalService.set(data);

            pushGtmData();
        }
    }
    ]);
;
angular.module('barfootWeb').controller(
    'btFindUsAgents', ['$scope', '$q', 'staffService', 'branchService', 'findUsAgentTabData', 'branches', 'btUrlQueryService', 'btProfileTabDataService',
        function ($scope, $q, staffService, branchService, findUsAgentTabData, branches, btUrlQueryService, btProfileTabDataService) {

            $scope.defaultPageSize;
            $scope.activeTabType;
            $scope.departments;
            $scope.excludedTitles;
            $scope.loading = false;
            $scope.tabData;
            $scope.Branches;
            $scope.imageSize;
            $scope.defaultPhoto;
            $scope.noSearchResultImage;
            $scope.name;
            $scope.branchApiRef;

            $scope.viewMore = function () {

                if ($scope.loading) return;
                $scope.loading = true;

                var tabIndex = btProfileTabDataService.getTabIndex($scope.tabData, $scope.activeTabType);

                staffService.getNextPage({
                    QueryType: $scope.activeTabType,
                    Page: $scope.tabData[tabIndex].Page + 1,
                    PageSize: $scope.defaultPageSize,
                    departments: $scope.departments,
                    BranchApiRef: $scope.branchApiRef,
                    Name: encodeURIComponent($scope.name),
                    ExcludedTitles: encodeURIComponent($scope.excludedTitles)
                }).then(
                    function (response) {
                        if (response.status === 200) {
                            var data = response.data;
                            if (!Array.isArray(data)) {
                                data = JSON.parse(response.data);
                            }
                            $scope.tabData[tabIndex].Page++;
                            Array.prototype.push.apply($scope.tabData[tabIndex].Items, data);
                            $scope.showViewMore =
                                btProfileTabDataService.moreRecords($scope.tabData, $scope.activeTabType);
                            $scope.loading = false;
                        }
                    }, function (data) {
                        $scope.loading = false;
                        console.warn('Could not load agents. Response code: ' + data.status);
                        $scope.showViewMore = false;
                    });
            };

            $scope.search = function (model) {

                if ($scope.loading) return;
                $scope.loading = true;

                $scope.name = model.name;
                $scope.branchApiRef = model.branchApiRef;
                $q.all([
                    staffService.getFirstPage({
                        QueryType: $scope.activeTabType,
                        Page: 1,
                        PageSize: $scope.defaultPageSize,
                        departments: $scope.departments,
                        BranchApiRef: $scope.branchApiRef,
                        Name: encodeURIComponent($scope.name),
                        ExcludedTitles: encodeURIComponent($scope.excludedTitles)
                    }),
                    branchService.getBranches({
                        departments: $scope.departments,
                        Name: encodeURIComponent($scope.name),
                        ExcludedTitles: encodeURIComponent($scope.excludedTitles)
                    })]).then(function (response) {
                        if (response[0].status === 200 && response[1].status === 200) {
                            var data = response[0].data;
                            btProfileTabDataService.init(data, data.TabType);
                            $scope.tabData = data;
                            $scope.showViewMore = btProfileTabDataService.moreRecords($scope.tabData, $scope.activeTabType);
                            $scope.initialize(response[1].data);
                            btEvents.trigger(btEventType.HideAutocompleteLoader);
                        }
                    $scope.loading = false;
                }, function (data) {
                    $scope.loading = false;
                    console.warn('Could not load branches. Response code: ' + data[0].status + data[1].status);
                    $scope.showViewMore = false;
                });
            };

            $scope.initialize = function (branches) {
                $scope.branches = [{
                    Branch_Ref_No: 0,
                    Name: "Filter by branch"
                }].concat(branches);
            };

            $scope.changeTab = function (selectedTabType) {
                $scope.activeTabType = selectedTabType;
                btProfileTabDataService.changeTab($scope.tabData, selectedTabType, 'tab', true);
                $scope.showViewMore = btProfileTabDataService.moreRecords($scope.tabData, activeTabType);
            };

            $scope.init = function (pageSize, departments, defaultPhoto, noSearchResultImage, excludeTitles) {
                $scope.defaultPageSize = pageSize;
                $scope.departments = departments;
                $scope.excludedTitles = excludeTitles;
                $scope.initialize(branches);
                $scope.branchApiRef = 0;
                $scope.name = '';
                // Set visible tab
                var activeQueryTab = btUrlQueryService.getUrlParam('tab');
                $scope.activeTabType = activeQueryTab ? activeQueryTab : findUsAgentTabData[0].TabType;

                btProfileTabDataService.init(findUsAgentTabData, $scope.activeTabType);
                
                $scope.tabData = findUsAgentTabData;
                $scope.imageSize = '?width=300&height=300&mode=crop&quality=85&anchor=TopCenter';
                $scope.defaultPhoto = defaultPhoto;
                $scope.noSearchResultImage = noSearchResultImage;
                $scope.showViewMore = btProfileTabDataService.moreRecords($scope.tabData, $scope.activeTabType);
            };
        }
    ]);
;
angular.module('barfootWeb').directive('btFormValidationFocus', ['deviceHelperService', function (deviceHelperService) {
    return {
        restrict: 'A',
        link: function (scope, elem) {
            
            elem.on('submit', function () {

                if(!deviceHelperService.isMobileDevice()) return;
                
                var firstInvalid = elem[0].querySelector('.ng-invalid');
                
                if (firstInvalid) {
                    firstInvalid.focus();
                    firstInvalid.scrollIntoView({
                        block: 'center',
                        behaviour: 'smooth'
                    });
                }
            });
        }
    };
}]);
;
/*
 Documenation : http://confluence.barfoot.co.nz:8090/display/IT/Select+List+Dialog

*/
angular.module("barfootWeb").directive("btFullscreenList", ['$compile', '$rootScope', '$timeout', '$log', function ($compile, $rootScope, $timeout, $log) {
    return {
        restrict: 'E',
        templateUrl: "/assets/js/version3-mvc/angular/templates/bt-fullscreen-list.html",
        controller: ['$scope', '$location', function ($scope, $location) {
            // set to undefined so there is no sliding animation
            // if set true of false, then a sliding up and down animation is performed.
            $scope.isActive = undefined;
            $scope.resetOnDone = false;
            //if a page is selected then we should take note of it's IPageOptionMOdel
            $scope.previousSelectedPageOptionModel = undefined;
            $scope.currentSelectedIPageOption = undefined;
            $scope.tempModel = [];
            // general function to reset fields.
            var _resetScope = function () {
                $scope.currentIPageModel = undefined;
                $scope.ngModel = [];
                $scope.tempModel = [];
                $scope.pages = [];
                $scope.pageTitle = '';
                $scope.onSelectionCancelled = undefined;
                $scope.onSelectionComplete = undefined;
                $scope.onSelectionChange = undefined;
                $scope.key = '';
                $scope.previousSelectedPageOptionModel = undefined;
            }
            ;
            _resetScope();
            // Closes dialog
            var _closeDialog = function () {
                // set active to false so the panel will slide down.
                $scope.isActive = false;
                // after the animation has completed Change the status to keep hidden.
                $timeout(function () {
                    $scope.isActive = undefined;
                }, 500)
            }
            var _getAllSelectedItems = function () {
                var results = [];
                angular.forEach($scope.currentIPageModel.options, function (iPageOptionModel) {
                    if (iPageOptionModel.isSelected == true && iPageOptionModel.isSelectAllOption != true && iPageOptionModel.isDefaultOption != true) {
                        results.push(iPageOptionModel);
                    }
                })
                return results;
            }
            var _setDefaultOption = function (passedInValue) {
                angular.forEach($scope.currentIPageModel.options, function (iPageOption) {
                    if (iPageOption.isDefaultOption == true) {
                        iPageOption.isSelected = passedInValue;
                        if (passedInValue == false) {
                            _removeSelectionOption(iPageOption);
                        }
                    }
                })
            }
            var _setSelectAllOption = function (passedInValue) {
                angular.forEach($scope.currentIPageModel.options, function (iPageOption) {
                    if (iPageOption.isSelectAllOption == true) {
                        iPageOption.isSelected = passedInValue;
                    }
                })
                if (passedInValue == false) {
                    // will need to add all the options are are selected 
                    angular.forEach(_getAllSelectedItems(), function (iPageOptionModel) {
                        _addSelectionOption(iPageOptionModel);
                    })
                    // remobe the parent page option 
                    if ($scope.currentIPageModel.parentPageOption != undefined) {
                        _removeSelectionOption($scope.currentIPageModel.parentPageOption);
                    }
                }
            }
            var _setTempModel = function (iPageOptionModelArray) {
                $scope.tempModel = iPageOptionModelArray;
            }
            var _setAllPageOptions = function (passedInValue) {
                angular.forEach($scope.currentIPageModel.options, function (val) {
                    val.isSelected = passedInValue;
                });
            }
            var _removePage = function () {
                var lastPage = $scope.pages[$scope.pages.length - 1];
                lastPage.slideOut = true;
                //after 1/2 a seconds remove the last page.
                $timeout(function () {
                    $scope.pages.splice($scope.pages.indexOf(lastPage), 1);
                }, 475);
                $scope.currentIPageModel = $scope.pages[$scope.pages.length - 2];
                //remove the page and its selections
                var deletedList = [];
                angular.forEach($scope.tempModel, function (val) {
                    // if this value is the selected page that was cancel, then remove it.
                    // OR this value is a child of the lastpage that was cancelled, then remove it as well.
                    try {
                        if (val.name == lastPage.name) {
                            deletedList.push(val);
                        }
                        if (val.parentPage != undefined) {
                            if (val.parentPage.name == lastPage.name) {
                                deletedList.push(val);
                            }
                        }
                    } catch (e) {
                        $log.error(e.message + '. Attempting to remove page from tempModel :', $scope.tempModel);
                    }
                });
                angular.forEach(deletedList, function (val) {
                    $scope.tempModel.splice($scope.tempModel.indexOf(val), 1);
                })
            }
            // fires off cancellation events.
            var _cancelSelection = function () {
                // call back to the listing service is exists.
                if ($scope.onSelectionCancelled != undefined) {
                    $scope.onSelectionCancelled();
                }
                // reset page state
                $scope.pages = $scope.savedPageStat;
            }
            $scope.filterReseted = false;
            btEvents.addListener(btEventType.onFilterReset, function () {
                // $scope.cancel();
                $scope.filterReseted = true;
            });
            var _pageHasSelectedOptions = function () {
                var selectedItems = [];
                // get all the selected items out of the temp model and mapp them to the current page. 
                angular.forEach($scope.currentIPageModel.options, function (iPageOption) {
                    if (iPageOption.isSelected && iPageOption.isSelectAllOption != true && iPageOption.isDefaultOption != true) {
                        selectedItems.push(iPageOption);
                    }
                })
                return selectedItems.length > 0;
            }

            var _getCurrentPage = function () {
                return $scope.currentIPageModel;
            }

            var _checkOrAddSelectAllOptionToPages = function (IPageModelArray) {
                // loop through all the pages
                angular.forEach(IPageModelArray, function (iPageModel) {
                    var newIPageModelList = [];
                    //check for default option 
                    // default option will override any select all options
                    if (iPageModel.defaultOption != undefined && newIPageModelList.indexOf(iPageModel.defaultOption) == -1) {
                        // make sure this flag is set to true. So other parts of logic can filter for it. 
                        iPageModel.defaultOption.isDefaultOption = true;
                        //finally add it to the new list of options . First so it's at the top
                        newIPageModelList.push(iPageModel.defaultOption);
                        // make sure we are not doubling up 
                        var defaultOptionIdx = iPageModel.options.indexOf(iPageModel.defaultOption);
                        if (defaultOptionIdx != -1) {
                            iPageModel.options.splice(defaultOptionIdx, 1);
                        }
                    } else {
                        //Check for select all option
                        if (iPageModel.selectAllOption != undefined && newIPageModelList.indexOf(iPageModel.selectAllOption) == -1) {
                            newIPageModelList.push(iPageModel.selectAllOption);
                        }
                        // make sure we are not doubling up 
                        if (iPageModel.selectAllOption != undefined) {
                            var selectAllIdx = iPageModel.options.indexOf(iPageModel.selectAllOption);
                            if (selectAllIdx != -1) {
                                iPageModel.options.splice(selectAllIdx, 1);
                            }
                        }
                    }
                    //now append all the other options have into the new list
                    angular.forEach(iPageModel.options, function (val) {
                        newIPageModelList.push(val);
                    });
                    //update the page to have the select all option and other options 
                    iPageModel.options = newIPageModelList;
                })
            }
            var _removeSelectionOption = function (iPageOptionModel) {
                if (iPageOptionModel == undefined) {
                    $log.error('iPageOptionModel can\'t be undefined')
                }
                var idx = $scope.tempModel.indexOf(iPageOptionModel)
                if (idx != -1) {
                    $scope.tempModel.splice(idx, 1);
                }
            }
            var _addSelectionOption = function (iPageOptionModel) {
                if (iPageOptionModel == undefined) {
                    $log.error('iPageOptionModel can\'t be undefined')
                }
                var idx = $scope.tempModel.indexOf(iPageOptionModel)
                if (idx == -1) {
                    $scope.tempModel.push(iPageOptionModel);
                }
            }
            var _removeSelectAllOptionFrom = function (iPageOptionModelList) {
                // double check there is no select all options in any of the selections;
                var removeList = [];
                angular.forEach(iPageOptionModelList, function (iPageOptionModel) {
                    if (iPageOptionModel != undefined) {
                        if (iPageOptionModel.isSelectAllOption == true) {
                            removeList.push(iPageOptionModel);
                        }
                    }
                })
                angular.forEach(removeList, function (pendingRemoval) {
                    iPageOptionModelList.splice($scope.tempModel.indexOf(pendingRemoval), 1);
                })
                return iPageOptionModelList;
            }
            var _requestNewPage = function (iPageOptionModel) {
                if (iPageOptionModel != undefined) {
                    // update the page title. 
                    $scope.pageTitle = iPageOptionModel.name;
                    iPageOptionModel.parentPage = $scope.currentIPageModel;
                    iPageOptionModel.isSelected = true;
                    // remove all other selection by creating a new array with the selected page added.
                    $scope.tempModel = [iPageOptionModel];
                    // As this call back function is a options configuration in the service.
                    // We should check that is exists.
                    if ($scope.onSelectionPage != undefined) {
                        $scope.onSelectionPage(iPageOptionModel);
                    }
                    //take record for this selection
                    $scope.previousSelectedPageOptionModel = iPageOptionModel;
                    // this function is not responsible for adding the new page. 
                }

            }
            var _getPreviousPage = function () {
                return $scope.pages[$scope.pages.indexOf($scope.currentIPageModel) - 1];
            }
            var _getDefaultOption = function (iPageModel) {
                // if no page is passed into the function assume we're talking about the current page
                if (iPageModel == undefined) {
                    iPageModel = $scope.currentIPageModel
                }
                // search the model for a default option and if there is one, set results as it. 
                var result = undefined;
                angular.forEach(iPageModel.options, function (iPageOptionModel) {
                    if (iPageOptionModel.isDefaultOption == true) {
                        result = iPageOptionModel;
                    }
                })
                //return the result. can be undefined
                return result;
            }
            var _getSelectAllOption = function (iPageModel) {
                // check if there is  a page passed in, if not assume the currentIPageModel
                if (iPageModel == undefined) {
                    iPageModel = $scope.currentIPageModel
                }
                var result = undefined;
                angular.forEach(iPageModel.options, function (iPageOptionModel) {
                    if (iPageOptionModel.isSelectAllOption == true) {
                        result = iPageOptionModel;
                    }
                })
                // return the selected option, this can be undefined
                return result;
            }

            var currentSortOption = function () {
                var querystring = $location.search();
                if ("order" in querystring) {
                    return querystring['order'];
                }
                return "Date";
            }


            $scope.open = function (model, pages) {
                _resetScope();
               
                // set model
                $scope.ngModel = model;
                // set start pages.
                $scope.pages = pages;
                if (pages.length == 1) {
                    // make sure the default options is selected on init open (if there is one)
                    var hasExistingSelection = false;
                    angular.forEach($scope.pages[0].options, function(iPageOptionModel) {
                        if (iPageOptionModel.isSelected == true) {
                            hasExistingSelection = true;
                        }
                    });

                    if (currentSortOption() !== "Date") {
                        hasExistingSelection = true;
                        angular.forEach($scope.pages[0].options, function(iPageOptionModel) {
                            if (iPageOptionModel.value === currentSortOption()) {
                                iPageOptionModel.isSelected = true;
                            }
                        });

                    }

                    if (hasExistingSelection == false && $scope.pages[0].defaultOption != undefined) {
                        $scope.pages[0].defaultOption.isSelected = true;
                    }
                }
                // set the current page. 
                $scope.currentIPageModel = pages[pages.length - 1];
                //add the select all option to all pages if the flag is set to true.
                _checkOrAddSelectAllOptionToPages(pages);
                $scope.savedPageStat = $scope.pages;
                angular.forEach($scope.ngModel, function (option) {
                    $scope.tempModel.push(option);
                })
                //option dialog.
                $scope.isActive = true;

                if ($scope.filterReseted) {
                    _setAllPageOptions(false);
                    _setDefaultOption(true);
                    _cancelSelection();
                    $scope.filterReseted = false;
                }
            }
            $scope.selectAllPageOptions = function (toggledValue) {
                // loop through all the items within the current page and select them 
                // make sure not to process the select all item it's self
                // todo - might need to cancel the page select event, or it'll try and select 100's of pages
                angular.forEach($scope.currentIPageModel.options, function (iPageOptionModel) {
                    if (iPageOptionModel.isSelectAllOption == false) {
                        // set the state of the page option to that of the select all item
                        iPageOptionModel.isSelected = toggledValue;
                        // add or remove the item from selection depending on the select all result;
                        var pageOptionIndex = $scope.tempModel.indexOf(iPageOptionModel);
                        if (toggledValue) {
                            //make sure the item is not already selected.
                            if (pageOptionIndex == -1) {
                                $scope.tempModel.push(iPageOptionModel);
                            }
                        } else {
                            $scope.tempModel.splice(pageOptionIndex, 1);
                        }
                    }
                    $scope.ngModel = $scope.tempModel;
                })
            }
            // this event will be called when a page is selected.
            $scope.onPageSelect = function (iPageOptionModel) {

                if (iPageOptionModel.isDisabled == true) return;
                // subscribed event fired when any selection has been performed.
                if ($scope.onSelectionChange != undefined) {
                    $scope.onSelectionChange(iPageOptionModel);
                }
                if (iPageOptionModel.isDefaultOption == true) {
                    // default option has been selected, so we de-select all other options
                    _setAllPageOptions(false)
                    // set the temp model to just have thisoption selected.
                    _setTempModel([iPageOptionModel])
                    _setDefaultOption(true);
                } else if (iPageOptionModel.IsSelectAllOption == true) {
                    iPageOptionModel.isSelected = !(iPageOptionModel.isSelected == true);
                    // select all options within the current page. 
                    _setAllPageOptions(iPageOptionModel.isSelected);
                    // change the temp model to only reflect the parent page, as that is was select all is basically doing
                    _setTempModel([iPageOptionModel.parentPageOption]);
                } else if (iPageOptionModel.hasChildren == true) {
                    // This is a parent page option. So a new page should be requested from the source 
                    // The source controller should be deciding when to sent a new page to the control.
                    // This function will only send the request, it's not responsible for the actual page rendering. 
                    _requestNewPage(iPageOptionModel);




                } else {


                    var currentPage = _getCurrentPage();
                    if (currentPage.singleSelect == true) {
                        // Because this is basically a radio button list. 
                        // that means the clicked item is selected. There would never be a state where nothing was selected. 
                        // so by default set selected true on this click item and unselect all other items. 
                        _setAllPageOptions(false);
                        iPageOptionModel.isSelected = true;
                        _setTempModel([iPageOptionModel]);
                    } else {
                        // toggle the option selection
                        iPageOptionModel.isSelected = !iPageOptionModel.isSelected;
                        // add or remove the option from the tempModel.
                        if (iPageOptionModel.isSelected == true) {
                            //add options to the temp model.
                            _addSelectionOption(iPageOptionModel);
                            // Since this is not a select all or default option, we should make sure the those options are unselected. 
                            _setDefaultOption(false);
                            _setSelectAllOption(false)
                        } else {
                            //remove the option from the temp model
                            _removeSelectionOption(iPageOptionModel);
                        }
                        // Remove any parent pages that have children.
                        // Because we are new selecting single selections. not pages.
                        var parentPagesToRemove = [];
                        // gather list
                        angular.forEach($scope.tempModel, function (val) {
                            if (val.hasChildren == true) {
                                parentPagesToRemove.push(val);
                            }
                        });
                        // remove list from model
                        angular.forEach(parentPagesToRemove, function (val) {
                            $scope.tempModel.splice($scope.tempModel.indexOf(val), 1);
                        })
                        //_checkOrUncheckItem(iPageOptionModel)
                        if (_pageHasSelectedOptions() == true) {
                            _setDefaultOption(false);
                            _setSelectAllOption(false);
                        }
                    }
                }
            }
            ;
            // called with someone presses the cancel button.
            $scope.cancel = function () {
                // cancel is only available on the first page.
                // if there is a default value on that page (which should be the case normally)
                // we should select that value 
                //_setAllPageOptions(false);
                //_setDefaultOption(true);
                _closeDialog();
                //_cancelSelection();
                //$timeout(function () {
                //    _resetScope();
                //}, 500);
            }
            $scope.addPage = function (iPageModel, autoSetupDefaultOptions) {
                // check for select all option.
                if (iPageModel.selectAllOption != undefined) {
                    var newIPageModelList = [];
                    iPageModel.selectAllOption.IsSelectAllOption = true;
                    //push the select all option first in the list
                    newIPageModelList.push(iPageModel.selectAllOption);
                    //now append all the other options have into the new list
                    angular.forEach(iPageModel.options, function (val) {
                        newIPageModelList.push(val);
                    });
                    //update the page to have the select all option and other options 
                    iPageModel.options = newIPageModelList;
                }
                //check for a default options
                if (iPageModel.defaultOption != undefined) {
                    var newIPageModelList = [];
                    iPageModel.defaultOption.isDefaultOption = true;
                    //push the default option first in the list
                    newIPageModelList.push(iPageModel.defaultOption);
                    //now append all the other options have into the new list
                    var anyOptionsAreSelected = false;
                    angular.forEach(iPageModel.options, function (val) {
                        newIPageModelList.push(val);
                        if (val.isSelected == true) {
                            anyOptionsAreSelected = true;
                        }
                    });
                    if (anyOptionsAreSelected == false) {
                        newIPageModelList[0].isSelected = true;
                    }
                    //update the page to have the select all option and other options 
                    iPageModel.options = newIPageModelList;
                }
                //make sure the parentOption is set. 
                angular.forEach(iPageModel.options, function (iPageOptionModel) {
                    iPageOptionModel.parentPageOption = $scope.tempModel[0];
                })
                // add last page as parent to this new page.
                iPageModel.parentPage = $scope.pages[$scope.pages.length - 1];
                // add reference to the page option that should have been responsible for this new page.
                if (iPageModel.parentPageOption == undefined) {
                    iPageModel.parentPageOption = $scope.previousSelectedPageOptionModel;
                }
                //update the currentIPageModel to be this new page. 
                $scope.currentIPageModel = iPageModel;
                // Finally add the new page to the pages array.
                $scope.pages.push(iPageModel);
            }
            //This function is called on the back button.
            $scope.backPage = function () {
                if ($scope.currentIPageModel != undefined) {
                    $scope.pageTitle = $scope.currentIPageModel != undefined && $scope.currentIPageModel.name != '' ? $scope.currentIPageModel.name : 'Cancel';
                } else {
                    $scope.pageTitle = 'Cancel';
                }

                // get the parent option and set that as the selected value
                var previousPage = _getPreviousPage();
                var defaultOption = _getDefaultOption(previousPage);
                if (defaultOption != undefined) {
                    defaultOption.isSelected = true;
                    _setTempModel([defaultOption]);
                } else {
                    $log.warn('No default option was found for the previous page. Previous selections will retain')
                }
                // remove last page. 
                _removePage()
            }

            var _selectionCompleted_defaultOptionsCheck = function (defaultOption) {
                if ($scope.tempModel.length == 0) {
                    //there are no selected results. 
                    // if there is a default option on the current page, then we should return that. 
                    if (defaultOption != undefined) {
                        defaultOption.isSelected = true;
                        $scope.ngModel.push(defaultOption);
                    }
                }
            }

            var _selectionCompleted_selectAllCheck = function () {
                var selectAllOption = _getSelectAllOption();
                if (selectAllOption != undefined) {
                    if (selectAllOption.isSelected == true) {
                        //if yes, check to see if this is the first page or a child page
                        //if child page, select the parent page as the single selection.
                        if ($scope.pages.length > 1) {
                            // is a child page
                            // so we need to set the parent page as the only selection.
                            // because this is the same as selected everthing on the current page.
                            $scope.tempModel = [$scope.currentIPageModel.parentPageOption];
                        }
                    }
                }
            }

            var _selectionCompleted_defaultOptionsSelectedParentPageCheck = function (defaultOption) {
                if (defaultOption != undefined) {
                    if (defaultOption.selectParentOrSelect == true && defaultOption.isSelected == true) {
                        if ($scope.pages.length > 1) {
                            $scope.tempModel = [$scope.currentIPageModel.parentPageOption];
                        }
                    }
                }
            }

            //This will be called once the done button is pressed.
            $scope.selectionCompleted = function () {

                var defaultOption = _getDefaultOption();

                _selectionCompleted_defaultOptionsCheck(defaultOption);

                _selectionCompleted_selectAllCheck();

                _selectionCompleted_defaultOptionsSelectedParentPageCheck(defaultOption);




                // if the user has uncheced everything, then we should select the previous page. 
                if (_pageHasSelectedOptions() == false) {
                    if ($scope.previousSelectedPageOptionModel != undefined) {
                        _setTempModel([$scope.previousSelectedPageOptionModel]);
                    } else if ($scope.currentIPageModel.defaultOption != undefined && defaultOption.selectParentOrSelect != true) {
                        //or we select the default option
                        _setTempModel([$scope.currentIPageModel.defaultOption]);
                    }
                }

                // make sure the tempModel is not undefined. 
                if ($scope.tempModel == undefined)
                    $scope.tempModel = [];

                // double check there is no select all options in any of the selections;
                // as if the select all is checked. by default everthing else should be selected. 
                $scope.tempModel = _removeSelectAllOptionFrom($scope.tempModel);

                // Commit the changes that have happened to the model.
                $scope.ngModel = $scope.tempModel;

                //Check to see if there is a call back function , if so call it.
                if ($scope.onSelectionComplete != undefined) {
                    $scope.onSelectionComplete($scope.ngModel);
                }

                _closeDialog();
                $timeout(function () {
                    _resetScope();
                }, 500)
            }
        }
        ]
    }
}
]);
;
window.initGoogle = function () {
    btEvents.trigger(btEventType.googleMapsApiLoaded, true);
}
var googleMapsPlacesLoaded = false;

angular.module('barfootWeb').directive('btGoogleAutocomplete', [function () {
    return {
        restrict: 'E',
        scope: {
            googleKey: '@',
            country: '@',
            address: '@',
            minimumLength: '@',
            maximumLength: '@',
            placeholder: '@',
            onAddressSelect: '&'
        },
        templateUrl: '/assets/js/version3-mvc/angular/templates/bt-google-autocomplete.html',
        controller: ['$scope', '$timeout', 'cssHelperService', '$element', 'deviceHelperService',
            function ($scope, $timeout, cssHelperService, $element, deviceHelperService) {
                var vm = this;
                var sessionToken, highlightedIndex = -1, autocompleteField, autocompleteService,
                    placeService, loader, magnify, predictionsArray = [];

                var loadGoogleMapScript = function () {
                    if (googleMapsPlacesLoaded === false) {
                        var script = document.createElement('script');
                        script.src = 'https://maps.googleapis.com/maps/api/js?key=' + vm.googleKey + '&libraries=places&callback=initGoogle';

                        var scripts = document.getElementsByTagName('script')[0];
                        scripts.parentNode.insertBefore(script, scripts);
                    }
                };

                var closeResults = function () {
                    vm.queryResults = [];
                    predictionsArray = [];
                    highlightedIndex = -1;
                    $scope.$applyAsync();
                };

                var clearHighlightedResult = function (results) {
                    if (highlightedIndex !== -1) {
                        cssHelperService.removeClass(results[highlightedIndex], 'active');
                    }
                }

                var highlightResult = function (direction) {
                    var resultObjects = document.getElementsByClassName('result');
                    if (highlightedIndex < resultObjects.length) {
                        clearHighlightedResult(resultObjects);
                        if (direction === 'down' && resultObjects.length > (highlightedIndex + 1)) {
                            highlightedIndex++;
                        } else if (direction === 'up' && highlightedIndex > 0) {
                            highlightedIndex--;
                        }
                        if (highlightedIndex !== -1) {
                            cssHelperService.addClass(resultObjects[highlightedIndex], 'active');
                        }
                    }
                }

                var displayPredictionSuggestions = function (predictions, status) {
                    if (status !== google.maps.places.PlacesServiceStatus.OK) {
                        vm.queryResults = [];
                        predictionsArray = [];
                        return;
                    }
                    Array.from(predictions).forEach(function (element) {
                        vm.queryResults.push(element.description);
                        var prediction = { PlaceId: element.place_id, Description: element.description };
                        predictionsArray.push(prediction);
                    });
                    $scope.$applyAsync();
                }

                var autocomplete = function () {
                    magnify.style.visibility = 'hidden';
                    loader.style.visibility = 'visible';
                    $timeout(function () {
                        autocompleteService.getPlacePredictions({
                            input: vm.query,
                            sessiontoken: sessionToken,
                            types: ['address'],
                            componentRestrictions: { country: vm.country.toLowerCase() }
                        },
                            function (predictions, status) {
                                vm.queryResults = [];
                                predictionsArray = [];
                                displayPredictionSuggestions(predictions, status);
                                loader.style.visibility = 'hidden';
                                magnify.style.visibility = 'visible';
                            }
                        );
                    }, 300);
                };

                var loadAutocomplete = function () {
                    autocompleteField = document.getElementById('autocompleteGoogle');
                    sessionToken = new google.maps.places.AutocompleteSessionToken();
                    autocompleteService = new google.maps.places.AutocompleteService();
                    placeService = new google.maps.places.PlacesService(autocompleteField);
                }

                var googleMapScriptLoaded = function () {
                    googleMapsPlacesLoaded = true;
                    loadAutocomplete();
                    loader = $element.find('#autocompleteLoader')[0];
                    magnify = $element.find('#autocompleteMagnify')[0];
                    if (vm.address !== '') {
                        vm.query = vm.address;
                    }
                };

                vm.clickHighlightedResult = function (e, index) {
                    e.stopPropagation();
                    highlightedIndex = index;
                    if (predictionsArray.length > 0 && highlightedIndex !== -1) {
                        var predictionElement = predictionsArray[highlightedIndex];
                        vm.query = predictionElement.Description;
                        placeService.getDetails({
                            placeId: predictionElement.PlaceId,
                            sessiontoken: sessionToken,
                            fields: ['geometry']
                        },
                            function (place, status) {
                                closeResults();
                                sessionToken = new google.maps.places.AutocompleteSessionToken();
                                if (status === google.maps.places.PlacesServiceStatus.OK) {

                                    btEvents.removeListener('click', closeResults);

                                    vm.onAddressSelect({
                                        model: {
                                            latitude: place.geometry.location.lat(),
                                            longitude: place.geometry.location.lng(),
                                            address: vm.query
                                        }
                                    });
                                }
                            });
                    }
                }

                vm.inputKeyDown = function (e) {
                    if (vm.query === undefined || !vm.query || vm.query.length === 0) {
                        return;
                    }
                    switch (e.keyCode) {
                        case 40: // down arrow
                            highlightResult('down');
                            break;
                        case 38: //up arrow
                            highlightResult('up');
                            break;
                        case 13: // enter
                            if (highlightedIndex !== -1) {
                                vm.clickHighlightedResult(e, highlightedIndex);
                            }
                            break;
                        case 27: //esc
                            closeResults();
                            break;
                        case 8: //backspace
                            if (vm.query.length <= (vm.minimumLength - 1) || window.getSelection().type === 'Range') {
                                closeResults();
                            } else {
                                autocomplete();
                            }
                            break;
                        default:
                            if (vm.query.length < (vm.minimumLength - 1) || vm.query.length >= vm.maximumLength) {
                                closeResults();
                            } else {
                                autocomplete();
                            }
                            break;
                    }
                };

                vm.onFocus = function (e) {
                    if (!autocompleteField) return;
                    if (!deviceHelperService.isMobileDevice()) return;
                    autocompleteField.scrollIntoView({
                        block: 'start',
                        behaviour: 'smooth'
                    });
                };

                vm.setFocus = function () {
                    if (!autocompleteField) return;
                    autocompleteField.focus();
                };

                vm.init = function () {
                    btEvents.addListener(btEventType.googleMapsApiLoaded,
                        function (eventAgs, e) {
                            if (e === true) {
                                googleMapScriptLoaded();
                            }
                        });

                    btEvents.addListener('click', closeResults);

                    if (googleMapsPlacesLoaded) {
                        googleMapScriptLoaded();
                    } else {
                        loadGoogleMapScript();
                    }

                    $scope.$on('searchAddressChange', function (event, address) {
                        vm.query = address;
                    });
                };
            }
        ],
        bindToController: true,
        controllerAs: 'vm'
    }
}]);
;
angular.module('barfootWeb').directive('btInvisibleRecaptcha', function () {
    return {
        restrict: 'A',
        scope: {
            btRecaptchaId: '=',
            btPublicKey: '=',
            btParentFormId: '='
        },
        templateUrl: '/assets/js/version3-mvc/angular/templates/bt-invisible-recaptcha.html',
        controller: ['$scope', 'cssHelperService', 'deviceHelperService', function ($scope, cssHelperService, deviceHelperService) {

            var thisLoaded = false;

            var resetRecaptcha = function () {
                if (grecaptcha) {
                    grecaptcha.reset();
                }
            };

            var loadRecpatcha = function () {
                if (!grecaptcha || thisLoaded) {
                    return;
                }

                var writeResponse = function (response) {

                    var id = $scope.btRecaptchaId + '_response';

                    var responseElement = document.getElementById(id);
                    if (responseElement) {
                        responseElement.value = '';
                    } else {
                        responseElement = document.createElement('input');
                        responseElement.setAttribute('novalidate', 'novalidate');
                        responseElement.type = 'hidden';
                        responseElement.id = id;
                        responseElement.name = id;
                        cssHelperService.addClass(responseElement, '.' + id);
                    }
                    responseElement.value = response;
                    document.getElementById($scope.btParentFormId).appendChild(responseElement);

                    $scope.$emit('recaptchaChallengeComplete', $scope.btRecaptchaId);
                };

                var position = 'bottomright ';
                if (deviceHelperService.isMobileDevice()) {
                    position = 'inline';
                }

                // render the recapture on the page on the user control location.
                // setup the call back to call the function above
                grecaptcha.render(document.getElementById($scope.btRecaptchaId), {
                    sitekey: $scope.btPublicKey,
                    callback: writeResponse,
                    badge: position,
                    size: 'invisible'
                });

                thisLoaded = true;
            };

            var loadGoogleApi = function () {
                if (invisibleRecaptchaScriptLoaded) {
                    loadRecpatcha();
                } else {

                    $('body').append("<div class='g-recaptcha' data-sitekey='{0}'></div>"
                        .replace('{0}', $scope.btPublicKey));

                    // load api script, note callback function 'continueLoadingAngularRecaptcha'
                    var script = document.createElement('script');
                    var scripts = document.getElementsByTagName('script')[0];
                    script.src = 'https://www.google.com/recaptcha/api.js?onload=continueLoadingInvisibleRecaptcha&render=explicit';
                    scripts.parentNode.insertBefore(script, scripts);
                }
            };

            var init = function () {
                if ($scope.btRecaptchaId && $scope.btPublicKey) {
                    // attach to DOM ready and init script
                    if (document.readyState === "complete" ||
                        (document.readyState !== "loading" && !document.documentElement.doScroll)) {
                        loadGoogleApi();
                        btEvents.addListener(btEventType.RecaptchaLoaded, loadRecpatcha);
                        btEvents.addListener(btEventType.RecaptchaTriggerReset, resetRecaptcha);
                    } else {
                        document.addEventListener("DOMContentLoaded", init);
                    }
                }
            }

            $scope.$on('recaptchaChallenge', function (event, args) {
                if (args === $scope.btRecaptchaId && invisibleRecaptchaScriptLoaded) {
                    grecaptcha.execute();
                }
            });

            init();

        }]
    }
});

var invisibleRecaptchaScriptLoaded = false;

var continueLoadingInvisibleRecaptcha = function () {
    invisibleRecaptchaScriptLoaded = true;
    btEvents.trigger(btEventType.RecaptchaLoaded, {});
};
;
window.initMap = function () {
    btEvents.trigger(btEventType.googleMapsApiLoaded, true);
}

angular.module('barfootWeb').directive('btMaps', function() {
	return {
        restrict: 'E',
		templateUrl: '/assets/js/version3-mvc/angular/templates/bt-maps.html',
		scope: {
			btStartLat: '=',
			btStartLong: '=',
			btStartZoom: '=',
			btStartMinzoom: '=',
			btStartMaxzoom: '=',
			btMarkers: '=',
			btFlagDisableui: '=',
            btMapsApiKey: '=',
            btHideStreetView: '='
		},
		controller: ['$scope', '$element', '$log', 'screenService', 'btViewportService',
            function($scope, $element, $log, screenService, btViewportService) {
			
            //defaults
		    var googleScript = false;
		    var wkt = new Wkt.Wkt(); 
		    var _map = undefined;
		    var streetViewPanorama;
            var mapContainer = document.getElementById('live-map-container');

			btEvents.addListener(btEventType.onMarkerSelect, function(event, iMarkerId) {
			    angular.forEach($scope.btMarkers,
			        function(btMarker) {
			            if (btMarker.Id === iMarkerId) {
			                markerClick(btMarker.googleMarker, true);
			            }
			        });
			});
			
			var validateRequiredFields = function() {
				if ($scope.btStartLat === undefined) {
					return false;
				}
				if ($scope.btStartLong === undefined) {
					return false;
				}

				return true;
			}

			var getStartZoom = function() {
				return $scope.btStartZoom === undefined ? 12 : $scope.btStartZoom;
			}

			var getMinZoom = function() {
				return $scope.btStartMinzoom === undefined ? 10 : $scope.btStartMinzoom;
			}

			var getMaxZoom = function() {
				return $scope.btStartMaxzoom === undefined ? 25 : $scope.btStartMaxzoom;
			}

			var haveMarkers = function() {
				if ($scope.btMarkers !== undefined) {
					return $scope.btMarkers.length > 0;
				}
				return false;
			}
            
			var getDisabledUiOption = function() {
				return $scope.btFlagDisableUi === undefined ? false : $scope.btFlagDisableUi;
			}

		    var customMapControl = function(title, tooltip, smallMap) {

		        var paddingVertical = '4px';
		        var paddingHorizontal = '15px';
                if (smallMap) {
                    paddingVertical = '2px';
                    paddingHorizontal = '4px';
                }

		        // Set CSS for the control border.
		        var controlUI = document.createElement('div');
		        controlUI.style.cursor = 'pointer';
		        controlUI.style.textAlign = 'center';
		        controlUI.style.display = 'inline-block';
		        controlUI.style.paddingTop = paddingVertical;
		        controlUI.style.paddingBottom = paddingVertical;
                controlUI.style.paddingRight = paddingHorizontal;
		        controlUI.style.paddingLeft = paddingHorizontal;
		        controlUI.title = tooltip;

		        // Set CSS for the control interior.
		        var controlText = document.createElement('div');
		        controlText.style.color = 'rgb(25,25,25)';
		        controlText.style.fontFamily = tooltip;
		        controlText.style.fontSize = '16px';
		        controlText.style.lineHeight = '25px';
		        controlText.style.paddingLeft = '5px';
		        controlText.style.paddingRight = '5px';
		        controlText.style.fontFamily = 'Roboto, sans-serif';
		        controlText.style.fontWeight = '300';
		        controlText.style.fontSize = '14px';
		        controlText.innerHTML = title;
		        controlUI.appendChild(controlText);

		        return controlUI;
		    };

		    var setCustomMapControlInActive = function(control) {
                control.style.backgroundColor = '#fff';
		        control.children[0].style.fontWeight = '300';
		    };

		    var setCustomMapControlActive = function(control) {
		        control.style.backgroundColor = '#e6e6e6';
		        control.children[0].style.fontWeight = '500';
		    };

		    var setCustomMapControlsInActive = function(containerElement) {
                for (var i = 0; i < containerElement.children.length; i++) {
                    setCustomMapControlInActive(containerElement.children[i]);
                }
		    };

		    var setCustomMapControlActiveStyle = function(control) {
                if (control.style.backgroundColor === '#fff') {
                    setCustomMapControlInActive(control);
                } else {
                    setCustomMapControlActive(control);
                }
		    };

		    var setCustomMapControls = function() {

		        var smallMap = (screenService().availWidth <= 410);

		        var parentDiv = document.createElement('div');
		        parentDiv.style.backgroundColor = '#fff';

		        if (smallMap) {
		            parentDiv.style.marginTop = '10px';
		            parentDiv.style.marginLeft = '10px';
		        } else {
		            parentDiv.style.marginBottom = '18px';
		        }

		        parentDiv.style.boxShadow = '0 0 4px 0 rgba(0, 0, 0, .25)';

		        var mapControl = customMapControl('Map', 'Show street map', smallMap);
		        mapControl.style.borderBottomLeftRadius = '2px';
		        mapControl.style.borderTopLeftRadius = '2px';
		        mapControl.style.borderRight = '1px solid #f4f4f4';
                mapControl.addEventListener('click', function() {
                    _map.setMapTypeId(google.maps.MapTypeId.ROADMAP);
                    setCustomMapControlsInActive(parentDiv);
                    setCustomMapControlActiveStyle(mapControl);
                });
		        setCustomMapControlActive(mapControl);
                
		        var satelliteControl = customMapControl('Satellite', 'Show satellite imagery', smallMap);
		        satelliteControl.style.borderBottomRightRadius = '2px';
		        satelliteControl.style.borderTopRightRadius = '2px';
		        satelliteControl.style.borderLeft = '1px solid #f4f4f4';
		        satelliteControl.addEventListener('click', function() {
		            _map.setMapTypeId(google.maps.MapTypeId.SATELLITE);
		            setCustomMapControlsInActive(parentDiv);
		            setCustomMapControlActiveStyle(satelliteControl);
		        });

                parentDiv.appendChild(mapControl);

                if (!$scope.btHideStreetView || $scope.btHideStreetView === false) {
		            var streetViewControl = customMapControl('Streetview', 'Show the street view', smallMap);
		            streetViewControl.addEventListener('click', function () {
		                streetViewPanorama.setVisible(!streetViewPanorama.getVisible());
                    });
		            parentDiv.appendChild(streetViewControl);
                }

		        parentDiv.appendChild(satelliteControl);

		        var controlPosition = smallMap ? google.maps.ControlPosition.TOP_LEFT : google.maps.ControlPosition.BOTTOM_CENTER;
		        _map.controls[controlPosition].push(parentDiv);
		    };
			
			var initGoogleMap = function() {

				var defaultCenter = new google.maps.LatLng($scope.btStartLat, $scope.btStartLong);
				var min = getMinZoom();
				var max = getMaxZoom();

				var configuration = {
					center: defaultCenter,
					minZoom: min,
					maxZoom: max,
					disableDefaultUI: getDisabledUiOption(),
					zoom: getStartZoom(),
					scrollwheel: false,
					fullscreenControl: true,
					streetViewControl: false,
					mapTypeControl: false
				}
			    _map = new google.maps.Map(mapContainer, configuration);

			    streetViewPanorama = _map.getStreetView();
                if (streetViewPanorama) {
			        streetViewPanorama.setPosition(defaultCenter);
			        streetViewPanorama.setOptions({
                        zoomControl: false, 
                        zoom: 0
			        });
                }

			    setCustomMapControls();
			}

			var generatePolygon = function (GeoPolygon){
				wkt.read(GeoPolygon);
				return wkt.toObject({
					strokeColor: '#005db3',
					strokeOpacity: 0.8,
					strokeWeight: 2,
					fillColor: '#000',
					fillOpacity: 0.10
				});
			}

		    var createMarker = function(btMarker) {
		        var markerConfiguration = {
		            position: new google.maps.LatLng(btMarker.Latitude, btMarker.Longitude),
		            icon: btMarker.Icon
		        };

		        var googleMarker = new google.maps.Marker(markerConfiguration);
		        googleMarker.activeIcon = btMarker.IconActive;
		        googleMarker.inActiveIcon = btMarker.Icon;
		        googleMarker.id = btMarker.Id;

		        if (btMarker.GeoPolygon) {
		            googleMarker.polygon = generatePolygon(btMarker.GeoPolygon);
		        }

		        if (btMarker.InfoWindowHtml) {
		            googleMarker.infoWindow = new google.maps.InfoWindow({
		                content: btMarker.InfoWindowHtml
		            });
		        }

		        return googleMarker;
		    };

		    var markerClick = function(googleMarker, eventRaised) {
		        // handle active state
		        if (googleMarker.isActive === undefined) {
		            googleMarker.isActive = true;
		        } else {
		            googleMarker.isActive = !googleMarker.isActive;
		        }

		        // handle icon
		        googleMarker.isActive && googleMarker.activeIcon 
                    ? googleMarker.setIcon(googleMarker.activeIcon) 
                    : googleMarker.setIcon(googleMarker.inActiveIcon);
                                    
		        // handle info window
		        if (googleMarker.infoWindow) {
		            if (googleMarker.isActive) {
		                googleMarker.infoWindow.open(_map, googleMarker);
		            } else {
		                googleMarker.infoWindow.close();
		            }
		        }
                                    
		        // handle polgyons
		        if (googleMarker.polygon) {
		            if (googleMarker.isActive) {
		                googleMarker.polygon.setMap(_map);
		            } else {
		                googleMarker.polygon.setMap(null);
		            }
		        }

                // handle centering in small viewports
                if (googleMarker.isActive && eventRaised && screenService().availWidth <= 768) {
                    _map.panTo(googleMarker.getPosition());
                }
		    };

		    var initGoogleMapMarkers = function() {

		        if (!$scope.btMarkers) return;

		        angular.forEach($scope.btMarkers,
		            function(iMarker) {

		                var googleMarker = createMarker(iMarker);
		                iMarker.googleMarker = googleMarker;

                        // Handle click events
		                googleMarker.addListener('click',
		                    function(e) {
		                        btEvents.trigger(btEventType.onMarkerSelect, this.id);
		                    });

		                if (iMarker.isCenter) {
		                    _map.setCenter(new google.maps.LatLng(iMarker.Latitude, iMarker.Longitude));
		                }

		                googleMarker.setMap(_map);

		                if (iMarker.isSelected) {
		                    google.maps.event.trigger(googleMarker, 'click');
		                }

		            });

		    };

            var loadMapWithViewCheck = function () {

                if(_map !== undefined) return;
                    
                if(!btViewportService.visibleInViewport(mapContainer, 100)) return;

                initGoogleMap();
                if (haveMarkers()) {
                    initGoogleMapMarkers();
                }
            }

			var loadMapDialog = function () {

			    loadMapWithViewCheck();

                // Event
                window.addEventListener('scroll', function (e) {
                    loadMapWithViewCheck();
                });
			}

			var loadGoogleMapScript = function() {
				//check to see that the script is not already loaded. 
				if (googleScript === false) {
				    var script = document.createElement('script'),
				        scripts = document.getElementsByTagName('script')[0];
				    script.src = 'https://maps.googleapis.com/maps/api/js?v=3.34&key=' + $scope.btMapsApiKey + '&callback=initMap';
				    scripts.parentNode.insertBefore(script, scripts);
				} else {
					loadMapDialog();
				}
			}

			var init = function() {

                if (!validateRequiredFields()) {
                    console.warn('Missing latitude and longitude.');
                    return;
                }

                if (!$scope.btMapsApiKey) {
                    console.warn('Google maps API key not set.');
                    return;
                }

			    btEvents.addListener(btEventType.googleMapsApiLoaded,
			        function(eventAgs, e) {
			            if (e === true) {
			                googleScript = true;
			                loadMapDialog();
			            }
			        });
			    
			    loadGoogleMapScript();
			}

			init();
		}]
	}
});
;
angular.module('barfootWeb').controller('modalPopUpController', [
    function () {
        var vm = this;

        vm.toggle = function () {
            if (!vm.visible) {
                document.body.style.overflowY = 'hidden';
                vm.visible = true;
            }
        }
    }]);

angular.module('barfootWeb').directive('btModalPopup', [function () {
    return {
        restrict: 'E',
        scope: {
            link: '=',
            heading: '=',
            selectText: '=',
            closeText: '=',
            text: '=',
            visible: '=',
            onPrimaryChange: '&',
            onSecondaryChange: '&'
        },
        templateUrl: '/assets/js/version3-mvc/angular/templates/bt-modal-popup.html',
        controller: 'modalPopUpController',
        bindToController: true,
        controllerAs: 'vm'
    }
}]);
;
angular.module('barfootWeb').controller('btOptionsSelectorController', [
    function () {
        var vm = this;
    }]);

angular.module('barfootWeb').directive('btOptionSelector', [function() {
    return {
        restrict:'E',
        scope: {
            options: '=',
            onOptionChange: '&',
            groupName: '='
        },
        templateUrl:'/assets/js/version3-mvc/angular/templates/bt-option-selector.html',
        controller: 'btOptionsSelectorController',
        bindToController: true,
        controllerAs: 'vm'
    }
}]);
;
angular.module("barfootWeb").directive("btRecaptcha", function() {
	return {
        restrict: 'A',
		scope: {
			btRecaptchaId: '=',
			btPublicKey: '=',
            btParentFormId: '=',
		},
		controller: ['$scope', 'cssHelperService', function($scope, cssHelperService) {

		    var thisLoaded = false;

		    var resetRecaptcha = function() {
                if (grecaptcha) {
                    grecaptcha.reset();
                }
		    };

		    var loadRecpatcha = function() {
                if (!grecaptcha || thisLoaded) {
                    return;
                }

		        var writeResponse = function(response) {

		            var id = $scope.btRecaptchaId + '_response';

		            var responseElement = document.getElementById(id);
                    if (responseElement) {
                        responseElement.value = '';
                    } else {
                        responseElement = document.createElement('input');
                        responseElement.setAttribute('novalidate', 'novalidate');
                        responseElement.type = 'hidden';
                        responseElement.id = id;
                        responseElement.name = id;
                        cssHelperService.addClass(responseElement, '.' + id);
                    }
		            responseElement.value = response;
		            document.getElementById($scope.btParentFormId).appendChild(responseElement);
		        };

		        // render the recapture on the page on the user control location.
		        // setup the call back to call a dynamically create function
		        grecaptcha.render(document.getElementById($scope.btRecaptchaId), {
		            sitekey: $scope.btPublicKey,
		            callback: writeResponse
		        });

		        thisLoaded = true;
		    };

		    var loadGoogleApi = function() {
		        if (recaptchaScriptLoaded) {
		            loadRecpatcha();
		        } else {
		            $('body').append("<div class='g-recaptcha' data-sitekey='{0}'></div>".replace('{0}', $scope.btPublicKey));

                    // load api script, note callback function 'continueLoadingAngularRecaptcha'
		            var script = document.createElement('script');
                    var scripts = document.getElementsByTagName('script')[0];
		            script.src = 'https://www.google.com/recaptcha/api.js?onload=continueLoadingAngularRecaptcha&render=explicit';
		            scripts.parentNode.insertBefore(script, scripts);
		        }
		    };

            var init = function() {
                loadGoogleApi();
                btEvents.addListener(btEventType.RecaptchaLoaded, loadRecpatcha);
                btEvents.addListener(btEventType.RecaptchaTriggerReset, resetRecaptcha);
            };

		    if ($scope.btRecaptchaId && $scope.btPublicKey) {
		        // attach to DOM ready and init script
		        if (document.readyState === "complete" ||
		            (document.readyState !== "loading" && !document.documentElement.doScroll)) {
		            init();
		        } else {
		            document.addEventListener("DOMContentLoaded", init);
		        }
		    }

		}]
	}
});

var recaptchaScriptLoaded = false;

var continueLoadingAngularRecaptcha = function() {
    recaptchaScriptLoaded = true;
    btEvents.trigger(btEventType.RecaptchaLoaded, {});
};;
angular.module('barfootWeb').directive('btStaticMap', [function () {
    var mapContainer;
    return {
        restrict: 'E',
        scope: {
            key: '=',
            zoom: '=',
            height: '=',
            width: '=',
            markers: '=',
            centre: '=',
            mapType: '=',
            lat: '=',
            long: '=',
            scale: '=',
            altText: '='
        },
        link: function (scope, element) {
            mapContainer = element[0].children[0];
        },
        templateUrl: '/assets/js/version3-mvc/angular/templates/bt-static-map.html',
        controller: ['$scope', function ($scope) {

            var vm = this;
            var existingMapData = {};

            var buildMarker = function (colour, label, lat, long) {
                var format = 'color:{colour}|label:{label}|{lat},{long}';
                var url = format
                    .replace('{colour}', colour)
                    .replace('{label}', label)
                    .replace('{lat}', lat)
                    .replace('{long}', long);
                return encodeURIComponent(url);
            };

            var defaultOptions = {
                zoom: 13,
                height: 300,
                width: 600,
                centre: '34 Shortland Street, Auckland, New Zealand',
                mapType: 'roadmap',
                scale: 1
            };

            var newMap = function (mapData) {

                if(existingMapData.centre === undefined) return true;

                if (mapData.centre === existingMapData.centre
                    && mapData.lat === existingMapData.lat
                    && mapData.long === existingMapData.long)
                {
                    return false;
                }

                return true;
            };

            var buildMap = function (mapData) {

                if(!mapData || !mapData.centre || !newMap(mapData)) return;

                existingMapData = mapData;

                var url = 'https://maps.googleapis.com/maps/api/staticmap?center={centre}&zoom={zoom}&size={size}&mapType={mapType}&key={key}&scale={scale}';
                var centre = mapData.centre ? encodeURIComponent(mapData.centre) : encodeURIComponent(defaultOptions.centre);
                var zoom = mapData.zoom ? mapData.zoom : defaultOptions.zoom;
                var scale = mapData.scale ? mapData.scale : defaultOptions.scale;

                var height = mapData.height ? mapData.height : defaultOptions.height;
                var width = mapData.width ? mapData.width : defaultOptions.width;
                var size = width + 'x' + height;

                var mapType = mapData.mapType ? mapData.mapType : defaultOptions.mapType;
                
                var markers = '';
                if (mapData.markers) {
                    for (var i = 0; i < mapData.markers.length; i++) {
                        var m = mapData.markers[i];
                        markers += '&markers=' + buildMarker(m.colour, m.label, m.lat, m.long);
                    }
                }
                
                // Build image URL
                url = url
                    .replace('{centre}', centre)
                    .replace('{zoom}', zoom)
                    .replace('{size}', size)
                    .replace('{mapType}', mapType)
                    .replace('{key}', mapData.key)
                    .replace('{scale}', scale);
                if (markers) {
                    url += markers;
                };
                
                if (mapContainer.children.length > 0) {
                    mapContainer.removeChild(mapContainer.children[0]);
                }

                var image = new Image();
                image.src = url;
                image.alt = mapData.altText;
                mapContainer.appendChild(image);
            }

            var init = function () {
                if(!vm.centre) return;

                buildMap({
                    key: vm.key,
                    zoom: vm.zoom, 
                    height: vm.height,
                    width: vm.width,
                    markers: vm.markers,
                    centre: vm.centre,
                    mapType: vm.mapType,
                    lat: vm.lat,
                    long: vm.long,
                    scale: vm.scale,
                    altText: vm.altText
                });
            };

            init();

            $scope.$on('locationChange', function ($event, mapData) {
                buildMap(mapData);
            });
        }],
        bindToController: true,
        controllerAs: 'vm'
    }
}]);
;
angular.module('barfootWeb').directive('ngHtmlCompile', ["$compile", function ($compile) {
        return {
            restrict: 'A',
            link: function (scope, element, attrs) {
                scope.$watch(attrs.ngHtmlCompile, function (newValue, oldValue) {
                    element.html(newValue);
                    $compile(element.contents())(scope);
                });
            }
        }
}]);
;
angular.module('barfootWeb').directive('btBranchStaff', [function () {
    return {
        restrict: 'E',
        scope: {
            tabData: '='
        },
        templateUrl: "/assets/js/version3-mvc/angular/templates/branch/bt-branch-staff.html"
    }
}]);
;
angular.module('barfootWeb').directive('btAgentFilters', [function () {
    return {
        restrict: 'E',
        scope: {
            branches: '=',
            placeholder: '@',
            onSearch: '&'
        },
        templateUrl: "/assets/js/version3-mvc/angular/templates/find-us/bt-agent-filters.html",
        controller: ['$timeout', '$element', 'deviceHelperService',                                                                                                                                                                                                                                                                  
            function ($timeout, $element, deviceHelperService) {
                var vm = this;
                var autocompleteField, loader, magnify;

                vm.autocomplete = function () {

                    if (!vm.query) vm.query = '';
                        
                    if (!vm.selectedBranch) {
                        return;
                    }

                    magnify.style.visibility = 'hidden';
                    loader.style.visibility = 'visible';
                    $timeout(function () {
                        vm.onSearch({
                            model: {
                                name: vm.query,
                                branchApiRef: vm.selectedBranch.Branch_Ref_No
                            }
                        });
                    }, 300);
                };

                vm.change = function(e) {
                    vm.autocomplete();
                };

                vm.onFocus = function (e) {
                    if (!autocompleteField) return;
                    if (!deviceHelperService.isMobileDevice()) return;
                    autocompleteField.scrollIntoView({
                        block: 'start',
                        behaviour: 'smooth'
                    });
                };

                vm.setFocus = function () {
                    if (!autocompleteField) return;
                    autocompleteField.focus();
                };

                vm.init = function () {
                    loader = $element.find('#autocompleteLoader')[0];
                    magnify = $element.find('#autocompleteMagnify')[0];
                    btEvents.addListener(btEventType.HideAutocompleteLoader, function (e) {
                        $element.find('#autocompleteLoader')[0].style.visibility = 'hidden';
                        $element.find('#autocompleteMagnify')[0].style.visibility = 'visible';
                    });
                    var elements = document.querySelectorAll('.find-us-filters');
                    if (Stickyfill && elements) {
                        Stickyfill.add(elements);
                    }
                };
            }
        ],
        bindToController: true,
        controllerAs: 'vm'
    }
}]);
;
angular.module('barfootWeb').directive('btAgentResults', [function () {
    return {
        restrict: 'E',
        scope: {
            tabData: '=',
            imageSize: '=',
            defaultPhoto: '=',
            noSearchResultImage: '='
        },
        templateUrl: "/assets/js/version3-mvc/angular/templates/find-us/bt-agent-results.html",
        controller: [function () {}]
    }
}]);
;
angular.module('barfootWeb').directive('btAppraisalAddressDisplay', [function () {
    return {
        restrict: 'E',
        scope: {
            key: '=',
            stepComplete: '&',
            previousStep: '&',
            stepName: '='
        },
        templateUrl: '/assets/js/version3-mvc/angular/templates/form/bt-appraisal-address-display.html',
        controller: ['appraisalService', 'deviceHelperService', '$scope', function (appraisalService, deviceHelperService, $scope) {
            var vm = this;
            var scale;
            var zoom;

            if (deviceHelperService.isMobileDevice()) {
                scale = 2;
                zoom = 18;
            } else {
                scale = 1;
                zoom = 16;
            }

            var init = function () {

                var data = appraisalService.get();
                vm.address = data.address;

                var mapData = {
                    key: vm.key,
                    zoom: zoom, 
                    height: 300,
                    width: 600,
                    markers: [{
                        colour: 'red',
                        label: 'A',
                        lat: data.latitude,
                        long: data.longitude
                    }],
                    centre: data.address,
                    lat: data.latitude,
                    long: data.longitude,
                    scale: scale,
                    altText: data.address
                };

                $scope.$broadcast('locationChange', mapData);
            };

            $scope.$on('appraisalStepChange', function (event, stepName) {
                if(stepName === vm.stepName) init();
            });

        }],
        bindToController: true,
        controllerAs: 'vm'
    }
}]);
;
angular.module('barfootWeb').directive('btAppraisalAddress', [function () {
    return {
        restrict: 'E',
        scope: {
            agent: '=',
            googleKey: '=',
            manualAddressClick: '&',
            stepComplete: '&',
            stepName: '='
        },
        templateUrl: '/assets/js/version3-mvc/angular/templates/form/bt-appraisal-address.html',
        controller: ['appraisalService', '$scope', function (appraisalService, $scope) {
            var vm = this;

            vm.addressSelected = function (model) {
                if(!model) return;
                var data = appraisalService.get();
                data.address = model.address;
                data.latitude = model.latitude;
                data.longitude = model.longitude;
                data.manualAddress = false;
                appraisalService.set(data);

                if(data.address && data.latitude && data.longitude) vm.stepComplete();
            }

            var clearInput = function () {
                $scope.$broadcast('searchAddressChange', '');
            };

            $scope.$on('appraisalStepChange', function (event, stepName) {
                if(stepName === vm.stepName) clearInput();
            });

        }],
        bindToController: true,
        controllerAs: 'vm'
    }
}]);
;
angular.module('barfootWeb').directive('btAppraisalManualAddress', [function () {
    return {
        restrict: 'E',
        scope: {
            agent: '=',
            stepComplete: '&',
            previousStep: '&'
        },
        templateUrl: '/assets/js/version3-mvc/angular/templates/form/bt-appraisal-manual-address.html',
        controller: ['appraisalService', function (appraisalService) {
            var vm = this;

            vm.submit = function (form) {

                if(form.$invalid) return;
                
                var data = appraisalService.get();
                data.address = vm.address;
                data.city = vm.city;
                data.manualAddress = true;
                appraisalService.set(data);
                vm.stepComplete();
            }

        }],
        bindToController: true,
        controllerAs: 'vm'
    }
}]);
;
angular.module('barfootWeb').directive('btAppraisalMessage', [function () {
    return {
        restrict: 'E',
        scope: {
            agent: '=',
            invisibleRecaptchaKey: '=',
            recaptchaElementId: '=',
            stepComplete: '&',
            previousStep: '&',
            stepName: '='
        },
        templateUrl: '/assets/js/version3-mvc/angular/templates/form/bt-appraisal-message.html',
        controller: ['appraisalService', '$scope', function (appraisalService, $scope) {
            var vm = this;

            var complete = function (success) {
                var data = appraisalService.get();
                data.success = success;
                appraisalService.set(data);

                vm.submitting = false;
                vm.stepComplete();
            };

            var getRecaptchaResponse = function () {
                
                var id = vm.recaptchaElementId + '_response';
                var responseElement = document.getElementById(id);
                if(!responseElement) return false;
                
                var response = responseElement.value;
                if(!response) return false;

                var data = appraisalService.get();
                data.recaptchaResponse = response;
                appraisalService.set(data);
                return true;
            };

            var submitAfterRecaptcha = function () {
                if (!getRecaptchaResponse()) {
                    vm.invalidRecaptcha = true;
                    return;
                }
                
                var data = appraisalService.get();
                data.message = vm.message;
                appraisalService.set(data);
                
                appraisalService.sendAppraisal().then(function () {
                    complete(true);
                }, function () {
                    complete(false);
                });
            }

            vm.submit = function (form) {
                vm.invalidRecaptcha = false;
                if (form.$invalid) return;
                vm.submitting = true;
                $scope.$broadcast('recaptchaChallenge', vm.recaptchaElementId);
            };

            $scope.$on('recaptchaChallengeComplete', function (event, args) {
                if (args === vm.recaptchaElementId) {
                    submitAfterRecaptcha();
                };
            });
        }],
        bindToController: true,
        controllerAs: 'vm'
    }
}]);
;
angular.module('barfootWeb').directive('btAppraisalResult', [function () {
    return {
        restrict: 'E',
        scope: {
            agent: '=',
            stepComplete: '&',
            stepName: '='
        },
        templateUrl: '/assets/js/version3-mvc/angular/templates/form/bt-appraisal-result.html',
        controller: ['appraisalService', 'btTextService', '$scope', function (appraisalService, btTextService, $scope) {
            var vm = this;

            vm.submit = function () {
                var data = appraisalService.get();
                if (data.success) {
                    vm.stepComplete();
                } else {
                    window.location = vm.agent.AgentUrl + '#contact';
                }
            }

            var init = function () {
                var data = appraisalService.get();

                if (data.success) {
                    vm.title = 'Thanks for the request ' + btTextService.capitaliseFirstLetter(data.firstName);
                    vm.submitMessage = 'We\'ve emailed you confirmation and I\'ll be in touch shortly to discuss your property.';
                    vm.buttonText = 'Continue';
                    vm.showTick = true;
                }
                else {
                    vm.title = 'Sorry ' + btTextService.capitaliseFirstLetter(data.firstName) + ', there was an error';
                    vm.submitMessage = 'You\'re request could not be submitted correctly. Please try again later or contact me directly using the button below.';
                    vm.buttonText = 'Contact me';
                    vm.showTick = false;
                }
            }

            $scope.$on('appraisalStepChange', function (event, stepName) {
                if(stepName === vm.stepName) init();
            });

        }],
        bindToController: true,
        controllerAs: 'vm'
    }
}]);
;
angular.module('barfootWeb').directive('btAppraisalSteps', [function () {
    return {
        restrict: 'E',
        scope: {
            stepIndex: '='
        },
        templateUrl: '/assets/js/version3-mvc/angular/templates/form/bt-appraisal-steps.html',
        controller: [ function () {
            var vm = this;
        }],
        bindToController: true,
        controllerAs: 'vm'
    }
}]);
;
angular.module('barfootWeb').directive('btAppraisalUserDetails', [function () {
    return {
        restrict: 'E',
        scope: {
            agent: '=',
            stepComplete: '&',
            previousStep: '&'
        },
        templateUrl: '/assets/js/version3-mvc/angular/templates/form/bt-appraisal-user-details.html',
        controller: ['appraisalService', function (appraisalService) {
            var vm = this;

            vm.submit = function (form) {

                if(form.$invalid) return;

                var data = appraisalService.get();

                data.firstName = vm.firstName;
                data.lastName = vm.lastName;
                data.email = vm.email;
                data.phone = vm.phone;

                appraisalService.set(data);

                vm.stepComplete();
            }
        }],
        bindToController: true,
        controllerAs: 'vm'
    }
}]);
;
angular.module('barfootWeb').directive('btAgentInfoImage', [function () {
    return {
        restrict: 'E',
        scope: {
            agent: '=',
            displayTick: '='
        },
        templateUrl: '/assets/js/version3-mvc/angular/templates/profile/bt-agent-info-image.html',
        controller: function () {
            var vm = this;

            vm.openAgentInformation = function () {
                vm.displayAgentInformation = true;
            }

            vm.closeAgentInformation = function () {
                vm.displayAgentInformation = false;
            }
        },
        bindToController: true,
        controllerAs: 'vm'
    }
}]);
;
angular.module('barfootWeb').controller('btContactEnquiryController', ['dataLayerService',
    function (dataLayerService) {
        var vm = this;
        vm.link = '';
        vm.selectText = '';
        vm.closeText = 'Close';
        vm.text = '<table>';
        for (var i = 0; i < vm.numbers.length; i++) {
            vm.text += '<tr><td>' 
                + vm.numbers[i].Key + '</td><td><a href=tel:"' 
                + vm.numbers[i].Value.replace(/ /g, '') 
                + '" onclick="javascript:btEvents.trigger(btEventType.TelLinkClick, {label: \'' + vm.gtmData.label + '\', pageType: \'' + vm.gtmData.pageType + '\'})">' 
                + vm.numbers[i].Value + '</a></td></tr>';
        }
        vm.text += "</table>";
    }]);

angular.module('barfootWeb').directive('btContactEnquiry', [function () {
    return {
        restrict: 'E',
        scope: {
            visible: '=',
            heading: '=',
            numbers: '=',
            onSecondaryChange: '&',
            gtmData: '='
        },
        templateUrl: "/assets/js/version3-mvc/angular/templates/bt-modal-popup-wrapper.html",
        controller: 'btContactEnquiryController',
        bindToController: true,
        controllerAs: 'vm'
    }
}]);
;
angular.module('barfootWeb').directive('btProfileTabs', [function () {
    return {
        restrict: 'E',
        scope: {
            tabData: '=',
            onTabClick: '&'
        },
        templateUrl: "/assets/js/version3-mvc/angular/templates/profile/bt-profile-tabs.html"
    }
}]);
;
angular.module('barfootWeb').directive('btProfileViewMore', [function () {
    return {
        restrict: 'E',
        scope: {
            loading: '=',
            show: '=',
            onClick: '&'
        },
        templateUrl: "/assets/js/version3-mvc/angular/templates/profile/bt-profile-view-more.html"
    }
}]);
;
angular.module('barfootWeb').controller('btDocumentEnquiryController', [
    function () {
        var vm = this;
        vm.link = '';
        vm.selectText = 'Continue';
        vm.closeText = 'No thanks';

        var names = 'the sales agent';
        var namesArray = vm.agentNames.split(',');
        if (namesArray.length > 0) {
            names = namesArray[0];
        }

        if (namesArray.length > 1) {
            names += ' and ' + namesArray[1];
        }
        vm.text = 'By viewing these documents I agree to my email address being shared with ' + names +'.';
    }]);

angular.module('barfootWeb').directive('btDocumentEnquiry', [function () {
    return {
        restrict: 'E',
        scope: {
            visible: '=',
            heading: '=',
            agentNames: '=',
            onPrimaryChange: '&',
            onSecondaryChange: '&'
        },
        templateUrl: "/assets/js/version3-mvc/angular/templates/bt-modal-popup-wrapper.html",
        controller: 'btDocumentEnquiryController',
        bindToController: true,
        controllerAs: 'vm'
    }
}]);
;
angular.module('barfootWeb').controller('btPriceEnquiryController', [
    function () {
        var vm = this;
        vm.link = 'price information';
        vm.selectText = 'Contact';
        vm.closeText = 'Close';
        vm.text = 'We show sold price once a sale is settled. For pricing information in your area, contact the salesperson.';
    }]);

angular.module('barfootWeb').directive('btPriceEnquiry', [function () {
    return {
        restrict: 'E',
        scope: {
            visible: '=',
            heading: '=',
            onPrimaryChange: '&',
            onSecondaryChange: '&'
        },
        templateUrl: "/assets/js/version3-mvc/angular/templates/bt-modal-popup-wrapper.html",
        controller: 'btPriceEnquiryController',
        bindToController: true,
        controllerAs: 'vm'
    }
}]);
;
angular.module('barfootWeb').directive('btAutocompleteBranchResult', [function() {
    return {
        restrict:'E',
        scope: {
            result: '=',
            onResultClick: '&'
        },
        link: function(scope) {
            var result = scope.result;

            scope.result.Title = result.Description;
            scope.result.Description = result.Address;
            scope.result.TestAttr = 'branch-' + (result.Title.replace(' ', '-').toLowerCase());
            scope.result.Url = window.location.protocol + '//' + window.location.host + '/branches/' + result.Title.toLowerCase();
        },
        templateUrl:'/assets/js/version3-mvc/angular/templates/search-panel/bt-autocomplete-branch-result.html'
    }
}]);
;
angular.module('barfootWeb').directive('btAutocompleteListingResult', [function() {
    return {
        restrict:'E',
        scope: {
            result: '=',
            onResultClick: '&'
        },
        link: function(scope) {
            var result = scope.result;

            scope.result.Title = result.Description;
            scope.result.Description = result.Region;
            scope.result.TestAttr = 'listings-' + result.Ref;
            scope.result.Url = window.location.protocol + '//' + window.location.host + '/' + result.RelativeUrl;
            scope.result.Image = result.Image + '?width=250&height=172&mode=crop&quality=70';
        },
        templateUrl:'/assets/js/version3-mvc/angular/templates/search-panel/bt-autocomplete-listing-result.html'
    }
}]);
;
angular.module('barfootWeb').directive('btAutocompleteRegionResult', [function() {
    return {
        restrict:'E',
        scope: {
            result: '=',
            onResultClick: '&'
        },
        link: function(scope) {
            var result = scope.result;

            var title = result.Description + ' &bull; ' + (result.ListingCount > 0 ? result.ListingCount + ' properties' : 'No properties');
            var parser = new DOMParser;
            scope.result.Tag = result.Description;
            scope.result.Type = 'Regions';
            scope.result.Title = parser.parseFromString(title, "text/html").body.textContent;
            scope.result.Description = (result.SuburbCount > 0 ? 'Contains ' + result.SuburbCount : '') + ' suburbs';
            scope.result.TestAttr = 'regions-' + (result.Description.replace(' ', '-').toLowerCase());
        },
        templateUrl:'/assets/js/version3-mvc/angular/templates/search-panel/bt-autocomplete-region-result.html'
    }
}]);
;
angular.module('barfootWeb').directive('btAutocompleteSoldListingResult', [function() {
    return {
        restrict:'E',
        scope: {
            result: '=',
            onResultClick: '&'
        },
        link: function(scope) {
            var result = scope.result;

            var description = '';
            if (result.DateSoldLabel) {
                description += result.DateSoldLabel + ' &bull; ';
            }
            description += result.Region;
            var parser = new DOMParser;

            scope.result.Title = result.Description;
            scope.result.Description = parser.parseFromString(description, "text/html").body.textContent;
            scope.result.TestAttr = 'soldlistings-' + result.Ref;
            scope.result.Url = window.location.protocol + '//' + window.location.host + '/' + result.RelativeUrl;
            scope.result.Image = result.Image + '?width=250&height=172&mode=crop&quality=70';
        },
        templateUrl:'/assets/js/version3-mvc/angular/templates/search-panel/bt-autocomplete-soldlisting-result.html'
    }
}]);
;
angular.module('barfootWeb').directive('btAutocompleteStaffResult', ['btSearchConstants', function (btSearchConstants) {
    return {
        restrict:'E',
        scope: {
            result: '=',
            onResultClick: '&'
        },
        link: function(scope) {
            var result = scope.result;

            scope.result.Title = result.Name;
            scope.result.Description = result.Position + ', ' + result.BranchName + ' branch';
            scope.result.TestAttr = 'staff-' + result.User;
            scope.result.Url = window.location.protocol + '//' + window.location.host + '/' + btSearchConstants.staffUrl + '/' + result.User;
            scope.result.Image = result.Image + '?width=100&height=100&mode=crop&quality=70&anchor=topcenter';
        },
        templateUrl:'/assets/js/version3-mvc/angular/templates/search-panel/bt-autocomplete-staff-result.html'
    }
}]);
;
angular.module('barfootWeb').directive('btAutocompleteSuburbResult', [function() {
	return {
		restrict:'E',
        scope: {
          result: '=',
          onResultClick: '&'
        },
        link: function(scope) {
            var title = scope.result.Description + ' &bull; ' + (scope.result.ListingCount > 0 ? scope.result.ListingCount + ' properties' : 'No properties');
            var parser = new DOMParser;
            scope.result.Title = parser.parseFromString(title, "text/html").body.textContent;
            scope.result.TestAttr = 'suburbs-' + (scope.result.Description.replace(' ', '-').toLowerCase());
            scope.result.Tag = scope.result.Description;
            scope.result.Type = 'Suburbs';
        },
        templateUrl:'/assets/js/version3-mvc/angular/templates/search-panel/bt-autocomplete-suburb-result.html'
	}
}]);
;
angular.module('barfootWeb').directive('btBathroomFilter', [function () {
    return {
        restrict: 'E',
        scope: {},
        templateUrl: "/assets/js/version3-mvc/angular/templates/search-panel/bt-bathroom-button-filter.html",
        controller: ['$scope', function ($scope) {
            $scope.title = 'Bathrooms';
            $scope.name = 'bathroom';
            $scope.delimeter = '-';
            $scope.order = 50;
            $scope.options = [
                {
                    label: '1',
                    value: '1'
                },
                {
                    label: '2',
                    value: '2'
                },
                {
                    label: '3',
                    value: '3'
                },
                {
                    label: '4',
                    value: '4'
                },
                {
                    label: '5',
                    value: '5'
                },
                {
                    label: '6+',
                    value: 'any'
                }
            ];
            $scope.linesOfBusiness = ['rural', 'residential', 'rental', 'sold'];
            $scope.queryStringKeys = 'bath';
            $scope.generatedQueryStringOverride = function(model) {
                if (!model.scope.visible) {
                    return '';
                }

                var firstValue = model.scope.options[0].value;
                var lastValue = model.scope.options[model.scope.options.length - 1].value;

                // Not visible, all selected or values null, return nothing
                if (!model.scope.visible
                    || (model.scope.valueOne === firstValue && model.scope.valueTwo === lastValue)
                    || !model.scope.valueOne && !model.scope.valueTwo) {
                    return '';
                }

                if (model.scope.valueOne === lastValue) {
                    // only selected value is last value, return min value as 6
                    return model.scope.queryStringKeys + '=6' + model.scope.delimeter + 'any';
                }
                else if (model.scope.valueOne && (model.scope.valueTwo == null || !model.scope.valueTwo)) {
                    // have a min but no max, treat this as a single value
                    return model.scope.queryStringKeys + '=' + model.scope.valueOne;
                }
                else {
                    // have a min and max
                    return model.scope.queryStringKeys + '=' + model.scope.valueOne + model.scope.delimeter + model.scope.valueTwo;
                }
            };
        }]
    }
}]);;
angular.module('barfootWeb').directive('btBedroomFilter', [function () {
    return {
        restrict: 'E',
        scope: {},
        templateUrl: "/assets/js/version3-mvc/angular/templates/search-panel/bt-bedroom-button-filter.html",
        controller: ['$scope', function ($scope) {
            $scope.title = 'Bedrooms';
            $scope.name = 'bedrooms';
            $scope.delimeter = '-';
            $scope.order = 40;
            $scope.options = [
                {
                    label: '1',
                    value: '1'
                },
                {
                    label: '2',
                    value: '2'
                },
                {
                    label: '3',
                    value: '3'
                },
                {
                    label: '4',
                    value: '4'
                },
                {
                    label: '5',
                    value: '5'
                },
                {
                    label: '6+',
                    value: 'any'
                }
            ];
            $scope.linesOfBusiness = ['rural', 'residential', 'rental', 'sold'];
            $scope.queryStringKeys = 'bed';
            $scope.generatedQueryStringOverride = function (model) {
                if (!model.scope.visible) {
                    return '';
                }

                var firstValue = model.scope.options[0].value;
                var lastValue = model.scope.options[model.scope.options.length - 1].value;

                // Not visible, all selected or values null, return nothing
                if (!model.scope.visible
                    || (model.scope.valueOne === firstValue && model.scope.valueTwo === lastValue)
                    || !model.scope.valueOne && !model.scope.valueTwo) {
                    return '';
                }

                if (model.scope.valueOne === lastValue) {
                    // only selected value is last value, set min as 6
                    return model.scope.queryStringKeys + '=6' + model.scope.delimeter + 'any';
                }
                else if (model.scope.valueOne && (model.scope.valueTwo == null || !model.scope.valueTwo)) {
                    // have a min but no max, treat this as a single value
                    return model.scope.queryStringKeys + '=' + model.scope.valueOne;
                }
                else {
                    // have a min and max
                    return model.scope.queryStringKeys + '=' + model.scope.valueOne + model.scope.delimeter + model.scope.valueTwo;
                }
            };
        }]
    }
}]);;
angular.module('barfootWeb').directive('btCommercialFilter', ['baseSearchFilter', 'btActiveLineOfBusiness', function (baseSearchFilter, btActiveLineOfBusiness) {
    return {
        restrict: 'E',
        scope: {},
        templateUrl: "/assets/js/version3-mvc/angular/templates/search-panel/bt-commercial-filter.html",
        controller: ['$scope', function ($scope) {

            $scope.title = 'Search only';
            $scope.name = 'commercialPropType';
            $scope.order = -10;
            $scope.options = [
                {
                    label: 'For Sale',
                    value: 'for-sale'
                },
                {
                    label: 'For Lease',
                    value: 'for-lease'
                },
                {
                    label: 'Business for sale',
                    value: 'business-for-sale'
                }
            ];
            $scope.linesOfBusiness = ['commercial'];

            $scope.resetOverride = function(model) {
                model.scope.options[0].checked = true;
                model.scope.options[1].checked = false;
                model.scope.options[2].checked = false;
            }

            $scope.initOverride = function(model) {
                var noneChecked = true;

                // get value by position only
                var parts = window.location.pathname.split('/');
                if (parts.length > 3 && parts[3]) {

                    for (var i = 0; i < $scope.options.length; i++) {
                        if (parts[3] === $scope.options[i].value) {
                            model.scope.options[i].checked = true;
                            noneChecked = false;
                        }
                    }
                }

                if (noneChecked) {
                    model.scope.options[0].checked = true;
                }

                // set visibility according to active line of business
                model.scope.visible = baseSearchFilter.isVisible(model.scope.linesOfBusiness[0], btActiveLineOfBusiness);
                btEvents.addListener(btEventType.onLineOfBusinessChange, function (e, activeLob) {
                    model.scope.visible = baseSearchFilter.isVisible(model.scope.linesOfBusiness[0], activeLob);
                });

                model.scope.xsCol = 12;
                model.scope.smCol = 4;
            };

            $scope.generatedQueryStringOverride = function(model) {

                if (!model.scope.visible) return '';

                var query = '';
                for (var i = 0; i < $scope.options.length; i++) {
                    if ($scope.options[i].checked) {
                        if (query.length > 0) query += $scope.delimeter;
                        query += $scope.options[i].value;
                    }
                }

                if (query.length > 0) {
                    return query;
                }

                return query;
            };
        }]
    }
}]);;
angular.module('barfootWeb').directive('btCommercialFloorAreaSlider', ['btSearchFilterConstants', function (btSearchFilterConstants) {
    return {
        restrict: 'E',
        require: '^^btMoreFilters',
        scope: {},
        templateUrl: '/assets/js/version3-mvc/angular/templates/search-panel/bt-range-slider-wrapper.html',
        controller: ['$scope', function ($scope) {

            $scope.title = 'Floor area';
            $scope.order = 90;
            $scope.range = [
                {
                    legend: 'Any min m<sup>2</sup>',
                    value: btSearchFilterConstants.minRangeValue
                },
                {
                    legend: '100m<sup>2</sup>',
                    value: 100
                }, {
                    legend: '200m<sup>2</sup>',
                    value: 200
                }, {
                    legend: '300m<sup>2</sup>',
                    value: 300
                }, {
                    legend: '400m<sup>2</sup>',
                    value: 400
                }, {
                    legend: '500m<sup>2</sup>',
                    value: 500
                }, {
                    legend: '1,000m<sup>2</sup>',
                    value: 1000
                }, {
                    legend: '2,000m<sup>2</sup>',
                    value: 2000
                }, {
                    legend: '3,000m<sup>2</sup>',
                    value: 3000
                }, {
                    legend: '4,000m<sup>2</sup>',
                    value: 4000
                }, {
                    legend: '5,000m<sup>2</sup>',
                    value: 5000
                }, {
                    legend: '6,000m<sup>2</sup>',
                    value: 6000
                }, {
                    legend: '7,000m<sup>2</sup>',
                    value: 7000
                }, {
                    legend: '8,000m<sup>2</sup>',
                    value: 8000
                }, {
                    legend: '9,000m<sup>2</sup>',
                    value: 9000
                }, {
                    legend: '10,000m<sup>2</sup>',
                    value: 10000
                }, {
                    legend: '15,000m<sup>2</sup>',
                    value: 15000
                }, {
                    legend: '20,000m<sup>2</sup>',
                    value: 20000
                }, {
                    legend: '25,000m<sup>2</sup>',
                    value: 25000
                }, {
                    legend: '30,000m<sup>2</sup>',
                    value: 30000
                }, {
                    legend: '40,000m<sup>2</sup>',
                    value: 40000
                }, {
                    legend: '50,000m<sup>2</sup>',
                    value: 50000
                }, {
                    legend: '60,000m<sup>2</sup>',
                    value: 60000
                }, {
                    legend: '70,000m<sup>2</sup>',
                    value: 70000
                }, {
                    legend: '80,000m<sup>2</sup>',
                    value: 80000
                }, {
                    legend: '90,000m<sup>2</sup>',
                    value: 90000
                }, {
                    legend: '100,000m<sup>2</sup>',
                    value: 100000
                }, {
                    legend: 'Any max m<sup>2</sup>',
                    value: btSearchFilterConstants.maxRangeValue
                }
            ];
            $scope.lineOfBusiness = ['commercial'];
            $scope.queryStringKeys = 'floor-area';

        }]
    }
}]);
;
angular.module('barfootWeb').directive('btCommercialPriceSlider', ['btSearchFilterConstants', function (btSearchFilterConstants) {
    return {
        restrict: 'E',
        scope: {},
        templateUrl: '/assets/js/version3-mvc/angular/templates/search-panel/bt-range-slider-wrapper.html',
        controller: ['$scope', function ($scope) {

            $scope.title = 'Price';
            $scope.range = [
                {
                    legend: '$Any min',
                    value: btSearchFilterConstants.minRangeValue
                },
                {
                    legend: '$25,000',
                    value: 25000
                }, {
                    legend: '$50,000',
                    value: 50000
                }, {
                    legend: '$75,000',
                    value: 75000
                }, {
                    legend: '$100,000',
                    value: 100000
                }, {
                    legend: '$250,000',
                    value: 250000
                }, {
                    legend: '$500,000',
                    value: 500000
                }, {
                    legend: '$750,000',
                    value: 750000
                }, {
                    legend: '$1m',
                    value: 1000000
                }, {
                    legend: '$2.5m',
                    value: 2500000
                }, {
                    legend: '$5m',
                    value: 5000000
                }, {
                    legend: '$7.5m',
                    value: 7500000
                }, {
                    legend: '$10m',
                    value: 10000000
                }, {
                    legend: '$15m',
                    value: 15000000
                },
                {
                    legend: '$Any max',
                    value: btSearchFilterConstants.maxRangeValue
                }
            ];
            $scope.lineOfBusiness = ['commercial'];
            $scope.queryStringKeys = 'price';
            $scope.order = 32;

        }]
    }
}]);
;
angular.module('barfootWeb').directive('btCommercialPropertyTypes', [function () {
    return {
        restrict: 'E',
        require: '^^btMoreFilters',
        scope: {},
        templateUrl: "/assets/js/version3-mvc/angular/templates/search-panel/bt-multi-select-filter-wrapper.html",
        controller: ['$scope', function ($scope) {

            $scope.title = 'Property types';
            $scope.delimeter = ',';
            $scope.lineOfBusiness = ['commercial'];
            $scope.queryStringKey = 'property-type';
            $scope.allOption = true;
            $scope.options = [
                {
                    label: 'Development Site',
                    value: 'development-site'
                },
                {
                    label: 'Office',
                    value: 'office'
                },
                {
                    label: 'Retail',
                    value: 'retail'
                },
                {
                    label: 'Tourism',
                    value: 'tourism'
                },
                {
                    label: 'Industrial',
                    value: 'industrial'
                },
                {
                    label: 'Hotel/Leisure',
                    value: 'hotel-leisure'
                },
                {
                    label: 'Business',
                    value: 'business'
                },
                {
                    label: 'Manufacturing',
                    value: 'manufacturing'
                },
                {
                    label: 'Services',
                    value: 'services'
                },
                {
                    label: 'Investment',
                    value: 'investment'
                },
                {
                    label: 'Other',
                    value: 'other'
                }
            ];
            $scope.order = 22;

        }]
    }
}]);
;
angular.module('barfootWeb').directive('btFurnishedPropertyFilter', ['baseSearchFilter', 'btActiveLineOfBusiness', function (baseSearchFilter, btActiveLineOfBusiness) {
    return {
        restrict: 'E',
        scope: {},
        templateUrl: "/assets/js/version3-mvc/angular/templates/search-panel/bt-furnished-filter.html",
        controller: ['$scope', function ($scope) {
            $scope.title = 'Furnished/Unfurnished';
            $scope.name = 'furnished';
            $scope.options = [
                {
                    label: 'Furnished',
                    value: 'yes'
                },
                {
                    label: 'Unfurnished',
                    value: 'no'
                }
            ];
            $scope.linesOfBusiness = ['rental'];
            $scope.queryStringKey = 'furnished';
            $scope.initOverride = function(model) {
                var value = baseSearchFilter.getSelectedValue(model.scope.queryStringKey);
                if (value) {
                    model.scope.optionClick(value);
                } 

                model.scope.visible = baseSearchFilter.isVisible(model.scope.linesOfBusiness, btActiveLineOfBusiness);
                btEvents.addListener(btEventType.onLineOfBusinessChange, function (e, activeLob) {
                    model.scope.visible = baseSearchFilter.isVisible(model.scope.linesOfBusiness, activeLob);
                });

                model.scope.xsCol = 6;
                model.scope.smCol = 6;
            };
            $scope.resetOverride = function(model) {
                model.scope.options[0].checked = false;
                model.scope.options[1].checked = false;
                model.scope.selected = '';
            };
            $scope.order = 60;
        }]
    }
}]);
;
angular.module('barfootWeb').directive('btKeywordsFilter', [ function () {
    return {
        restrict: 'E',
        scope: {
            linesOfBusiness: '='
        },
        templateUrl: "/assets/js/version3-mvc/angular/templates/search-panel/bt-textbox-filter-wrapper.html",
        controller: ['$scope', function ($scope) {
            $scope.title = 'Keywords';
            $scope.placeholder = 'eg: pool, views';
            $scope.queryStringKey = 'keywords';
            $scope.order = 110;
        }]
    }
}]);
;
angular.module('barfootWeb').controller('LocationAutoCompleteController', ['$scope', 'baseSearchFilter', 'searchService', 'autocompleteTagService',
    function ($scope, baseSearchFilter, searchService, autocompleteTagService) {

        var vm = this;
        $scope.order = vm.order;

        $scope.toggleFilterPopup = function(event) {
            $scope.$emit(btEventType.ShowRegionSuburbsFilter);
        }

        $scope.generatedQueryString = function() {

            if (vm.generatedQueryStringOverride) {
                return vm.generatedQueryStringOverride({ model: { scope: vm } });
            }
            var tags = autocompleteTagService.get();
            if (tags) {
                var query = searchService.buildLocationSearchUrl(tags);
                if (query && query.substring(0, 1) === '&') {
                    query = query.substring(1);
                }
                
                while(query.charAt(0) === '/')
                {
                    query = query.substr(1);
                }

                return query;
            }

            return '';
        };

        $scope.reset = function() {
            btEvents.trigger(btEventType.ClearAutoComplete);
        };
    }]);

angular.module('barfootWeb').directive('btLocationAutocomplete', [function () {
        return {
            restrict: 'E',
            require: '^btMoreFilters',
            scope: {},
            controller: 'LocationAutoCompleteController',
            bindToController: true,
            controllerAs: 'vm',
            templateUrl: "/assets/js/version3-mvc/angular/templates/search-panel/bt-location-autocomplete.html",
            link: function (scope, element, attrs, parentController) {

                parentController.addChild(scope);

            }
        }
    }]);
;
angular.module('barfootWeb').directive('btMoreFilters', ['btActiveLineOfBusiness', function (btActiveLineOfBusiness) {
    return {
        restrict: 'E',
        transclude: true,
        scope: {},
        templateUrl: '/assets/js/version3-mvc/angular/templates/search-panel/bt-more-filters.html',
        controller: ['$scope', 'cssHelperService', 'btSearchFilterConstants', 'filterService', function ($scope, cssHelperService, btSearchFilterConstants, filterService) {

            var filters = [];

            // public function available to children
            this.addChild = function (child) {
                filters.push(child);
            };

            $scope.resetFilters = function (event) {
                event.preventDefault();
                angular.forEach(filters, function (e) {
                    e.reset();
                });
                filterService.defaultSummary($scope.activeLineOfBusiness).then(
                    function (response) {
                        if (response.data.Success) {
                            btEvents.trigger(btEventType.ResetSummary, { summary: response.data.Result });
                        }
                    });
            }

            btEvents.addListener(btEventType.onLineOfBusinessChange, function (e, lob) {
                $scope.activeLineOfBusiness = lob;
            });

            btEvents.addListener(btEventType.ToggleMoreFilter, function (e) {
                $scope.toggleFilterPopup(e);
            });

            $scope.isFilterShown = false;
            $scope.activeLineOfBusiness = btActiveLineOfBusiness;

            $scope.toggleFilterPopup = function (event) {

                event.preventDefault();
                var sUsrAg = navigator.userAgent;
                $scope.isFilterShown = !$scope.isFilterShown;
                if ($scope.isFilterShown) {
                    if (sUsrAg.indexOf("Safari") > -1) {
                        cssHelperService.addClass(document.body, 'no-scroll');
                    } else {
                        document.body.style.overflowY = 'hidden';
                    }
                    btEvents.trigger(btEventType.SearchPanelMoreFiltersShow);
                } else {
                    if (sUsrAg.indexOf("Safari") > -1) {
                        cssHelperService.removeClass(document.body, 'no-scroll');
                    } else {
                        document.body.style.overflowY = 'scroll';
                    }
                    btEvents.trigger(btEventType.SearchPanelMoreFiltersHide);
                }
                event.preventDefault();
            }

            $scope.$on(btEventType.HideAutoScrollY, function (e, hide) {
                document.querySelectorAll('#filter-popup-wrapper')[0].style.overflowY = hide ? 'hidden' : 'scroll';
            });

            $scope.$on(btEventType.ShowRegionSuburbsFilter, function (e) {
                $scope.$broadcast(btEventType.OpenRegionSuburbsFilter);
            });

            $scope.search = function (e) {

                e.preventDefault();

                filters.sort(function(a, b) {
                    var aOrder = a.vm == undefined || a.vm.order == undefined ? 0 : a.vm.order;
                    var bOrder = b.vm == undefined || b.vm.order == undefined ? 0 : b.vm.order;
                    return aOrder - bOrder;
                });

                var queryParams = '';
                angular.forEach(filters, function (e) {
                    var value = e.generatedQueryString();
                    if (queryParams.length > 0 && value.length > 0) {
                        queryParams += '/';
                    }
                    queryParams += value;
                });

                var query = btSearchFilterConstants.searchBaseUrl + $scope.activeLineOfBusiness.toLowerCase();
                query += '/' + queryParams;

                window.location = window.location.protocol + '//' + window.location.host + query;
            }

        }]
    }
}]);
;
angular.module('barfootWeb').controller('MultiSelectController', ['$scope', 'baseSearchFilter', 'btActiveLineOfBusiness',
    function ($scope, baseSearchFilter, btActiveLineOfBusiness) {

        var vm = this;
        vm.allChecked = false;
        $scope.order = vm.order;

        vm.allClick = function () {
            for (var v = 0; v < vm.options.length; v++) {
                vm.options[v].checked = false;
            }
            vm.allChecked = true;
        };

        vm.optionClick = function() {
            if (vm.allChecked) {
                vm.allChecked = false;
            }
        };
        
        $scope.generatedQueryString = function () {

            if (vm.generatedQueryStringOverride) {
                return vm.generatedQueryStringOverride({ model: { scope: vm }});
            }

            if (!vm.visible || vm.allChecked) {
                return '';
            }

            var values = '';
            var checkedCount = 0;
            for (var v = 0; v < vm.options.length; v++) {

                if (vm.options[v].checked || vm.allChecked) {
                    if (values.length > 0) values += vm.delimeter;
                    values += vm.options[v].value.toLowerCase();
                    checkedCount++;
                }
            }

            if (checkedCount === vm.options.length) {
                // all checked
                return '';
            }

            if (values.length > 0) {
                values = vm.queryStringKey + '=' + values;
            }

            return values;
        }

        var setColumnWidths = function() {
            var optionsCount = vm.allOption ? vm.options.length + 1 : vm.options.length;

            if (optionsCount === 1) {
                vm.xsCol = 12;
                vm.smCol = 12;
            } else if (optionsCount === 2) {
                vm.xsCol = 6;
                vm.smCol = 6;
            } else {
                vm.xsCol = 6;
                vm.smCol = 3;
            }
        }

        var init = function () {
            if (vm.initOverride) {
                vm.initOverride({ model: { scope: vm }} );
            } else {

                // generate a unique group name for this checkbox group
                var reducer = function(accumulator, currentValue) {
                    return accumulator + currentValue;
                }
                vm.groupName = 'checkGroup' + vm.lineOfBusiness.reduce(reducer).toLowerCase().replace(' ', '');

                // get selected values from querystring params
                var selectedValues = baseSearchFilter.getSelectedValue(vm.queryStringKey);
                if (selectedValues) {

                    var values = decodeURIComponent(selectedValues).split(vm.delimeter);

                    if (values.length === vm.options.length) {
                        // all selected
                        vm.allClick();
                    } else if (values.length > 0) {
                        // Some or none selected
                        for (var i = 0; i < values.length; i++) {
                            for (var v = 0; v < vm.options.length; v++) {
                                if (vm.options[v].value.toLowerCase() === values[i].toLowerCase()) {
                                    vm.options[v].checked = true;
                                }
                            }
                        }
                    }
                } else {
                    vm.allClick();
                }

                // set visibility according to active line of business
                vm.visible = baseSearchFilter.isVisible(vm.lineOfBusiness, btActiveLineOfBusiness);
                btEvents.addListener(btEventType.onLineOfBusinessChange, function (e, activeLob) {
                    vm.visible = baseSearchFilter.isVisible(vm.lineOfBusiness, activeLob);
                });

                setColumnWidths();
            }
        };

        if (vm.resetOverride) {
            $scope.reset = vm.resetOverride;
        } else {
            $scope.reset = function () {
                vm.allClick();
            };
        }

        init();
    }]);

angular.module('barfootWeb').directive('btMultiSelectFilter', [function () {
        return {
            restrict: 'E',
            require: '^^btMoreFilters',
            scope: {
                options: '=',
                allOption: '=',
                delimeter: '=',
                heading: '=',
                lineOfBusiness: '=',
                queryStringKey: '=',
                initOverride: '&?',
                generatedQueryStringOverride: '&?',
                resetOverride: '&?',
                order: '='
            },
            controller: 'MultiSelectController',
            bindToController: true,
            controllerAs: 'vm',
            templateUrl: "/assets/js/version3-mvc/angular/templates/search-panel/bt-multi-select-filter.html",
            link: function (scope, element, attrs, parentController) {
                parentController.addChild(scope);
            }
        }
    }]);
;
angular.module('barfootWeb').controller('RadioListController', ['$scope', 'baseSearchFilter', 'btActiveLineOfBusiness', 
    function ($scope, baseSearchFilter, btActiveLineOfBusiness) {
        var vm = this;
        $scope.order = vm.order;
        
        vm.optionClick = function (value) {
            for (var v = 0; v < vm.options.length; v++) {
                if (vm.options[v].value.toLowerCase() === value.toLowerCase()) {
                    vm.selected = vm.options[v].value;
                    vm.options[v].checked = true;
                } else {
                    vm.options[v].checked = false;
                }
            }
        };

        $scope.generatedQueryString = function () {

            if (vm.generatedQueryStringOverride) {
                return vm.generatedQueryStringOverride({ model: { scope: vm }});
            }

            if (!vm.visible || vm.selected === '' || vm.defaultValue === vm.selected) {
                return '';
            }

            var returnValue = '';
            if (vm.selected !== undefined) {
                return vm.queryStringKey + '=' + vm.selected;
            }
            return returnValue;
        }

        var setColumnWidths = function () {
            if (vm.options.length === 1) {
                vm.xsCol = 12;
                vm.smCol = 12;
            } else if (vm.options.length === 2) {
                vm.xsCol = 6;
                vm.smCol = 6;
            } else {
                vm.xsCol = 6;
                vm.smCol = 3;
            }
        }

        var defaultValues = function() {
            vm.optionClick(vm.options[0].value);
        }

        var init = function () {
            if (vm.initOverride) {
                vm.initOverride({ model: { scope: vm } });
            } else {
                var value = baseSearchFilter.getSelectedValue(vm.queryStringKey);
                if (value) {
                    vm.optionClick(value);
                } else {
                    defaultValues();
                }

                vm.visible = baseSearchFilter.isVisible(vm.linesOfBusiness, btActiveLineOfBusiness);
                btEvents.addListener(btEventType.onLineOfBusinessChange, function (e, activeLob) {
                    vm.visible = baseSearchFilter.isVisible(vm.linesOfBusiness, activeLob);
                });
                setColumnWidths();
            }
        };

        if (vm.resetOverride) {
            $scope.reset = function() {
                vm.resetOverride({ model: { scope: vm }});
            }
        } else {
            $scope.reset = function () {
                defaultValues();
            };
        }

        init();

    }]);

angular.module('barfootWeb').directive('btRadiolistFilter', [function () {
    return {
        restrict: 'E',
        require: '^^btMoreFilters',
        scope: {
            options: '=',
            heading: '=',
            name: '=',
            linesOfBusiness: '=',
            queryStringKey: '=',
            defaultValue: '=',
            initOverride: '&?',
            generatedQueryStringOverride: '&?',
            resetOverride: '&?',
            order: '='
        },
        controller: 'RadioListController',
        bindToController: true,
        controllerAs: 'vm',
        templateUrl: "/assets/js/version3-mvc/angular/templates/search-panel/bt-radiolist-filter.html",
        link: function (scope, element, attrs, parentController) {

            parentController.addChild(scope);

        }
    }
}]);
;
angular.module('barfootWeb').controller('RangeButtonController', ['$scope', 'baseSearchFilter', 'btActiveLineOfBusiness',
    function ($scope, baseSearchFilter, btActiveLineOfBusiness) {
        var vm = this;
        $scope.order = vm.order;

        vm.optionClick = function (value) {
            // if selection matches or is in between current selection, or we have no first value, select single option
            if ((value >= vm.valueOne && value <= vm.valueTwo) || !vm.valueOne) {
                vm.valueOne = value;
                vm.valueTwo = null;
            }
            // single option selected, set range
            else if (vm.valueTwo == null) {
                if (value < vm.valueOne) {
                    vm.valueTwo = vm.valueOne;
                    vm.valueOne = value;
                } else {
                    vm.valueTwo = value;
                }
            }
            // selection lower than valueOne, set range
            else if (value < vm.valueOne) {
                vm.valueOne = value;
            }
            // selection higher than valueTwo, set range
            else if (value > vm.valueTwo) {
                vm.valueTwo = value;
            }

            for (var v = 0; v < vm.options.length; v++) {
                if ((vm.options[v].value !== value) && (vm.options[v].value >= vm.valueOne) &&
                    (vm.options[v].value <= vm.valueTwo)) {
                    vm.options[v].checked = true;
                } else {
                    vm.options[v].checked = false;
                }
            }
        };

        $scope.generatedQueryString = function () {
            if (vm.generatedQueryStringOverride) {
                return vm.generatedQueryStringOverride({ model: { scope: vm } });
            }

            // Not visible, all selected or values null, return nothing
            if ((!vm.visible) 
                || ((vm.valueOne === vm.options[0].value) && (vm.valueTwo === vm.options[vm.options.length - 1].value))
                || (!vm.valueOne && !vm.valueTwo)) {
                return '';
            }

            if ((vm.valueOne) && (vm.valueTwo == null)) {
                // have a min but no max, treat as single value
                return vm.queryStringKeys + '=' + vm.valueOne;
            } 
            else {
                // have a min and max
                return vm.queryStringKeys + '=' + vm.valueOne + vm.delimeter + vm.valueTwo;
            }
        }

        var setActiveLob = function (activeLob) {
            var bActive = false;
            for (var i = 0; i < vm.linesOfBusiness.length; i++) {
                bActive = baseSearchFilter.isVisible(vm.linesOfBusiness[i], activeLob);
                if (bActive) {
                    return bActive;
                }
            }
            return bActive;
        }

        var setColumnWidths = function () {

            if (vm.options.length === 1) {
                vm.xsCol = 12;
                vm.smCol = 12;
            } else if (vm.options.length === 2) {
                vm.xsCol = 6;
                vm.smCol = 6;
            } else {
                vm.xsCol = 2;
                vm.smCol = 2;
            }
        }

        var checkOptions = function() {

            // Nothing checked, clear all
            if (!vm.valueOne && !vm.valueTwo) {
                for (var v = 0; v < vm.options.length; v++) {
                    vm.options[v].checked = false;
                }
                return;
            }

            // Single value checked
            if (vm.valueOne && !vm.valueTwo) {
                for (var v = 0; v < vm.options.length; v++) {
                    if (vm.options[v].value === vm.valueOne) {
                        vm.options[v].checked = true;
                        break;
                    }
                }
                return;
            }

            // Range checked
            if (vm.valueOne && vm.valueTwo) {

                for (var v = 0; v < vm.options.length; v++) {

                    var startIndex;
                    var endIndex;

                    if (vm.options[v].value === vm.valueOne) {
                        vm.options[v].checked = true;
                        startIndex = v;
                        continue;
                    }

                    if (vm.options[v].value === vm.valueTwo) {
                        vm.options[v].checked = true;
                        endIndex = v;
                        continue;
                    }

                    if (startIndex != undefined && v > startIndex && (endIndex == undefined || v < endIndex)) {
                        // check values after first, but before second
                        vm.options[v].checked = true;
                    }
                }
            }
        }

        var init = function () {
            var selectedValues = baseSearchFilter.getSelectedRangeValue(vm.queryStringKeys);
            if (selectedValues && selectedValues.length > 0) {
                if (selectedValues[0] && selectedValues[1]) {
                    // range selected
                    vm.valueOne = selectedValues[0];
                    vm.valueTwo = selectedValues[1];
                } else if (selectedValues[0] && !selectedValues[1]) {
                    // single value selected
                    vm.valueOne = selectedValues[0];
                }
            }

            if (vm.initOverride) {
                vm.initOverride({ model: { scope: vm } });
            }

            checkOptions();
            vm.visible = setActiveLob(btActiveLineOfBusiness);
            btEvents.addListener(btEventType.onLineOfBusinessChange, function (e, activeLob) {
                vm.visible = setActiveLob(activeLob);
            });
            setColumnWidths();
        };

        if ($scope.resetOverride) {
            $scope.reset = $scope.resetOverride;
        } else {
            $scope.reset = function () {
                vm.valueOne = null;
                vm.valueTwo = null;
                checkOptions();
            };
        }

        init();

    }]);

angular.module('barfootWeb').directive('btRangeButtonFilter', [function () {
    return {
        restrict: 'E',
        require: '^^btMoreFilters',
        scope: {
            options: '=',
            heading: '=',
            name: '=',
            delimeter: '=',
            linesOfBusiness: '=',
            queryStringKeys: '=',
            initOverride: '&?',
            generatedQueryStringOverride: '&?',
            resetOverride: '&?',
            order: '='
        },
        controller: 'RangeButtonController',
        bindToController: true,
        controllerAs: 'vm',
        templateUrl: "/assets/js/version3-mvc/angular/templates/search-panel/bt-range-button-filter.html",
        link: function (scope, element, attrs, parentController) {

            parentController.addChild(scope);

        }
    }
}]);;
angular.module('barfootWeb').directive('btRangeSlider', ['$location', 'baseSearchFilter', 'btSearchFilterConstants', 'btActiveLineOfBusiness',
    function($location, baseSearchFilter, btSearchFilterConstants, btActiveLineOfBusiness) {
        return {
            restrict: 'E',
            require: '^^btMoreFilters',
            scope: {
                range: '=',
                heading: '=',
                lineOfBusiness: '=',
                queryStringKeys: '=',
                initOverride: '&?',
                generatedQueryStringOverride: '&?',
                resetOverride: '&?',
                order: '='
            },
            templateUrl: '/assets/js/version3-mvc/angular/templates/search-panel/bt-range-slider.html',
            link: function(scope, element, attrs, parentController) {

                parentController.addChild(scope);

                scope.visible = baseSearchFilter.isVisible(scope.lineOfBusiness, btActiveLineOfBusiness);
                btEvents.addListener(btEventType.onLineOfBusinessChange, function(e, activeLob) {
                    scope.visible = baseSearchFilter.isVisible(scope.lineOfBusiness, activeLob);
                });

            },
            controller: ['$scope', function($scope) {

                var getStepByValue = function(value) {
                    var intValue = parseInt(value);
                    var index = -1;
                    for (var i = 0; i < $scope.range.length; i++) {
                        if ($scope.range[i].value === intValue) {
                            index = i;
                            break;
                        }
                    }
                    return $scope.range[index];
                }

                if ($scope.generatedQueryStringOverride) {
                    $scope.generatedQueryString = $scope.generatedQueryStringOverride;
                } else {
                    $scope.generatedQueryString = function() {
                        if (($scope.slider.minValue === btSearchFilterConstants.minRangeValue 
                            && $scope.slider.maxValue === btSearchFilterConstants.maxRangeValue) 
                            || !$scope.visible) return '';

                        return $scope.queryStringKeys
                            + '='
                            + ($scope.slider.minValue === btSearchFilterConstants.minRangeValue ? 'any' : $scope.slider.minValue)
                            + '-'
                            + ($scope.slider.maxValue === btSearchFilterConstants.maxRangeValue ? 'any' : $scope.slider.maxValue);
                    }
                }

                var init = function() {
                    if ($scope.initOverride) {
                        $scope.initOverride();
                    } else {

                        // rerender rz-slider when parent visible
                        btEvents.addListener(btEventType.SearchPanelMoreFiltersShow, function() {
                            setTimeout(function() {
                                $scope.$broadcast('rzSliderForceRender');
                            }, 0);
                        });

                        var selectedValues = baseSearchFilter.getSelectedRangeValue($scope.queryStringKeys);

                        var minValue;
                        var maxValue;

                        if (selectedValues) {

                            if (selectedValues[0] && selectedValues[0] !== 'any') {
                                minValue = getStepByValue(selectedValues[0]);
                            }

                            if (selectedValues[1] && selectedValues[1] !== 'any') {
                                maxValue = getStepByValue(selectedValues[1]);
                            }
                        }

                        $scope.slider = {
                            minValue: minValue || $scope.range[0],
                            maxValue: maxValue || $scope.range[$scope.range.length - 1],
                            options: {
                                stepsArray: $scope.range,
                                noSwitching: true,
                                showLabelOnSliders: false,
                                useLegendAsLabels: true
                            }
                        };
                    }
                };

                if ($scope.resetOverride) {
                    $scope.reset = $scope.resetOverride;
                } else {
                    $scope.reset = function() {
                        $scope.slider = {
                            minValue: $scope.range[0],
                            maxValue: $scope.range[$scope.range.length - 1],
                            options: {
                                stepsArray: $scope.range,
                                noSwitching: true,
                                showLabelOnSliders: false,
                                useLegendAsLabels: true
                            }
                        };

                        setTimeout(function() {
                            $scope.$broadcast('rzSliderForceRender');
                        }, 0);
                    };
                }

                init();

            }]
        }
    }]);
;
angular.module('barfootWeb').controller('RegionSuburbController', ['$scope', 'cssHelperService', 'baseSearchFilter',
    'searchService', 'autocompleteTagService', 'btActiveLineOfBusiness', 'regionService', 'suburbService',
    function ($scope, cssHelperService, baseSearchFilter, searchService, autocompleteTagService, btActiveLineOfBusiness, regionService, suburbService) {

        var vm = this;
        var areaGroupName = 'area';
        var regionGroupName = 'region';
        var suburbGroupName = 'suburb';

        this.addChild = function (child) {
            filters.push(child);
        };

        var setVisibleGroup = function(group) {
            switch (group) {
                case areaGroupName:
                    vm.AreasVisible = true;
                    vm.RegionsVisible = false;
                    vm.SuburbsVisible = false;
                    break;
                case regionGroupName:
                    vm.AreasVisible = false;
                    vm.RegionsVisible = true;
                    vm.SuburbsVisible = false;
                    break;
                case suburbGroupName:
                    vm.AreasVisible = false;
                    vm.RegionsVisible = false;
                    vm.SuburbsVisible = true;
                    break;
            }
        }

        btEvents.addListener(btEventType.onLineOfBusinessChange, function (e, lob) {
            $scope.activeLineOfBusiness = lob;
        });

        $scope.$on(btEventType.OpenRegionSuburbsFilter, function (e) {
            $scope.toggleFilterPopup();
        });
        
        $scope.activeLineOfBusiness = btActiveLineOfBusiness;

        $scope.toggleFilterPopup = function () {
            if (vm.AreasVisible) {
                vm.loadArea();
                $scope.$emit(btEventType.HideAutoScrollY, !vm.Visible);
                vm.Visible = !vm.Visible;
                setVisibleGroup(areaGroupName);
            } else if (vm.RegionsVisible) {
                vm.loadArea();
                setVisibleGroup(areaGroupName);
            } else if (vm.SuburbsVisible) {
                vm.selectedArea(vm.SelectedArea);
                setVisibleGroup(regionGroupName);
            }
        }

        $scope.done = function(event) {
            event.preventDefault();
            $scope.$emit(btEventType.HideAutoScrollY, false);
            vm.Visible = false;
            setVisibleGroup(areaGroupName);
            vm.CurrentPage = 'Regions & Suburbs';
        }

        var getAreas = function (data) {
            var areas = [];

            for (var i = 0; i < data.length; i++) {
                var area = { AreaId: data[i].RegionGroupId, Name: data[i].RegionGroupName, Count: Object.values(data[i].ListingCounts)[0]};
                areas.push(area);
            }
            return areas;
        }

        var getRegions = function (data) {
            var regions = [];

            for (var i = 0; i < data.length; i++) {
                var region = { RegionId: data[i].RegionId, Name: data[i].RegionName, Count: Object.values(data[i].ListingCounts)[0] };
                regions.push(region);
            }
            return regions;
        }

        var getSuburbs = function (data) {
            var suburbs = [];

            for (var i = 0; i < data.length; i++) {
                var suburb = { SuburbId: data[i].SuburbId, Name: data[i].SuburbName, Value: data[i].SuburbName, Count: Object.values(data[i].ListingCounts)[0] };
                suburbs.push(suburb);
            }
            return suburbs;
        }

        vm.loadArea = function() {
            regionService.searchRegionGroupByLob($scope.activeLineOfBusiness).then(
                function (response) {
                    if (response.data.Success) {
                        vm.Areas = getAreas(JSON.parse(response.data.Result));
                    } else {
                        vm.Areas = [{ AreaId: 0, Name: "No Areas", Count: 0 }];
                    }
                }, function () {
                    vm.Areas = [{ AreaId: 0, Name: "No Areas", Count: 0 }];
                });
        }
        
        vm.resetFilter = function () {
            vm.CurrentPage = 'Regions & Suburbs';
            vm.AreasVisible = true;
            vm.RegionsVisible = false;
            vm.SuburbsVisible = false;
            vm.SelectedArea = null;
            vm.SelectedRegion = null;
        }

        vm.selectOptions = function() {
            var tags = autocompleteTagService.get();
            var hasRegion = false;
            var selectedSuburbsIndex = [];
            
            for (var i = 0; i < tags.length; i++) {
                if ((tags[i].Type === "Regions") || (tags[i].Type === "Suburbs")) {
                    for (var j = 0; j < vm.Suburbs.length; j++) {
                        if (vm.Suburbs[j].Value === tags[i].Value) {
                            if (tags[i].Type === "Regions") {
                                vm.Suburbs[0].Selected = true;
                                hasRegion = true;
                                break;
                            } else {
                                vm.Suburbs[j].Selected = true;
                                selectedSuburbsIndex.push(j);
                            }
                            
                        }
                    }
                }
                if (hasRegion) {
                    break;
                }
            }
            
            if (hasRegion) {
                for (var t = 0; t < selectedSuburbsIndex.length; t++) {
                    vm.Suburbs[selectedSuburbsIndex[t]].Selected = false;
                }
            }
        }

        vm.selectedArea = function (area) {
            vm.CurrentPage = area.Name;
            vm.SelectedArea = area;
            setVisibleGroup(regionGroupName);
            vm.Suburbs = [];
            regionService.searchRegionByLob($scope.activeLineOfBusiness, area.AreaId).then(
                function (response) {
                    if (response.data.Success) {
                        vm.Regions = getRegions(JSON.parse(response.data.Result));
                    } else {
                        vm.Regions = [{ RegionId: 0, Name: "No Regions", Count: 0 }];
                    }
                }, function () {
                    vm.Regions = [{ RegionId: 0, Name: "No Regions", Count: 0 }];
                });
        }

        vm.selectedRegion = function (region) {
            vm.CurrentPage = region.Name;
            vm.SelectedRegion = region;
            vm.Suburbs.push({ SuburbId: 0, Name: "All of " + region.Name, Value: region.Name, Count: region.Count, Selected: false });
            suburbService.searchByLob($scope.activeLineOfBusiness, region.RegionId).then(
                function (response) {
                    if (response.data.Success) {
                        vm.Suburbs.push.apply(vm.Suburbs, getSuburbs(JSON.parse(response.data.Result)));
                        vm.selectOptions();
                    } else {
                        vm.Suburbs.push.apply(vm.Suburbs, [{ SuburbId: 0, Name: "No Suburbs", Count: 0 }]);
                    }
                }, function () {
                    vm.Suburbs.push.apply(vm.Suburbs, [{ SuburbId: 0, Name: "No Suburbs", Count: 0 }]);
                });
            setVisibleGroup(suburbGroupName);
        }

        vm.selectedSuburb = function (index, suburb) {
            var selected = !vm.Suburbs[index].Selected;
            vm.Suburbs[index].Selected = selected;
            
            if (index === 0 && selected) {
                for (var t = 1; t < vm.Suburbs.length; t++) {
                    if (vm.Suburbs[t].Selected) {
                        vm.Suburbs[t].Selected = false;
                        autocompleteTagService.remove({ Value: vm.Suburbs[t].Value, Type: "Suburbs" });
                    }
                }
                autocompleteTagService.add({ Value: vm.Suburbs[index].Value, Type: "Regions" });
            } else if (selected) {
                if (vm.Suburbs[0].Selected) {
                    autocompleteTagService.remove({ Value: vm.Suburbs[0].Value, Type: "Regions" });
                    vm.Suburbs[0].Selected = false;
                }
                autocompleteTagService.add({ Value: vm.Suburbs[index].Name, Type: "Suburbs" });
            } else {
                autocompleteTagService.remove({ Value: vm.Suburbs[index].Name, Type: "Suburbs" });
            }
        }

        var init = function () {
            vm.Visible = false;
            vm.SelectedArea = null;
            vm.SelectedRegion = null;
            setVisibleGroup(areaGroupName);
            vm.doneVisible = false;
        }

        btEvents.addListener(btEventType.AutoCompleteTagsChanged, function(data, tagData) {
            vm.doneVisible = tagData.tags && tagData.tags.length > 0;
        });

        $scope.$on(btEventType.SelectedListItemChanged, function (e, data) {
            if (data.item.AreaId) {
                vm.selectedArea(data.item);
            } else if (data.item.RegionId) {
                vm.selectedRegion(data.item);
            } else {
                vm.selectedSuburb(data.index, data.item);
            }
        });

        if ($scope.resetOverride) {
            $scope.reset = $scope.resetOverride;
        } else {
            $scope.reset = function () {
                vm.resetFilter();
            };
        }

        init();

    }]);

angular.module('barfootWeb').directive('btRegionSuburbFilter', [function () {
    return {
        restrict: 'E',
        transclude: true,
        scope: {},
        controller: 'RegionSuburbController',
        bindToController: true,
        controllerAs: 'vm',
        templateUrl: "/assets/js/version3-mvc/angular/templates/search-panel/bt-region-suburb-filter.html"
    }
}]);
;
angular.module('barfootWeb').directive('btRentalConditions', ['baseSearchFilter', 'btActiveLineOfBusiness', function (baseSearchFilter, btActiveLineOfBusiness) {
    return {
        restrict: 'E',
        scope: {},
        templateUrl: "/assets/js/version3-mvc/angular/templates/search-panel/bt-rental-conditions.html",
        controller: ['$scope', function ($scope) {

            $scope.title = 'Search only';
            $scope.lineOfBusiness = ['rental'];
            $scope.allOption = false;
            $scope.delimeter = ',';
            $scope.queryStringKey = 'search-only';
            $scope.options = [
                {
                    label: 'Available now',
                    value: 'available-now'
                },
                {
                    label: 'Pets allowed',
                    value: 'pets-allowed'
                }
            ];
            $scope.order = 111;

            $scope.initOverride = function (model) {
                var values = baseSearchFilter.getSelectedValue($scope.queryStringKey);

                if (values) {
                    if (values.indexOf('available-now') !== -1) {
                        model.scope.options[0].checked = true;
                    }

                    if (values.indexOf('pets-allowed') !== -1) {
                        model.scope.options[1].checked = true;
                    }
                }

                // set visibility according to active line of business
                model.scope.visible = baseSearchFilter.isVisible(model.scope.lineOfBusiness[0], btActiveLineOfBusiness);
                btEvents.addListener(btEventType.onLineOfBusinessChange, function (e, activeLob) {
                    model.scope.visible = baseSearchFilter.isVisible(model.scope.lineOfBusiness[0], activeLob);
                });

                model.scope.xsCol = 6;
                model.scope.smCol = 6;
                model.scope.groupName = 'rentalConditions';
            };

            $scope.generatedQueryStringOverride = function (model) {

                if (!model.scope.visible) return '';

                var query = '';
                if (model.scope.options[0].checked) {
                    query += model.scope.options[0].value;
                }

                if (model.scope.options[1].checked) {
                    if (query.length > 0) query += $scope.delimeter;
                    query += model.scope.options[1].value;
                }

                if (query.length > 0) {
                    return $scope.queryStringKey + '=' + query;
                }

                return query;
            };

        }]
    }
}]);
;
angular.module('barfootWeb').directive('btRentalPriceSlider', ['btSearchFilterConstants', function (btSearchFilterConstants) {
    return {
        restrict: 'E',
        require: '^^btMoreFilters',
        scope: { },
        templateUrl: '/assets/js/version3-mvc/angular/templates/search-panel/bt-range-slider-wrapper.html',
        controller: ['$scope', function ($scope) {

            $scope.title = 'Weekly rent';
            $scope.range = [
                {
                    legend: '$Any min', 
                    value: btSearchFilterConstants.minRangeValue
                },
                {
                    legend: "$100",
                    value: 100
                },
                {
                    legend: "$125",
                    value: 125
                },
                {
                    legend: "$150",
                    value: 150
                },
                {
                    legend: "$175",
                    value: 175
                },
                {
                    legend: "$200",
                    value: 200
                },
                {
                    legend: "$225",
                    value: 225
                },
                {
                    legend: "$250",
                    value: 250
                },
                {
                    legend: "$275",
                    value: 275
                },
                {
                    legend: "$300",
                    value: 300
                },
                {
                    legend: "$350",
                    value: 350
                },
                {
                    legend: "$400",
                    value: 400
                },
                {
                    legend: "$450",
                    value: 450
                },
                {
                    legend: "$500",
                    value: 500
                },
                {
                    legend: "$600",
                    value: 600
                }, 
                {
                    legend: "$700",
                    value: 700
                }, 
                {
                    legend: "$800",
                    value: 800
                }, 
                {
                    legend: "$900",
                    value: 900
                }, 
                {
                    legend: "$1,000",
                    value: 1000
                }, 
                {
                    legend: "$1,250",
                    value: 1250
                }, 
                {
                    legend: "$1,500",
                    value: 1500
                }, 
                {
                    legend: "$1,750",
                    value: 1750
                }, 
                {
                    legend: "$2,000",
                    value: 2000
                }, 
                {
                    legend: "$2,500",
                    value: 2500
                },
                {
                    legend: '$Any max',
                    value: btSearchFilterConstants.maxRangeValue
                }
            ];
            $scope.lineOfBusiness = ['rental'];
            $scope.queryStringKeys = 'rent';
            $scope.order = 33;
        }]
    }
}]);
;
angular.module('barfootWeb').directive('btRentalPropertyTypes', [function () {
    return {
        restrict: 'E',
        scope: {},
        templateUrl: "/assets/js/version3-mvc/angular/templates/search-panel/bt-multi-select-filter-wrapper.html",
        controller: ['$scope', function ($scope) {

            $scope.title = 'Property types';
            $scope.delimeter = ',';
            $scope.lineOfBusiness = ['rental'];
            $scope.queryStringKey = 'property-type';
            $scope.allOption = true;
            $scope.options = [
                {
                    label: 'House',
                    value: 'house'
                },
                {
                    label: 'Apartment',
                    value: 'apartment'
                },
                {
                    label: 'Unit',
                    value: 'unit'
                },
                {
                    label: 'Townhouse',
                    value: 'townhouse'
                },
                {
                    label: 'Section',
                    value: 'section'
                }
            ];
            $scope.order = 23;

        }]
    }
}]);
;
angular.module('barfootWeb').directive('btResidentialPriceSlider', ['btSearchFilterConstants', function (btSearchFilterConstants) {
    return {
        restrict: 'E',
        require: '^^btMoreFilters',
        scope: {},
        templateUrl: '/assets/js/version3-mvc/angular/templates/search-panel/bt-range-slider-wrapper.html',
        controller: ['$scope', function ($scope) {

            $scope.title = 'Price';
            $scope.range = [
                {
                    legend: '$Any min',
                    value: btSearchFilterConstants.minRangeValue
                },
                {
                    legend: '$100,000',
                    value: 100000
                },
                {
                    legend: '$200,000',
                    value: 200000
                },
                {
                    legend: '$300,000',
                    value: 300000
                },
                {
                    legend: '$400,000',
                    value: 400000
                },
                {
                    legend: '$500,000',
                    value: 500000
                },
                {
                    legend: '$600,000',
                    value: 600000
                },
                {
                    legend: '$700,000',
                    value: 700000
                },
                {
                    legend: '$800,000',
                    value: 800000
                },
                {
                    legend: '$900,000',
                    value: 900000
                },
                {
                    legend: '$1,000,000',
                    value: 1000000
                },
                {
                    legend: '$1,200,000',
                    value: 1200000
                },

                {
                    legend: '$1,400,000',
                    value: 1400000
                },
                {
                    legend: '$1,600,000',
                    value: 1600000
                },
                {
                    legend: '$2,000,000',
                    value: 2000000
                },
                {
                    legend: '$2,500,000',
                    value: 2500000
                },
                {
                    legend: '$3,500,000',
                    value: 3500000
                },
                {
                    legend: '$5,000,000',
                    value: 5000000
                },
                {
                    legend: '$7,500,000',
                    value: 7500000
                },
                {
                    legend: '$Any max',
                    value: btSearchFilterConstants.maxRangeValue
                }
            ];
            $scope.lineOfBusiness = ['residential', 'rural'];
            $scope.queryStringKeys = 'price';
            $scope.order = 30;

        }]
    }
}]);
;
angular.module('barfootWeb').directive('btResidentialPropertyTypes', [function () {
    return {
        restrict: 'E',
        scope: {
            test: '='
        },
        templateUrl: "/assets/js/version3-mvc/angular/templates/search-panel/bt-multi-select-filter-wrapper.html",
        controller: ['$scope', function ($scope) {

            $scope.title = 'Property types';
            $scope.delimeter = ',';
            $scope.lineOfBusiness = ['residential', 'sold'];
            $scope.queryStringKey = 'property-type';
            $scope.allOption = true;
            $scope.options = [
                {
                    label: 'House',
                    value: 'house'
                },
                {
                    label: 'Section',
                    value: 'section'
                },
                {
                    label: 'Unit',
                    value: 'unit'
                },
                {
                    label: 'Townhouse',
                    value: 'townhouse'
                },
                {
                    label: 'Apartment',
                    value: 'apartment'
                },
                {
                    label: 'Lifestyle',
                    value: 'lifestyle'
                }
            ];
            $scope.order = 20;

        }]
    }
}]);
;
angular.module('barfootWeb').directive('btResidentialRuralConditions', ['baseSearchFilter', 'btActiveLineOfBusiness', function (baseSearchFilter, btActiveLineOfBusiness) {
    return {
        restrict: 'E',
        scope: {},
        templateUrl: "/assets/js/version3-mvc/angular/templates/search-panel/bt-residential-rural-conditions.html",
        controller: ['$scope', function ($scope) {
            
            $scope.title = 'Search only';
            $scope.lineOfBusiness = ['residential', 'rural'];
            $scope.allOption = false;
            $scope.delimeter = ',';
            $scope.queryStringKey = 'search-only';
            $scope.options = [
                {
                    label: 'Open homes',
                    value: 'open-homes'
                },
                {
                    label: 'Mortgagee sales',
                    value: 'mortgagee-sales'
                }
            ];
            $scope.order = 112;

            $scope.initOverride = function(model) {
                
                var values = baseSearchFilter.getSelectedValue($scope.queryStringKey);

                if (values) {
                    if (values.indexOf('open-homes') !== -1) {
                        model.scope.options[0].checked = true;
                    }

                    if (values.indexOf('mortgagee-sales') !== -1) {
                        model.scope.options[1].checked = true;
                    }
                }

                // set visibility according to active line of business
                model.scope.visible = baseSearchFilter.isVisible(model.scope.lineOfBusiness, btActiveLineOfBusiness);
                btEvents.addListener(btEventType.onLineOfBusinessChange, function (e, activeLob) {
                    model.scope.visible = baseSearchFilter.isVisible(model.scope.lineOfBusiness, activeLob);
                });

                model.scope.xsCol = 6;
                model.scope.smCol = 6;
                model.scope.groupName = 'residentialRuralConditions';
            };

            $scope.generatedQueryStringOverride = function(model) {

                if (!model.scope.visible) return '';

                var query = '';
                if (model.scope.options[0].checked) {
                    query += model.scope.options[0].value;
                }

                if (model.scope.options[1].checked) {
                    if (query.length > 0) query += $scope.delimeter;
                    query += model.scope.options[1].value;
                }

                if (query.length > 0) {
                    return $scope.queryStringKey + '=' + query;
                }

                return query;
            };

        }]
    }
}]);
;
angular.module('barfootWeb').directive('btRuralLandAreaSlider', ['btSearchFilterConstants', function (btSearchFilterConstants) {
    return {
        restrict: 'E',
        require: '^^btMoreFilters',
        scope: {},
        templateUrl: '/assets/js/version3-mvc/angular/templates/search-panel/bt-range-slider-wrapper.html',
        controller: ['$scope', function ($scope) {

            $scope.title = 'Land area';
            $scope.range = [
                {
                    legend: 'Any min m<sup>2</sup>',
                    value: btSearchFilterConstants.minRangeValue
                },
                {
                    legend: '100m<sup>2</sup>',
                    value: 100
                }, {
                    legend: '200m<sup>2</sup>',
                    value: 200
                }, {
                    legend: '300m<sup>2</sup>',
                    value: 300
                }, {
                    legend: '400m<sup>2</sup>',
                    value: 400
                }, {
                    legend: '500m<sup>2</sup>',
                    value: 500
                }, {
                    legend: '1,000m<sup>2</sup>',
                    value: 1000
                }, {
                    legend: '2,000m<sup>2</sup>',
                    value: 2000
                }, {
                    legend: '3,000m<sup>2</sup>',
                    value: 3000
                }, {
                    legend: '4,000m<sup>2</sup>',
                    value: 4000
                }, {
                    legend: '5,000m<sup>2</sup>',
                    value: 5000
                }, {
                    legend: '6,000m<sup>2</sup>',
                    value: 6000
                }, {
                    legend: '7,000m<sup>2</sup>',
                    value: 7000
                }, {
                    legend: '8,000m<sup>2</sup>',
                    value: 8000
                }, {
                    legend: '9,000m<sup>2</sup>',
                    value: 9000
                }, {
                    legend: '10,000m<sup>2</sup>',
                    value: 10000
                }, {
                    legend: '15,000m<sup>2</sup>',
                    value: 15000
                }, {
                    legend: '20,000m<sup>2</sup>',
                    value: 20000
                }, {
                    legend: '25,000m<sup>2</sup>',
                    value: 25000
                }, {
                    legend: '30,000m<sup>2</sup>',
                    value: 30000
                }, {
                    legend: '40,000m<sup>2</sup>',
                    value: 40000
                }, {
                    legend: '50,000m<sup>2</sup>',
                    value: 50000
                }, {
                    legend: '60,000m<sup>2</sup>',
                    value: 60000
                }, {
                    legend: '70,000m<sup>2</sup>',
                    value: 70000
                }, {
                    legend: '80,000m<sup>2</sup>',
                    value: 80000
                }, {
                    legend: '90,000m<sup>2</sup>',
                    value: 90000
                }, {
                    legend: '100,000m<sup>2</sup>',
                    value: 100000
                }, {
                    legend: 'Any max m<sup>2</sup>',
                    value: btSearchFilterConstants.maxRangeValue
                }
            ];
            $scope.lineOfBusiness = ['rural'];
            $scope.queryStringKeys = 'land-area';
            $scope.order = 70;

        }]
    }
}]);
;
angular.module('barfootWeb').directive('btRuralPropertyTypes', [function () {
    return {
        restrict: 'E',
        scope: {},
        templateUrl: "/assets/js/version3-mvc/angular/templates/search-panel/bt-multi-select-filter-wrapper.html",
        controller: ['$scope', function ($scope) {

            $scope.title = 'Property types';
            $scope.delimeter = ',';
            $scope.lineOfBusiness = ['rural'];
            $scope.queryStringKey = 'property-type';
            $scope.allOption = true;
            $scope.options = [
                {
                    label: 'Rural Land',
                    value: 'rural-land'
                },
                {
                    label: 'Rural property',
                    value: 'rural-property'
                }
            ];
            $scope.order = 21;

        }]
    }
}]);
;
angular.module('barfootWeb').directive('btSearchPanelAutocomplete', [function () {
    return {
        restrict: 'E',
        scope: {
            objectTypes: '=',
            searchKeywords: '=',
            showSearch: '=',
            placeholder: '=',
            queryStringKeys: '='
        },
        templateUrl: '/assets/js/version3-mvc/angular/templates/search-panel/bt-search-panel-auto-complete.html',
        controller: ['$scope', 'autocompleteService', 'autocompleteTagService', 'btSearchFilterConstants', 'cssHelperService', 'btTextService', 'btActiveLineOfBusiness', 'searchService', '$element', 'baseSearchFilter', 'deviceHelperService',
            function ($scope, autocompleteService, autocompleteTagService, btSearchFilterConstants, cssHelperService, btTextService, btActiveLineOfBusiness, searchService, $element, baseSearchFilter, deviceHelperService) {
                var delayedQuery;
                var autocompleteInput;
                var highlightedIndex = -1;
                var loader;
                var queryStringKeys = [];

                var getRenderedResults = function () {
                    return $element.find('#results .result');
                };

                var clearHighlightedResult = function (results) {
                    if (highlightedIndex !== -1) {
                        cssHelperService.removeClass(results[highlightedIndex], 'active');
                    }
                }

                var highlightResult = function (direction) {
                    var resultObjects = getRenderedResults();
                    if (highlightedIndex < resultObjects.length) {
                        clearHighlightedResult(resultObjects);
                        if (direction === 'down' && resultObjects.length > (highlightedIndex + 1)) {
                            highlightedIndex++;
                        } else if (direction === 'up' && highlightedIndex > 0) {
                            highlightedIndex--;
                        }
                        if (highlightedIndex !== -1) {
                            cssHelperService.addClass(resultObjects[highlightedIndex], 'active');
                        }
                    }
                }

                var clickHighlightedResult = function (e) {
                    e.stopPropagation();

                    setTimeout(function () {
                        var resultObjects = getRenderedResults();
                        angular.element(resultObjects[highlightedIndex]).trigger('click');
                    }, 0);
                }

                var clearAutocompleteQuery = function () {
                    if (delayedQuery) clearTimeout(delayedQuery);
                };

                var setPlaceholder = function() {
                    if ($scope.tags && $scope.tags.length > 0) {
                        autocompleteInput.placeholder = '';
                    } else {
                        autocompleteInput.placeholder = $scope.placeholder;
                    }
                }

                var closeResults = function () {
                    $scope.showResults = false;
                    $scope.queryResults = [];
                    $scope.query = '';
                    highlightedIndex = -1;
                    clearAutocompleteQuery();
                    setPlaceholder();
                    loader.style.visibility = 'hidden';
                };

                var getType = function (queryString) {
                    for (var t = 0; t < $scope.objectTypes.split(',').length; t++) {
                        if ($scope.objectTypes.split(',')[t].indexOf(queryString) >= 0) {
                            return $scope.objectTypes.split(',')[t];
                        }
                    }
                    return '';
                }

                var prepopulateTagsFromQueryString = function () {
                    for (var i = 0; i < queryStringKeys.length; i++) {
                        var values = baseSearchFilter.getSelectedValue(queryStringKeys[i]);
                        if (!values) continue;

                        values = values.split(',');
                        for (var s = 0; s < values.length; s++) {
                            var tag = btTextService.capitaliseAllWords(searchService.decodeValue(values[s]));
                            $scope.addTag({ Tag: tag, Type: getType(queryStringKeys[i]) });
                        }
                    }
                };

                var setPropertiesTitle = function() {
                    if ($scope.searchMode.toLowerCase() === 'rental') {
                        $scope.propertiesTitle = 'Properties for rent';
                    } else {
                        $scope.propertiesTitle = btTextService.capitaliseFirstLetter($scope.searchMode) + ' properties for sale';
                    }
                }

                var setSoldPropertiesTitle = function() {
                    if ($scope.searchMode.toLowerCase() === 'sold') {
                        $scope.soldPropertiesTitle = ' properties';
                    } else {
                        $scope.soldPropertiesTitle = $scope.searchMode + ' properties';
                    }
                }

                var scrollAutocomplete = function () {
                    if (deviceHelperService.isMobileDevice()) {
                        var resolution = Number(window.screen.height);
                        var position = window.pageYOffset;
                        var scrolled;
                        if (resolution <= 568) {
                            scrolled = 195;
                        } else if (resolution <= 640) {
                            scrolled = 205;
                        } else if (resolution <= 667) {
                            scrolled = 215;
                        } else if (resolution <= 736) {
                            scrolled = 225;
                        } else if (resolution <= 823) {
                            scrolled = 235;
                        } else if (resolution <= 822) {
                            scrolled = 275;
                        } else if (resolution <= 1024) {
                            scrolled = 295;
                        } else if (resolution <= 1240) {
                            scrolled = 325;
                        } else {
                            scrolled = 395;
                        }
                        window.scrollBy({ top: scrolled - position, left: 0, behavior: 'smooth' });
                    }
                }

                $scope.focus = function (e) {
                    scrollAutocomplete();
                }

                $scope.autocomplete = function () {
                    if ($scope.query.length === 0) {
                        closeResults();
                        return;
                    }

                    if ($scope.query.length <= 2 || $scope.query.length >= 30) return;

                    clearAutocompleteQuery();
                    loader.style.visibility = 'visible';

                    delayedQuery = setTimeout(function () {
                        autocompleteService.search({ mode: $scope.searchMode, query: $scope.query, objectTypes: $scope.objectTypes }).then(
                            function (response) {
                                if (response.data.Success) {
                                    $scope.queryResults = response.data.Result.Results;
                                    setPropertiesTitle();
                                    setSoldPropertiesTitle();
                                } else {
                                    $scope.queryResults = [];
                                }

                                loader.style.visibility = 'hidden';
                                $scope.showResults = true;
                                highlightedIndex = -1;
                            }, function (data, status, headers, config) {
                                $scope.queryResults = [];
                                loader.style.visibility = 'hidden';
                                $scope.showResults = true;
                                highlightedIndex = -1;
                            });
                    }, 300);
                };

                $scope.addTag = function (result) {
                    var tag = { Value: result.Tag, Type: result.Type };
                    $scope.query = '';
                    autocompleteTagService.add(tag);
                    closeResults();
                    autocompleteInput.focus();
                };

                $scope.removeTag = function (tag) {
                    autocompleteTagService.remove(tag);
                };

                $scope.goto = function (result) {
                    window.location = result.Url;
                }

                $scope.inputKeyDown = function (e) {
                    switch (e.keyCode) {
                        case 8: // backspace
                            if (!$scope.query || $scope.query === '') {
                                $scope.removeTag(autocompleteTagService.get()[autocompleteTagService.get().length - 1]);
                            }
                            break;
                        case 40: // down arrow
                            highlightResult('down');
                            break;
                        case 38: //up arrow
                            highlightResult('up');
                            break;
                        case 13: // enter
                            if (highlightedIndex === -1) {
                                $scope.search();
                            } else {
                                clickHighlightedResult(e);
                            }
                            break;
                        case 27: //esc
                            closeResults();
                            break;
                    }
                };

                $scope.search = function () {
                    if ($scope.searchKeywords) {
                        searchService.redirectToSearch($scope.searchMode, $scope.tags, $scope.query);
                    } else {
                        searchService.redirectToSearch($scope.searchMode, $scope.tags, '');
                    }
                };

                $scope.existsTag = function (tag) {
                    for (var j = 0; j < $scope.tags.length; j++) {
                        if ((tag.Value === $scope.tags[j].Value) && (tag.Type === $scope.tags[j].Type)) {
                            return true;
                        }
                    }
                    return false;
                }

                $scope.isTagAllowed = function (tag) {
                    for (var j = 0; j < $scope.objectTypes.split(',').length; j++) {
                        if (tag.Type === $scope.objectTypes.split(',')[j]) {
                            return true;
                        }
                    }
                    return false;
                }

                var init = function () {

                    $scope.searchMode = btActiveLineOfBusiness;
                    $scope.resultGroupLimit = 7;
                    autocompleteInput = $element.find('#autocompleteInput')[0];
                    loader = $element.find('#autocompleteLoader')[0];

                    btEvents.addListener(btEventType.onLineOfBusinessChange, function (e, lob) {
                        if ($scope.searchMode === lob || !lob) return;
                        $scope.searchMode = lob;
                        closeResults();
                    });

                    btEvents.addListener(btEventType.ClearAutoComplete, function () {
                        $scope.tags = [];
                        autocompleteTagService.clear();
                        $scope.query = '';
                        $scope.showResults = false;
                        setPlaceholder();
                    });
                    
                    btEvents.addListener(btEventType.AutoCompleteTagsChanged, function (data, tagData) {
                        $scope.tags = tagData.tags;
                        setPlaceholder();
                    });

                    if ($scope.queryStringKeys) {
                        queryStringKeys = $scope.queryStringKeys.split(',');
                        prepopulateTagsFromQueryString();
                    }
                };

                init();
            }]
    }
}]);;
angular.module('barfootWeb').controller('SelectableListController',
    [ '$scope', function ($scope) {
            var vm = this;
            vm.selected = function (index, item) {
                $scope.$emit(btEventType.SelectedListItemChanged, { index: index, item: item });
            }
        }
    ]);

angular.module('barfootWeb').directive('btSelectableListFilter', [function () {
    return {
        restrict: 'E',
        require: '^btRegionSuburbFilter',
        scope: {
            options: '=',
            visible: '=',
            hasChildren: '='
        },
        controller: 'SelectableListController',
        bindToController: true,
        controllerAs: 'vm',
        templateUrl: '/assets/js/version3-mvc/angular/templates/search-panel/bt-selectable-list-filter.html'
    }
}]);
;
angular.module('barfootWeb').directive('btSortPropertyFilter', [function () {
    return {
        restrict: 'E',
        scope: {},
        templateUrl: "/assets/js/version3-mvc/angular/templates/search-panel/bt-sort-property-filter.html",
        controller: ['$scope', function ($scope) {
            $scope.title = 'Sort properties by';
            $scope.name = 'sort';
            $scope.defaultValue = 'Date';
            $scope.options = [
                {
                    label: 'Newest',
                    value: ''
                },
                {
                    label: 'Oldest',
                    value: 'oldest'
                },
                {
                    label: 'Highest price',
                    value: 'highest-price'
                },
                {
                    label: 'Lowest price',
                    value: 'lowest-price'
                }
            ];
            $scope.linesOfBusiness = ['commercial', 'rural', 'residential', 'rental'];
            $scope.queryStringKey = 'sort';
            $scope.order = 80;
        }]
    }
}]);;
angular.module('barfootWeb').controller('TextboxController', ['$scope', 'baseSearchFilter', 'btActiveLineOfBusiness', 'searchService',
    function ($scope, baseSearchFilter, btActiveLineOfBusiness, searchService) {
        var vm = this;
        $scope.order = vm.order;

        $scope.generatedQueryString = function () {
            if (vm.generatedQueryStringOverride) {
                return vm.generatedQueryStringOverride;
            }
            
            var returnValue = '';
            if(!vm.visible) return returnValue;

            if (vm.searchText) {
                return vm.queryStringKey + '=' + searchService.encodeValue(vm.searchText);
            }
            return returnValue;
        }

        var init = function () {
            if (vm.initOverride) {
                vm.initOverride();
            }
            else {
                var value = baseSearchFilter.getSelectedValue(vm.queryStringKey);
                if (value) {
                    vm.searchText = searchService.decodeValue(value);
                } else {
                    vm.searchText = '';
                }
                vm.visible = baseSearchFilter.isVisible(vm.linesOfBusiness.split(','), btActiveLineOfBusiness);
                vm.activeLineOfBusiness = btActiveLineOfBusiness;
                btEvents.addListener(btEventType.onLineOfBusinessChange, function (e, activeLob) {
                    vm.visible = baseSearchFilter.isVisible(vm.linesOfBusiness.split(','), activeLob);
                    vm.activeLineOfBusiness = activeLob;
                });
            }
            vm.name = vm.linesOfBusiness + '-' + vm.activeLineOfBusiness;
        };

        $scope.initDefault = function () {
            vm.searchText = '';
        }

        if ($scope.resetOverride) {
            $scope.reset = $scope.resetOverride;
        } else {
            $scope.reset = function () {
                vm.searchText = '';
            };
        }

        init();
    }]);

angular.module('barfootWeb').directive('btTextboxFilter', [function () {
    return {
        restrict: 'E',
        require: '^^btMoreFilters',
        scope: {
            heading: '=',
            placeholder: '=',
            linesOfBusiness: '=',
            queryStringKey: '=',
            initOverride: '&?',
            generatedQueryStringOverride: '&?',
            resetOverride: '&?',
            order: '='
        },
        controller: 'TextboxController',
        bindToController: true,
        controllerAs: 'vm',
        templateUrl: "/assets/js/version3-mvc/angular/templates/search-panel/bt-textbox-filter.html",
        link: function (scope, element, attrs, parentController) {
            parentController.addChild(scope);
        }

    }
}]);
;
angular.module('barfootWeb').controller('saveSearchController', ['cssHelperService', '$scope', '$timeout', 'focus', 'btAccounts', 'btManageAccountsService', '$element', 'folioService', 'btUrlQueryService',
    function (cssHelperService, $scope, $timeout, focus, btAccounts, btManageAccountsService, $element, folioService, btUrlQueryService) {
        var vm = this;
        var selectedFrequency = null;
        var selectedOpenHome = null;
        vm.submitting = false;
        vm.visible = false;
        vm.placeholder = "ie. Favourite properties";
        var noSpecialCharacters = /^[a-z\-\,\;\:\d\-_\s&]+$/i;

        var removeParam = function (key, sourceUrl) {
            var rtn = sourceUrl.split("?")[0],
                param,
                paramsArr = [],
                queryString = (sourceUrl.indexOf("?") !== -1) ? sourceUrl.split("?")[1] : "";
            if (queryString !== "") {
                paramsArr = queryString.split("&");
                for (var i = paramsArr.length - 1; i >= 0; i -= 1) {
                    param = paramsArr[i].split("=")[0];
                    if (param === key) {
                        paramsArr.splice(i, 1);
                    }
                }
                rtn = rtn + "?" + paramsArr.join("&");
            }
            return rtn;
        }

        vm.validateField = function (form){
            if (noSpecialCharacters.test(vm.inputName)) {
                form.inputName.$setValidity('validationError', true);
            } else {
                form.inputName.$setValidity('validationError', false);
            }
        }

        var reset = function () {
            vm.submitError = false;
            vm.submitting = false;
            vm.showValidations = false;
            vm.validationErrors = [];
        }

        vm.saveSearch = function (form) {
            form.inputName.$setValidity('customValidationError', true);

            reset();

            if (form.$valid) {
                vm.submitting = true;
                
                var folio = {
                    Name: vm.inputName,
                    Frequency: selectedFrequency,
                    OpenHome: selectedOpenHome,
                    Url: encodeURIComponent(window.location.pathname)
                };

                folioService.save(folio).then(
                    function(response) {
                        if (response.data.Success) {
                            btEvents.trigger(btEventType.searchHasBeenSaved,
                                {
                                    Name: vm.inputName,
                                    Href: window.location.href,
                                    FolioId: response.data.FolioId
                                });
                            vm.submitting = false;
                            vm.formVisible = false;
                            vm.confirmationVisible = true;
                            vm.inputName = '';
                            vm.frequencyClick(vm.frequency[0].value, true);
                            vm.openHomeClick(vm.openHomes[0].value, true);
                        } else if (response.data.ValidationErrors) {
                            form.inputName.$setValidity('customValidationError', false);
                            vm.validationErrors = response.data.ValidationErrors;
                            vm.showValidations = true;
                            vm.submitting = false;
                        } else {
                            vm.submitError = true;
                            vm.submitting = false;
                        }
                    });
            } else {
                vm.showValidations = true;
            }
        }

        vm.closeSearch = function () {
            reset();

            vm.visible = false;
            vm.formVisible = true;
            vm.confirmationVisible = false;
            cssHelperService.removeClass(document.body, 'no-scroll');
            window.history.replaceState({}, document.title, "/" + removeParam("saveSearch", (location.pathname + location.search).substr(1)));
        }

        vm.frequencyClick = function (value) {
            selectedFrequency = value;
        }

        vm.openHomeClick = function (value) {
            selectedOpenHome = value;
        }

        vm.toggleSearchResultSave = function () {
            if (!vm.visible) {
                btManageAccountsService.isUserAuthenticated().then(
                    function (response) {
                        if (JSON.parse(response.data)) {
                            vm.visible = true;
                            cssHelperService.addClass(document.body, 'no-scroll');
                            focus('focusMe');
                            vm.inputName = document.querySelectorAll('.search-result-heading')[0].innerText;
                        } else {
                            var saveSearch = btUrlQueryService.getUrlParam('saveSearch');
                            if (!saveSearch) {
                                var queryStringParam = '?';
                                if (window.location.href.indexOf('?') !== -1) {
                                    queryStringParam = '&';
                                }
                                btAccounts().showLoginWithParameter(queryStringParam + 'saveSearch=true');
                            } else {
                                btAccounts().showLogin();
                            }
                        }
                    });
            }
        }

        var setDefaults = function() {
            for (var i = 0; i < vm.frequency.length; i++) {
                if (vm.frequency[i].checked) {
                    selectedFrequency = vm.frequency[i].value;
                    break;
                }
            }
            for (var j = 0; j < vm.openHomes.length; j++) {
                if (vm.openHomes[j].checked) {
                    selectedOpenHome = vm.openHomes[j].value;
                    break;
                }
            }
        }

        var init = function () {
            var saveSearch = btUrlQueryService.getUrlParam('saveSearch');
            if (saveSearch) {
                vm.visible = true;
                cssHelperService.addClass(document.body, 'no-scroll');
                vm.inputName = document.querySelectorAll('.search-result-heading')[0].innerText;
            }
            vm.formVisible = true;
            vm.showValidations = false;
            vm.confirmationVisible = false;
            vm.submitError = false;
            vm.namePlaceholder = vm.placeholder;
            vm.frequency = [
                {
                    label: 'Weekly',
                    value: 'Weekly',
                    checked: true
                },
                {
                    label: 'Daily',
                    value: 'Daily',
                    checked: false
                },
                {
                    label: 'Never',
                    value: 'Never',
                    checked: false
                }
            ];
            vm.openHomes = [
                {
                    label: 'Yes',
                    value: 'true',
                    checked: true
                },
                {
                    label: 'No',
                    value: 'false',
                    checked: false
                }
            ];
            setDefaults();
            btEvents.addListener(btEventType.ToggleSearchResultsSave, function () {
                vm.toggleSearchResultSave();
            });
            focus('focusMe');
        };

        init();
    }]);

angular.module('barfootWeb').directive('btSaveSearch', [function () {
    return {
        restrict: 'E',
        scope: {
        },
        templateUrl: '/assets/js/version3-mvc/angular/templates/search-results/bt-save-search.html',
        controller: 'saveSearchController',
        bindToController: true,
        controllerAs: 'vm'
    }
}]);
;
angular.module('barfootWeb').directive('btSearchResults', [function () {
    return {
        restrict: 'E',
        scope: {
            tabData: '='
        },
        templateUrl: "/assets/js/version3-mvc/angular/templates/search-results/bt-search-results.html",
        controller: ['$scope', 'btCarouselService', 'btFavouritesService', 'cssHelperService', function ($scope, btCarouselService, btFavouritesService, cssHelperService) {

            $scope.carouselPrevious = function (id) {
                btCarouselService.movePrevious(id);
            };

            $scope.carouselNext = function (id) {
                btCarouselService.moveNext(id);
            };

            $scope.favourite = function($event, sourceRefNo) {
                var isFavourite = $event.currentTarget.getAttribute('data-favourite');
                if (isFavourite === 'true') {
                    btFavouritesService.deleteFavourite(sourceRefNo);
                }
                else {
                    btFavouritesService.addToFavourites(sourceRefNo);
                }
            }

            btEvents.addListener(btEventType.onPropertySaveOrUnsave, function (e, val) {

                var favouriteElement;
                var addClass = '';
                var removeClass = '';
                var favourite;

                if (val.Operation === 'save') {
                    favouriteElement = document.querySelectorAll('[data-id="' + val.SavedProperty.SourceRefNo + '"]')[0];
                    addClass = 'i-full-star';
                    removeClass = 'i-star';
                    favourite = 'true';
                } else if (val.Operation === 'unsave') {
                    favouriteElement = document.querySelectorAll('[data-id="' + val.SourceRefNo + '"]')[0];
                    addClass = 'i-star';
                    removeClass = 'i-full-star';
                    favourite = 'false';
                }

                if (favouriteElement) {
                    cssHelperService.removeClass(favouriteElement, removeClass);
                    cssHelperService.addClass(favouriteElement, addClass);
                    favouriteElement.setAttribute('data-favourite', favourite);
                }
            });

        }]
    }
}]);
;
angular.module('barfootWeb').directive('focusOn', function () {
    return function (scope, elem, attr) {
        scope.$on('focusOn', function (e, name) {
            if (name === attr.focusOn) {
                elem[0].focus();
            }
        });
    };
});

angular.module('barfootWeb').factory('focus', function ($rootScope, $timeout) {
    return function (name) {
        $timeout(function () {
            $rootScope.$broadcast('focusOn', name);
        });
    }
});
;
